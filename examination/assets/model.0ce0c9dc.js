import{n as ep}from"./navbar.758bfc20.js";import{a as tp}from"./orders.163834d3.js";import{_ as np,m as ip,b as Ca,n as zi}from"./index.481b1b11.js";import{B as rp,r as on,v as sp,o as Hi,j as Ys,k as ze,w as at,x as jl,l as Lt,C as ql,D as Xl,G as Ra,c as Yl,H as op,F as Zl,p as ap,n as cp,t as Vi,s as lp,m as Pa}from"./vendor.53736fc6.js";Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Number.isInteger===void 0&&(Number.isInteger=function(t){return typeof t=="number"&&isFinite(t)&&Math.floor(t)===t});Math.sign===void 0&&(Math.sign=function(t){return t<0?-1:t>0?1:+t});"name"in Function.prototype||Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});Object.assign===void 0&&(Object.assign=function(t){if(t==null)throw new TypeError("Cannot convert undefined or null to object");const e=Object(t);for(let n=1;n<arguments.length;n++){const i=arguments[n];if(i!=null)for(const r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e});const hh="120",up={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},hp={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},fh=0,uc=1,dh=2,fp=3,dp=0,$c=1,ph=2,hr=3,Bi=0,lt=1,Gs=2,Qc=1,pp=2,Rn=0,gr=1,hc=2,fc=3,dc=4,mh=5,mi=100,gh=101,vh=102,pc=103,mc=104,yh=200,xh=201,_h=202,bh=203,el=204,tl=205,wh=206,Mh=207,Sh=208,Th=209,Eh=210,Ah=0,Lh=1,Ch=2,Vo=3,Rh=4,Ph=5,Ih=6,Dh=7,Br=0,Oh=1,Fh=2,xi=0,Bh=1,Nh=2,Uh=3,Gh=4,zh=5,da=300,zs=301,Hs=302,br=303,ko=304,Nr=306,Vs=307,bi=1e3,pt=1001,hs=1002,ut=1003,Wo=1004,mp=1004,jo=1005,gp=1005,rt=1006,nl=1007,vp=1007,Ur=1008,yp=1008,Gr=1009,Hh=1010,Vh=1011,fs=1012,kh=1013,is=1014,An=1015,ds=1016,Wh=1017,jh=1018,qh=1019,vr=1020,Xh=1021,jn=1022,It=1023,Yh=1024,Zh=1025,Jh=It,_i=1026,wr=1027,Kh=1028,$h=1029,Qh=1030,ef=1031,tf=1032,nf=1033,gc=33776,vc=33777,yc=33778,xc=33779,_c=35840,bc=35841,wc=35842,Mc=35843,rf=36196,Sc=37492,Tc=37496,sf=37808,of=37809,af=37810,cf=37811,lf=37812,uf=37813,hf=37814,ff=37815,df=37816,pf=37817,mf=37818,gf=37819,vf=37820,yf=37821,xf=36492,_f=37840,bf=37841,wf=37842,Mf=37843,Sf=37844,Tf=37845,Ef=37846,Af=37847,Lf=37848,Cf=37849,Rf=37850,Pf=37851,If=37852,Df=37853,Of=2200,Ff=2201,Bf=2202,ps=2300,rs=2301,Go=2302,vi=2400,yi=2401,ms=2402,pa=2500,il=2501,Nf=0,xp=1,_p=2,bt=3e3,Ln=3001,ma=3007,ga=3002,Uf=3003,rl=3004,sl=3005,ol=3006,Gf=3200,zf=3201,Ni=0,Hf=1,bp=0,zo=7680,wp=7681,Mp=7682,Sp=7683,Tp=34055,Ep=34056,Ap=5386,Lp=512,Cp=513,Rp=514,Pp=515,Ip=516,Dp=517,Op=518,Vf=519,ks=35044,wi=35048,Fp=35040,Bp=35045,Np=35049,Up=35041,Gp=35046,zp=35050,Hp=35042,Vp="100",Ec="300 es";function vn(){}Object.assign(vn.prototype,{addEventListener:function(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)},hasEventListener:function(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}},dispatchEvent:function(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,t)}}});const dt=[];for(let t=0;t<256;t++)dt[t]=(t<16?"0":"")+t.toString(16);let Zs=1234567;const be={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(dt[t&255]+dt[t>>8&255]+dt[t>>16&255]+dt[t>>24&255]+"-"+dt[e&255]+dt[e>>8&255]+"-"+dt[e>>16&15|64]+dt[e>>24&255]+"-"+dt[n&63|128]+dt[n>>8&255]+"-"+dt[n>>16&255]+dt[n>>24&255]+dt[i&255]+dt[i>>8&255]+dt[i>>16&255]+dt[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return t!==void 0&&(Zs=t%2147483647),Zs=Zs*16807%2147483647,(Zs-1)/2147483646},degToRad:function(t){return t*be.DEG2RAD},radToDeg:function(t){return t*be.RAD2DEG},isPowerOfTwo:function(t){return(t&t-1)===0&&t!==0},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const s=Math.cos,o=Math.sin,a=s(n/2),c=o(n/2),l=s((e+i)/2),h=o((e+i)/2),u=s((e-i)/2),f=o((e-i)/2),d=s((i-e)/2),m=o((i-e)/2);switch(r){case"XYX":t.set(a*h,c*u,c*f,a*l);break;case"YZY":t.set(c*f,a*h,c*u,a*l);break;case"ZXZ":t.set(c*u,c*f,a*h,a*l);break;case"XZX":t.set(a*h,c*m,c*d,a*l);break;case"YXY":t.set(c*d,a*h,c*m,a*l);break;case"ZYZ":t.set(c*m,c*d,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class Y{constructor(e=0,n=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n){return n===void 0&&(n=0),this.x=e[n],this.y=e[n+1],this}toArray(e,n){return e===void 0&&(e=[]),n===void 0&&(n=0),e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),r=Math.sin(n),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class yt{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,o,a,c,l){const h=this.elements;return h[0]=e,h[1]=r,h[2]=a,h[3]=n,h[4]=s,h[5]=c,h[6]=i,h[7]=o,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,o=i[0],a=i[3],c=i[6],l=i[1],h=i[4],u=i[7],f=i[2],d=i[5],m=i[8],b=r[0],w=r[3],v=r[6],p=r[1],E=r[4],A=r[7],R=r[2],S=r[5],D=r[8];return s[0]=o*b+a*p+c*R,s[3]=o*w+a*E+c*S,s[6]=o*v+a*A+c*D,s[1]=l*b+h*p+u*R,s[4]=l*w+h*E+u*S,s[7]=l*v+h*A+u*D,s[2]=f*b+d*p+m*R,s[5]=f*w+d*E+m*S,s[8]=f*v+d*A+m*D,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],c=e[6],l=e[7],h=e[8];return n*o*h-n*a*l-i*s*h+i*a*c+r*s*l-r*o*c}getInverse(e,n){n!==void 0&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const i=e.elements,r=this.elements,s=i[0],o=i[1],a=i[2],c=i[3],l=i[4],h=i[5],u=i[6],f=i[7],d=i[8],m=d*l-h*f,b=h*u-d*c,w=f*c-l*u,v=s*m+o*b+a*w;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/v;return r[0]=m*p,r[1]=(a*f-d*o)*p,r[2]=(h*o-a*l)*p,r[3]=b*p,r[4]=(d*s-a*u)*p,r[5]=(a*c-h*s)*p,r[6]=w*p,r[7]=(o*u-f*s)*p,r[8]=(l*s-o*c)*p,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).getInverse(this).transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,r,s,o,a){const c=Math.cos(s),l=Math.sin(s);this.set(i*c,i*l,-i*(c*o+l*a)+o+e,-r*l,r*c,-r*(-l*o+c*a)+a+n,0,0,1)}scale(e,n){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=n,i[4]*=n,i[7]*=n,this}rotate(e){const n=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],c=r[1],l=r[4],h=r[7];return r[0]=n*s+i*c,r[3]=n*o+i*l,r[6]=n*a+i*h,r[1]=-i*s+n*c,r[4]=-i*o+n*l,r[7]=-i*a+n*h,this}translate(e,n){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=n*i[2],i[4]+=n*i[5],i[7]+=n*i[8],this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n){n===void 0&&(n=0);for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e,n){e===void 0&&(e=[]),n===void 0&&(n=0);const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}}let ki;const Zn={getDataURL:function(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement=="undefined")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{ki===void 0&&(ki=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),ki.width=t.width,ki.height=t.height;const n=ki.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=ki}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let kp=0;function Ge(t,e,n,i,r,s,o,a,c,l){Object.defineProperty(this,"id",{value:kp++}),this.uuid=be.generateUUID(),this.name="",this.image=t!==void 0?t:Ge.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=e!==void 0?e:Ge.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:pt,this.wrapT=i!==void 0?i:pt,this.magFilter=r!==void 0?r:rt,this.minFilter=s!==void 0?s:Ur,this.anisotropy=c!==void 0?c:1,this.format=o!==void 0?o:It,this.internalFormat=null,this.type=a!==void 0?a:Gr,this.offset=new Y(0,0),this.repeat=new Y(1,1),this.center=new Y(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l!==void 0?l:bt,this.version=0,this.onUpdate=null}Ge.DEFAULT_IMAGE=void 0;Ge.DEFAULT_MAPPING=da;Ge.prototype=Object.assign(Object.create(vn.prototype),{constructor:Ge,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=be.generateUUID()),!e&&t.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)r.push(Zn.getDataURL(i[s]))}else r=Zn.getDataURL(i);t.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==da)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case bi:t.x=t.x-Math.floor(t.x);break;case pt:t.x=t.x<0?0:1;break;case hs:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case bi:t.y=t.y-Math.floor(t.y);break;case pt:t.y=t.y<0?0:1;break;case hs:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}});Object.defineProperty(Ge.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});class Be{constructor(e=0,n=0,i=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,r){return this.x=e,this.y=n,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*n+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*n+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*n+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*n+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,r,s;const c=e.elements,l=c[0],h=c[4],u=c[8],f=c[1],d=c[5],m=c[9],b=c[2],w=c[6],v=c[10];if(Math.abs(h-f)<.01&&Math.abs(u-b)<.01&&Math.abs(m-w)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+b)<.1&&Math.abs(m+w)<.1&&Math.abs(l+d+v-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const E=(l+1)/2,A=(d+1)/2,R=(v+1)/2,S=(h+f)/4,D=(u+b)/4,N=(m+w)/4;return E>A&&E>R?E<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(E),r=S/i,s=D/i):A>R?A<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(A),i=S/r,s=N/r):R<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(R),i=D/s,r=N/s),this.set(i,r,s,n),this}let p=Math.sqrt((w-m)*(w-m)+(u-b)*(u-b)+(f-h)*(f-h));return Math.abs(p)<.001&&(p=1),this.x=(w-m)/p,this.y=(u-b)/p,this.z=(f-h)/p,this.w=Math.acos((l+d+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n){return n===void 0&&(n=0),this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e,n){return e===void 0&&(e=[]),n===void 0&&(n=0),e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function Dt(t,e,n){this.width=t,this.height=e,this.scissor=new Be(0,0,t,e),this.scissorTest=!1,this.viewport=new Be(0,0,t,e),n=n||{},this.texture=new Ge(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:rt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}Dt.prototype=Object.assign(Object.create(vn.prototype),{constructor:Dt,isWebGLRenderTarget:!0,setSize:function(t,e){(this.width!==t||this.height!==e)&&(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Ac(t,e,n){Dt.call(this,t,e,n),this.samples=4}Ac.prototype=Object.assign(Object.create(Dt.prototype),{constructor:Ac,isWebGLMultisampleRenderTarget:!0,copy:function(t){return Dt.prototype.copy.call(this,t),this.samples=t.samples,this}});class st{constructor(e=0,n=0,i=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=n,this._z=i,this._w=r}static slerp(e,n,i,r){return i.copy(e).slerp(n,r)}static slerpFlat(e,n,i,r,s,o,a){let c=i[r+0],l=i[r+1],h=i[r+2],u=i[r+3];const f=s[o+0],d=s[o+1],m=s[o+2],b=s[o+3];if(u!==b||c!==f||l!==d||h!==m){let w=1-a;const v=c*f+l*d+h*m+u*b,p=v>=0?1:-1,E=1-v*v;if(E>Number.EPSILON){const R=Math.sqrt(E),S=Math.atan2(R,v*p);w=Math.sin(w*S)/R,a=Math.sin(a*S)/R}const A=a*p;if(c=c*w+f*A,l=l*w+d*A,h=h*w+m*A,u=u*w+b*A,w===1-a){const R=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=R,l*=R,h*=R,u*=R}}e[n]=c,e[n+1]=l,e[n+2]=h,e[n+3]=u}static multiplyQuaternionsFlat(e,n,i,r,s,o){const a=i[r],c=i[r+1],l=i[r+2],h=i[r+3],u=s[o],f=s[o+1],d=s[o+2],m=s[o+3];return e[n]=a*m+h*u+c*d-l*f,e[n+1]=c*m+h*f+l*u-a*d,e[n+2]=l*m+h*d+a*f-c*u,e[n+3]=h*m-a*u-c*f-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,c=Math.sin,l=a(i/2),h=a(r/2),u=a(s/2),f=c(i/2),d=c(r/2),m=c(s/2);switch(o){case"XYZ":this._x=f*h*u+l*d*m,this._y=l*d*u-f*h*m,this._z=l*h*m+f*d*u,this._w=l*h*u-f*d*m;break;case"YXZ":this._x=f*h*u+l*d*m,this._y=l*d*u-f*h*m,this._z=l*h*m-f*d*u,this._w=l*h*u+f*d*m;break;case"ZXY":this._x=f*h*u-l*d*m,this._y=l*d*u+f*h*m,this._z=l*h*m+f*d*u,this._w=l*h*u-f*d*m;break;case"ZYX":this._x=f*h*u-l*d*m,this._y=l*d*u+f*h*m,this._z=l*h*m-f*d*u,this._w=l*h*u+f*d*m;break;case"YZX":this._x=f*h*u+l*d*m,this._y=l*d*u+f*h*m,this._z=l*h*m-f*d*u,this._w=l*h*u-f*d*m;break;case"XZY":this._x=f*h*u-l*d*m,this._y=l*d*u-f*h*m,this._z=l*h*m+f*d*u,this._w=l*h*u+f*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],r=n[4],s=n[8],o=n[1],a=n[5],c=n[9],l=n[2],h=n[6],u=n[10],f=i+a+u;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(h-c)*d,this._y=(s-l)*d,this._z=(o-r)*d}else if(i>a&&i>u){const d=2*Math.sqrt(1+i-a-u);this._w=(h-c)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+l)/d}else if(a>u){const d=2*Math.sqrt(1+a-i-u);this._w=(s-l)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(c+h)/d}else{const d=2*Math.sqrt(1+u-i-a);this._w=(o-r)/d,this._x=(s+l)/d,this._y=(c+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let r=e.dot(n)+1;return r<1e-6?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(be.clamp(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}inverse(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,n){return n!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,n)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,r=e._y,s=e._z,o=e._w,a=n._x,c=n._y,l=n._z,h=n._w;return this._x=i*h+o*a+r*l-s*c,this._y=r*h+o*c+s*a-i*l,this._z=s*h+o*l+i*c-r*a,this._w=o*h-i*a-r*c-s*l,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const c=1-a*a;if(c<=Number.EPSILON){const d=1-n;return this._w=d*o+n*this._w,this._x=d*i+n*this._x,this._y=d*r+n*this._y,this._z=d*s+n*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(c),h=Math.atan2(l,a),u=Math.sin((1-n)*h)/l,f=Math.sin(n*h)/l;return this._w=o*u+this._w*f,this._x=i*u+this._x*f,this._y=r*u+this._y*f,this._z=s*u+this._z*f,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n){return n===void 0&&(n=0),this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e,n){return e===void 0&&(e=[]),n===void 0&&(n=0),e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class C{constructor(e=0,n=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,n)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Jl.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(Jl.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6]*r,this.y=s[1]*n+s[4]*i+s[7]*r,this.z=s[2]*n+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*n+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*n+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*n+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*n+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const n=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,c=e.w,l=c*n+o*r-a*i,h=c*i+a*n-s*r,u=c*r+s*i-o*n,f=-s*n-o*i-a*r;return this.x=l*c+f*-s+h*-a-u*-o,this.y=h*c+f*-o+u*-s-l*-a,this.z=u*c+f*-a+l*-o-h*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[4]*i+s[8]*r,this.y=s[1]*n+s[5]*i+s[9]*r,this.z=s[2]*n+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e,n){return n!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,n)):this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,r=e.y,s=e.z,o=n.x,a=n.y,c=n.z;return this.x=r*c-s*a,this.y=s*o-i*c,this.z=i*a-r*o,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Ia.copy(this).projectOnVector(e),this.sub(Ia)}reflect(e){return this.sub(Ia.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(be.clamp(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return n*n+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const r=Math.sin(n)*e;return this.x=r*Math.sin(i),this.y=Math.cos(n)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n){return n===void 0&&(n=0),this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e,n){return e===void 0&&(e=[]),n===void 0&&(n=0),e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const Ia=new C,Jl=new st;class sn{constructor(e,n){Object.defineProperty(this,"isBox3",{value:!0}),this.min=e!==void 0?e:new C(1/0,1/0,1/0),this.max=n!==void 0?n:new C(-1/0,-1/0,-1/0)}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,l=e.length;c<l;c+=3){const h=e[c],u=e[c+1],f=e[c+2];h<n&&(n=h),u<i&&(i=u),f<r&&(r=f),h>s&&(s=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,l=e.count;c<l;c++){const h=e.getX(c),u=e.getY(c),f=e.getZ(c);h<n&&(n=h),u<i&&(i=u),f<r&&(r=f),h>s&&(s=h),u>o&&(o=u),f>a&&(a=f)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=qr.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new C),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new C),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const n=e.geometry;n!==void 0&&(n.boundingBox===null&&n.computeBoundingBox(),Oa.copy(n.boundingBox),Oa.applyMatrix4(e.matrixWorld),this.union(Oa));const i=e.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),n=new C),n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,qr),qr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Xr),Js.subVectors(this.max,Xr),Wi.subVectors(e.a,Xr),ji.subVectors(e.b,Xr),qi.subVectors(e.c,Xr),Nn.subVectors(ji,Wi),Un.subVectors(qi,ji),si.subVectors(Wi,qi);let n=[0,-Nn.z,Nn.y,0,-Un.z,Un.y,0,-si.z,si.y,Nn.z,0,-Nn.x,Un.z,0,-Un.x,si.z,0,-si.x,-Nn.y,Nn.x,0,-Un.y,Un.x,0,-si.y,si.x,0];return!Da(n,Wi,ji,qi,Js)||(n=[1,0,0,0,1,0,0,0,1],!Da(n,Wi,ji,qi,Js))?!1:(Ks.crossVectors(Nn,Un),n=[Ks.x,Ks.y,Ks.z],Da(n,Wi,ji,qi,Js))}clampPoint(e,n){return n===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),n=new C),n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return qr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(qr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(_n[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_n[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_n[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_n[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_n[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_n[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_n[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_n[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_n),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function Da(t,e,n,i,r){for(let s=0,o=t.length-3;s<=o;s+=3){oi.fromArray(t,s);const a=r.x*Math.abs(oi.x)+r.y*Math.abs(oi.y)+r.z*Math.abs(oi.z),c=e.dot(oi),l=n.dot(oi),h=i.dot(oi);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const _n=[new C,new C,new C,new C,new C,new C,new C,new C],qr=new C,Oa=new sn,Wi=new C,ji=new C,qi=new C,Nn=new C,Un=new C,si=new C,Xr=new C,Js=new C,Ks=new C,oi=new C,Wp=new sn;class Bn{constructor(e,n){this.center=e!==void 0?e:new C,this.radius=n!==void 0?n:-1}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):Wp.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),n=new C),n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new sn),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const bn=new C,Fa=new C,$s=new C,Gn=new C,Ba=new C,Qs=new C,Na=new C;class zr{constructor(e,n){this.origin=e!==void 0?e:new C,this.direction=n!==void 0?n:new C(0,0,-1)}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n===void 0&&(console.warn("THREE.Ray: .at() target is now required"),n=new C),n.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,bn)),this}closestPointToPoint(e,n){n===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),n=new C),n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=bn.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(bn.copy(this.direction).multiplyScalar(n).add(this.origin),bn.distanceToSquared(e))}distanceSqToSegment(e,n,i,r){Fa.copy(e).add(n).multiplyScalar(.5),$s.copy(n).sub(e).normalize(),Gn.copy(this.origin).sub(Fa);const s=e.distanceTo(n)*.5,o=-this.direction.dot($s),a=Gn.dot(this.direction),c=-Gn.dot($s),l=Gn.lengthSq(),h=Math.abs(1-o*o);let u,f,d,m;if(h>0)if(u=o*c-a,f=o*a-c,m=s*h,u>=0)if(f>=-m)if(f<=m){const b=1/h;u*=b,f*=b,d=u*(u+o*f+2*a)+f*(o*u+f+2*c)+l}else f=s,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*c)+l;else f=-s,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*c)+l;else f<=-m?(u=Math.max(0,-(-o*s+a)),f=u>0?-s:Math.min(Math.max(-s,-c),s),d=-u*u+f*(f+2*c)+l):f<=m?(u=0,f=Math.min(Math.max(-s,-c),s),d=f*(f+2*c)+l):(u=Math.max(0,-(o*s+a)),f=u>0?s:Math.min(Math.max(-s,-c),s),d=-u*u+f*(f+2*c)+l);else f=o>0?-s:s,u=Math.max(0,-(o*f+a)),d=-u*u+f*(f+2*c)+l;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy($s).multiplyScalar(f).add(Fa),d}intersectSphere(e,n){bn.subVectors(e.center,this.origin);const i=bn.dot(this.direction),r=bn.dot(bn)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,c=i+o;return a<0&&c<0?null:a<0?this.at(c,n):this.at(a,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,r,s,o,a,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return l>=0?(i=(e.min.x-f.x)*l,r=(e.max.x-f.x)*l):(i=(e.max.x-f.x)*l,r=(e.min.x-f.x)*l),h>=0?(s=(e.min.y-f.y)*h,o=(e.max.y-f.y)*h):(s=(e.max.y-f.y)*h,o=(e.min.y-f.y)*h),i>o||s>r||((s>i||i!==i)&&(i=s),(o<r||r!==r)&&(r=o),u>=0?(a=(e.min.z-f.z)*u,c=(e.max.z-f.z)*u):(a=(e.max.z-f.z)*u,c=(e.min.z-f.z)*u),i>c||a>r)||((a>i||i!==i)&&(i=a),(c<r||r!==r)&&(r=c),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(e){return this.intersectBox(e,bn)!==null}intersectTriangle(e,n,i,r,s){Ba.subVectors(n,e),Qs.subVectors(i,e),Na.crossVectors(Ba,Qs);let o=this.direction.dot(Na),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Gn.subVectors(this.origin,e);const c=a*this.direction.dot(Qs.crossVectors(Gn,Qs));if(c<0)return null;const l=a*this.direction.dot(Ba.cross(Gn));if(l<0||c+l>o)return null;const h=-a*Gn.dot(Na);return h<0?null:this.at(h/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class fe{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,o,a,c,l,h,u,f,d,m,b,w){const v=this.elements;return v[0]=e,v[4]=n,v[8]=i,v[12]=r,v[1]=s,v[5]=o,v[9]=a,v[13]=c,v[2]=l,v[6]=h,v[10]=u,v[14]=f,v[3]=d,v[7]=m,v[11]=b,v[15]=w,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new fe().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,r=1/Xi.setFromMatrixColumn(e,0).length(),s=1/Xi.setFromMatrixColumn(e,1).length(),o=1/Xi.setFromMatrixColumn(e,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*s,n[5]=i[5]*s,n[6]=i[6]*s,n[7]=0,n[8]=i[8]*o,n[9]=i[9]*o,n[10]=i[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const n=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),c=Math.cos(r),l=Math.sin(r),h=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const f=o*h,d=o*u,m=a*h,b=a*u;n[0]=c*h,n[4]=-c*u,n[8]=l,n[1]=d+m*l,n[5]=f-b*l,n[9]=-a*c,n[2]=b-f*l,n[6]=m+d*l,n[10]=o*c}else if(e.order==="YXZ"){const f=c*h,d=c*u,m=l*h,b=l*u;n[0]=f+b*a,n[4]=m*a-d,n[8]=o*l,n[1]=o*u,n[5]=o*h,n[9]=-a,n[2]=d*a-m,n[6]=b+f*a,n[10]=o*c}else if(e.order==="ZXY"){const f=c*h,d=c*u,m=l*h,b=l*u;n[0]=f-b*a,n[4]=-o*u,n[8]=m+d*a,n[1]=d+m*a,n[5]=o*h,n[9]=b-f*a,n[2]=-o*l,n[6]=a,n[10]=o*c}else if(e.order==="ZYX"){const f=o*h,d=o*u,m=a*h,b=a*u;n[0]=c*h,n[4]=m*l-d,n[8]=f*l+b,n[1]=c*u,n[5]=b*l+f,n[9]=d*l-m,n[2]=-l,n[6]=a*c,n[10]=o*c}else if(e.order==="YZX"){const f=o*c,d=o*l,m=a*c,b=a*l;n[0]=c*h,n[4]=b-f*u,n[8]=m*u+d,n[1]=u,n[5]=o*h,n[9]=-a*h,n[2]=-l*h,n[6]=d*u+m,n[10]=f-b*u}else if(e.order==="XZY"){const f=o*c,d=o*l,m=a*c,b=a*l;n[0]=c*h,n[4]=-u,n[8]=l*h,n[1]=f*u+b,n[5]=o*h,n[9]=d*u-m,n[2]=m*u-d,n[6]=a*h,n[10]=b*u+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(jp,e,qp)}lookAt(e,n,i){const r=this.elements;return Et.subVectors(e,n),Et.lengthSq()===0&&(Et.z=1),Et.normalize(),zn.crossVectors(i,Et),zn.lengthSq()===0&&(Math.abs(i.z)===1?Et.x+=1e-4:Et.z+=1e-4,Et.normalize(),zn.crossVectors(i,Et)),zn.normalize(),eo.crossVectors(Et,zn),r[0]=zn.x,r[4]=eo.x,r[8]=Et.x,r[1]=zn.y,r[5]=eo.y,r[9]=Et.y,r[2]=zn.z,r[6]=eo.z,r[10]=Et.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,n)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,o=i[0],a=i[4],c=i[8],l=i[12],h=i[1],u=i[5],f=i[9],d=i[13],m=i[2],b=i[6],w=i[10],v=i[14],p=i[3],E=i[7],A=i[11],R=i[15],S=r[0],D=r[4],N=r[8],U=r[12],g=r[1],y=r[5],x=r[9],M=r[13],_=r[2],T=r[6],L=r[10],I=r[14],z=r[3],V=r[7],H=r[11],k=r[15];return s[0]=o*S+a*g+c*_+l*z,s[4]=o*D+a*y+c*T+l*V,s[8]=o*N+a*x+c*L+l*H,s[12]=o*U+a*M+c*I+l*k,s[1]=h*S+u*g+f*_+d*z,s[5]=h*D+u*y+f*T+d*V,s[9]=h*N+u*x+f*L+d*H,s[13]=h*U+u*M+f*I+d*k,s[2]=m*S+b*g+w*_+v*z,s[6]=m*D+b*y+w*T+v*V,s[10]=m*N+b*x+w*L+v*H,s[14]=m*U+b*M+w*I+v*k,s[3]=p*S+E*g+A*_+R*z,s[7]=p*D+E*y+A*T+R*V,s[11]=p*N+E*x+A*L+R*H,s[15]=p*U+E*M+A*I+R*k,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],c=e[9],l=e[13],h=e[2],u=e[6],f=e[10],d=e[14],m=e[3],b=e[7],w=e[11],v=e[15];return m*(+s*c*u-r*l*u-s*a*f+i*l*f+r*a*d-i*c*d)+b*(+n*c*d-n*l*f+s*o*f-r*o*d+r*l*h-s*c*h)+w*(+n*l*u-n*a*d-s*o*u+i*o*d+s*a*h-i*l*h)+v*(-r*a*h-n*c*u+n*a*f+r*o*u-i*o*f+i*c*h)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=i),this}getInverse(e,n){n!==void 0&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const i=this.elements,r=e.elements,s=r[0],o=r[1],a=r[2],c=r[3],l=r[4],h=r[5],u=r[6],f=r[7],d=r[8],m=r[9],b=r[10],w=r[11],v=r[12],p=r[13],E=r[14],A=r[15],R=m*E*f-p*b*f+p*u*w-h*E*w-m*u*A+h*b*A,S=v*b*f-d*E*f-v*u*w+l*E*w+d*u*A-l*b*A,D=d*p*f-v*m*f+v*h*w-l*p*w-d*h*A+l*m*A,N=v*m*u-d*p*u-v*h*b+l*p*b+d*h*E-l*m*E,U=s*R+o*S+a*D+c*N;if(U===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const g=1/U;return i[0]=R*g,i[1]=(p*b*c-m*E*c-p*a*w+o*E*w+m*a*A-o*b*A)*g,i[2]=(h*E*c-p*u*c+p*a*f-o*E*f-h*a*A+o*u*A)*g,i[3]=(m*u*c-h*b*c-m*a*f+o*b*f+h*a*w-o*u*w)*g,i[4]=S*g,i[5]=(d*E*c-v*b*c+v*a*w-s*E*w-d*a*A+s*b*A)*g,i[6]=(v*u*c-l*E*c-v*a*f+s*E*f+l*a*A-s*u*A)*g,i[7]=(l*b*c-d*u*c+d*a*f-s*b*f-l*a*w+s*u*w)*g,i[8]=D*g,i[9]=(v*m*c-d*p*c-v*o*w+s*p*w+d*o*A-s*m*A)*g,i[10]=(l*p*c-v*h*c+v*o*f-s*p*f-l*o*A+s*h*A)*g,i[11]=(d*h*c-l*m*c-d*o*f+s*m*f+l*o*w-s*h*w)*g,i[12]=N*g,i[13]=(d*p*a-v*m*a+v*o*b-s*p*b-d*o*E+s*m*E)*g,i[14]=(v*h*a-l*p*a-v*o*u+s*p*u+l*o*E-s*h*E)*g,i[15]=(l*m*a-d*h*a+d*o*u-s*m*u-l*o*b+s*h*b)*g,this}scale(e){const n=this.elements,i=e.x,r=e.y,s=e.z;return n[0]*=i,n[4]*=r,n[8]*=s,n[1]*=i,n[5]*=r,n[9]*=s,n[2]*=i,n[6]*=r,n[10]*=s,n[3]*=i,n[7]*=r,n[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(e,n,i){return this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),r=Math.sin(n),s=1-i,o=e.x,a=e.y,c=e.z,l=s*o,h=s*a;return this.set(l*o+i,l*a-r*c,l*c+r*a,0,l*a+r*c,h*a+i,h*c-r*o,0,l*c-r*a,h*c+r*o,s*c*c+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i){return this.set(1,n,i,0,e,1,i,0,e,n,1,0,0,0,0,1),this}compose(e,n,i){const r=this.elements,s=n._x,o=n._y,a=n._z,c=n._w,l=s+s,h=o+o,u=a+a,f=s*l,d=s*h,m=s*u,b=o*h,w=o*u,v=a*u,p=c*l,E=c*h,A=c*u,R=i.x,S=i.y,D=i.z;return r[0]=(1-(b+v))*R,r[1]=(d+A)*R,r[2]=(m-E)*R,r[3]=0,r[4]=(d-A)*S,r[5]=(1-(f+v))*S,r[6]=(w+p)*S,r[7]=0,r[8]=(m+E)*D,r[9]=(w-p)*D,r[10]=(1-(f+b))*D,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,n,i){const r=this.elements;let s=Xi.set(r[0],r[1],r[2]).length();const o=Xi.set(r[4],r[5],r[6]).length(),a=Xi.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],jt.copy(this);const l=1/s,h=1/o,u=1/a;return jt.elements[0]*=l,jt.elements[1]*=l,jt.elements[2]*=l,jt.elements[4]*=h,jt.elements[5]*=h,jt.elements[6]*=h,jt.elements[8]*=u,jt.elements[9]*=u,jt.elements[10]*=u,n.setFromRotationMatrix(jt),i.x=s,i.y=o,i.z=a,this}makePerspective(e,n,i,r,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,c=2*s/(n-e),l=2*s/(i-r),h=(n+e)/(n-e),u=(i+r)/(i-r),f=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=c,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,n,i,r,s,o){const a=this.elements,c=1/(n-e),l=1/(i-r),h=1/(o-s),u=(n+e)*c,f=(i+r)*l,d=(o+s)*h;return a[0]=2*c,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n){n===void 0&&(n=0);for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e,n){e===void 0&&(e=[]),n===void 0&&(n=0);const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const Xi=new C,jt=new fe,jp=new C(0,0,0),qp=new C(1,1,1),zn=new C,eo=new C,Et=new C;class Jt{constructor(e=0,n=0,i=0,r=Jt.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n,i){const r=be.clamp,s=e.elements,o=s[0],a=s[4],c=s[8],l=s[1],h=s[5],u=s[9],f=s[2],d=s[6],m=s[10];switch(n=n||this._order,n){case"XYZ":this._y=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(d,h),this._z=0);break;case"YXZ":this._x=Math.asin(-r(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(c,m),this._z=Math.atan2(l,h)):(this._y=Math.atan2(-f,o),this._z=0);break;case"ZXY":this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-f,m),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(l,o));break;case"ZYX":this._y=Math.asin(-r(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(l,o)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,h),this._y=Math.atan2(-f,o)):(this._x=0,this._y=Math.atan2(c,m));break;case"XZY":this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,h),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i!==!1&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return Kl.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Kl,n,i)}setFromVector3(e,n){return this.set(e.x,e.y,e.z,n||this._order)}reorder(e){return $l.setFromEuler(this),this.setFromQuaternion($l,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e,n){return e===void 0&&(e=[]),n===void 0&&(n=0),e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new C(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Jt.DefaultOrder="XYZ";Jt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const Kl=new fe,$l=new st;class al{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let Xp=0;const Ql=new C,Yi=new st,wn=new fe,to=new C,Yr=new C,Yp=new C,Zp=new st,eu=new C(1,0,0),tu=new C(0,1,0),nu=new C(0,0,1),Jp={type:"added"},Kp={type:"removed"};function me(){Object.defineProperty(this,"id",{value:Xp++}),this.uuid=be.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=me.DefaultUp.clone();const t=new C,e=new Jt,n=new st,i=new C(1,1,1);function r(){n.setFromEuler(e,!1)}function s(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new fe},normalMatrix:{value:new yt}}),this.matrix=new fe,this.matrixWorld=new fe,this.matrixAutoUpdate=me.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new al,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}me.DefaultUp=new C(0,1,0);me.DefaultMatrixAutoUpdate=!0;me.prototype=Object.assign(Object.create(vn.prototype),{constructor:me,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Yi.setFromAxisAngle(t,e),this.quaternion.multiply(Yi),this},rotateOnWorldAxis:function(t,e){return Yi.setFromAxisAngle(t,e),this.quaternion.premultiply(Yi),this},rotateX:function(t){return this.rotateOnAxis(eu,t)},rotateY:function(t){return this.rotateOnAxis(tu,t)},rotateZ:function(t){return this.rotateOnAxis(nu,t)},translateOnAxis:function(t,e){return Ql.copy(t).applyQuaternion(this.quaternion),this.position.add(Ql.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(eu,t)},translateY:function(t){return this.translateOnAxis(tu,t)},translateZ:function(t){return this.translateOnAxis(nu,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(wn.getInverse(this.matrixWorld))},lookAt:function(t,e,n){t.isVector3?to.copy(t):to.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Yr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?wn.lookAt(Yr,to,this.up):wn.lookAt(to,Yr,this.up),this.quaternion.setFromRotationMatrix(wn),i&&(wn.extractRotation(i.matrixWorld),Yi.setFromRotationMatrix(wn),this.quaternion.premultiply(Yi.inverse()))},add:function(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Jp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Kp)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),wn.getInverse(this.matrixWorld),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),wn.multiply(t.parent.matrixWorld)),t.applyMatrix4(wn),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const s=this.children[n].getObjectByProperty(t,e);if(s!==void 0)return s}},getWorldPosition:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new C),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new st),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Yr,t,Yp),t},getWorldScale:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new C),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Yr,Zp,t),t},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new C),this.updateMatrixWorld(!0);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(t)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let c=0,l=a.length;c<l;c++){const h=a[c];r(t.shapes,h)}else r(t.shapes,a)}}if(this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,c=this.material.length;a<c;a++)o.push(r(t.materials,this.material[a]));i.material=o}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(t).object)}if(e){const o=s(t.geometries),a=s(t.materials),c=s(t.textures),l=s(t.images),h=s(t.shapes);o.length>0&&(n.geometries=o),a.length>0&&(n.materials=a),c.length>0&&(n.textures=c),l.length>0&&(n.images=l),h.length>0&&(n.shapes=h)}return n.object=i,n;function s(o){const a=[];for(const c in o){const l=o[c];delete l.metadata,a.push(l)}return a}},clone:function(t){return new this.constructor().copy(this,t)},copy:function(t,e){if(e===void 0&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}});const Ua=new C,$p=new C,Qp=new yt;class un{constructor(e,n){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=e!==void 0?e:new C(1,0,0),this.constant=n!==void 0?n:0}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,r){return this.normal.set(e,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const r=Ua.subVectors(i,n).cross($p.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),n=new C),n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,n){n===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),n=new C);const i=e.delta(Ua),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):void 0;const s=-(e.start.dot(this.normal)+this.constant)/r;if(!(s<0||s>1))return n.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new C),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||Qp.getNormalMatrix(e),r=this.coplanarPoint(Ua).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const qt=new C,Mn=new C,Ga=new C,Sn=new C,Zi=new C,Ji=new C,iu=new C,za=new C,Ha=new C,Va=new C;class vt{constructor(e,n,i){this.a=e!==void 0?e:new C,this.b=n!==void 0?n:new C,this.c=i!==void 0?i:new C}static getNormal(e,n,i,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new C),r.subVectors(i,n),qt.subVectors(e,n),r.cross(qt);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,n,i,r,s){qt.subVectors(r,n),Mn.subVectors(i,n),Ga.subVectors(e,n);const o=qt.dot(qt),a=qt.dot(Mn),c=qt.dot(Ga),l=Mn.dot(Mn),h=Mn.dot(Ga),u=o*l-a*a;if(s===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new C),u===0)return s.set(-2,-1,-1);const f=1/u,d=(l*c-a*h)*f,m=(o*h-a*c)*f;return s.set(1-d-m,m,d)}static containsPoint(e,n,i,r){return this.getBarycoord(e,n,i,r,Sn),Sn.x>=0&&Sn.y>=0&&Sn.x+Sn.y<=1}static getUV(e,n,i,r,s,o,a,c){return this.getBarycoord(e,n,i,r,Sn),c.set(0,0),c.addScaledVector(s,Sn.x),c.addScaledVector(o,Sn.y),c.addScaledVector(a,Sn.z),c}static isFrontFacing(e,n,i,r){return qt.subVectors(i,n),Mn.subVectors(e,n),qt.cross(Mn).dot(r)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,r){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[r]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return qt.subVectors(this.c,this.b),Mn.subVectors(this.a,this.b),qt.cross(Mn).length()*.5}getMidpoint(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new C),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return vt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new un),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return vt.getBarycoord(e,this.a,this.b,this.c,n)}getUV(e,n,i,r,s){return vt.getUV(e,this.a,this.b,this.c,n,i,r,s)}containsPoint(e){return vt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return vt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){n===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),n=new C);const i=this.a,r=this.b,s=this.c;let o,a;Zi.subVectors(r,i),Ji.subVectors(s,i),za.subVectors(e,i);const c=Zi.dot(za),l=Ji.dot(za);if(c<=0&&l<=0)return n.copy(i);Ha.subVectors(e,r);const h=Zi.dot(Ha),u=Ji.dot(Ha);if(h>=0&&u<=h)return n.copy(r);const f=c*u-h*l;if(f<=0&&c>=0&&h<=0)return o=c/(c-h),n.copy(i).addScaledVector(Zi,o);Va.subVectors(e,s);const d=Zi.dot(Va),m=Ji.dot(Va);if(m>=0&&d<=m)return n.copy(s);const b=d*l-c*m;if(b<=0&&l>=0&&m<=0)return a=l/(l-m),n.copy(i).addScaledVector(Ji,a);const w=h*m-d*u;if(w<=0&&u-h>=0&&d-m>=0)return iu.subVectors(s,r),a=(u-h)/(u-h+(d-m)),n.copy(r).addScaledVector(iu,a);const v=1/(w+b+f);return o=b*v,a=f*v,n.copy(i).addScaledVector(Zi,o).addScaledVector(Ji,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const kf={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Xt={h:0,s:0,l:0},no={h:0,s:0,l:0};function ka(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}function Wa(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function ja(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}class oe{constructor(e,n,i){return Object.defineProperty(this,"isColor",{value:!0}),n===void 0&&i===void 0?this.set(e):this.setRGB(e,n,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,n,i){return this.r=e,this.g=n,this.b=i,this}setHSL(e,n,i){if(e=be.euclideanModulo(e,1),n=be.clamp(n,0,1),i=be.clamp(i,0,1),n===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,s=2*i-r;this.r=ka(s,r,e+1/3),this.g=ka(s,r,e),this.b=ka(s,r,e-1/3)}return this}setStyle(e){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let r;const s=i[1],o=i[2];switch(s){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,n(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,n(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){const a=parseFloat(r[1])/360,c=parseInt(r[2],10)/100,l=parseInt(r[3],10)/100;return n(r[5]),this.setHSL(a,c,l)}break}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(e)){const r=i[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const n=kf[e];return n!==void 0?this.setHex(n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,n){return n===void 0&&(n=2),this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}copyLinearToGamma(e,n){n===void 0&&(n=2);const i=n>0?1/n:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Wa(e.r),this.g=Wa(e.g),this.b=Wa(e.b),this}copyLinearToSRGB(e){return this.r=ja(e.r),this.g=ja(e.g),this.b=ja(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const n=this.r,i=this.g,r=this.b,s=Math.max(n,i,r),o=Math.min(n,i,r);let a,c;const l=(o+s)/2;if(o===s)a=0,c=0;else{const h=s-o;switch(c=l<=.5?h/(s+o):h/(2-s-o),s){case n:a=(i-r)/h+(i<r?6:0);break;case i:a=(r-n)/h+2;break;case r:a=(n-i)/h+4;break}a/=6}return e.h=a,e.s=c,e.l=l,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,n,i){return this.getHSL(Xt),Xt.h+=e,Xt.s+=n,Xt.l+=i,this.setHSL(Xt.h,Xt.s,Xt.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpHSL(e,n){this.getHSL(Xt),e.getHSL(no);const i=be.lerp(Xt.h,no.h,n),r=be.lerp(Xt.s,no.s,n),s=be.lerp(Xt.l,no.l,n);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n){return n===void 0&&(n=0),this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e,n){return e===void 0&&(e=[]),n===void 0&&(n=0),e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}oe.NAMES=kf;oe.prototype.r=1;oe.prototype.g=1;oe.prototype.b=1;class gs{constructor(e,n,i,r,s,o){this.a=e,this.b=n,this.c=i,this.normal=r&&r.isVector3?r:new C,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new oe,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=o!==void 0?o:0}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let n=0,i=e.vertexNormals.length;n<i;n++)this.vertexNormals[n]=e.vertexNormals[n].clone();for(let n=0,i=e.vertexColors.length;n<i;n++)this.vertexColors[n]=e.vertexColors[n].clone();return this}}let em=0;function Se(){Object.defineProperty(this,"id",{value:em++}),this.uuid=be.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=gr,this.side=Bi,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=el,this.blendDst=tl,this.blendEquation=mi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Vo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Vf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=zo,this.stencilZFail=zo,this.stencilZPass=zo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Se.prototype=Object.assign(Object.create(vn.prototype),{constructor:Se,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Qc;continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}},toJSON:function(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==gr&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==Bi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const s=[];for(const o in r){const a=r[o];delete a.metadata,s.push(a)}return s}if(e){const r=i(t.textures),s=i(t.images);r.length>0&&(n.textures=r),s.length>0&&(n.images=s)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Se.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function kt(t){Se.call(this),this.type="MeshBasicMaterial",this.color=new oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Br,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}kt.prototype=Object.create(Se.prototype);kt.prototype.constructor=kt;kt.prototype.isMeshBasicMaterial=!0;kt.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const We=new C,io=new Y;function we(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=ks,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(we.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(we.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new oe),e[n++]=s.r,e[n++]=s.g,e[n++]=s.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new Y),e[n++]=s.x,e[n++]=s.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new C),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new Be),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z,e[n++]=s.w}return this},applyMatrix3:function(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)io.fromBufferAttribute(this,e),io.applyMatrix3(t),this.setXY(e,io.x,io.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)We.fromBufferAttribute(this,e),We.applyMatrix3(t),this.setXYZ(e,We.x,We.y,We.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)We.x=this.getX(e),We.y=this.getY(e),We.z=this.getZ(e),We.applyMatrix4(t),this.setXYZ(e,We.x,We.y,We.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)We.x=this.getX(e),We.y=this.getY(e),We.z=this.getZ(e),We.applyNormalMatrix(t),this.setXYZ(e,We.x,We.y,We.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)We.x=this.getX(e),We.y=this.getY(e),We.z=this.getZ(e),We.transformDirection(t),this.setXYZ(e,We.x,We.y,We.z);return this},set:function(t,e){return e===void 0&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function vs(t,e,n){we.call(this,new Int8Array(t),e,n)}vs.prototype=Object.create(we.prototype);vs.prototype.constructor=vs;function ys(t,e,n){we.call(this,new Uint8Array(t),e,n)}ys.prototype=Object.create(we.prototype);ys.prototype.constructor=ys;function xs(t,e,n){we.call(this,new Uint8ClampedArray(t),e,n)}xs.prototype=Object.create(we.prototype);xs.prototype.constructor=xs;function _s(t,e,n){we.call(this,new Int16Array(t),e,n)}_s.prototype=Object.create(we.prototype);_s.prototype.constructor=_s;function Jn(t,e,n){we.call(this,new Uint16Array(t),e,n)}Jn.prototype=Object.create(we.prototype);Jn.prototype.constructor=Jn;function bs(t,e,n){we.call(this,new Int32Array(t),e,n)}bs.prototype=Object.create(we.prototype);bs.prototype.constructor=bs;function Mi(t,e,n){we.call(this,new Uint32Array(t),e,n)}Mi.prototype=Object.create(we.prototype);Mi.prototype.constructor=Mi;function ie(t,e,n){we.call(this,new Float32Array(t),e,n)}ie.prototype=Object.create(we.prototype);ie.prototype.constructor=ie;function ws(t,e,n){we.call(this,new Float64Array(t),e,n)}ws.prototype=Object.create(we.prototype);ws.prototype.constructor=ws;class tm{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const n=[];let i,r,s;const o=e.faces;for(r=0;r<o.length;r++){const a=o[r];a.materialIndex!==s&&(s=a.materialIndex,i!==void 0&&(i.count=r*3-i.start,n.push(i)),i={start:r*3,materialIndex:s})}i!==void 0&&(i.count=r*3-i.start,n.push(i)),this.groups=n}fromGeometry(e){const n=e.faces,i=e.vertices,r=e.faceVertexUvs,s=r[0]&&r[0].length>0,o=r[1]&&r[1].length>0,a=e.morphTargets,c=a.length;let l;if(c>0){l=[];for(let v=0;v<c;v++)l[v]={name:a[v].name,data:[]};this.morphTargets.position=l}const h=e.morphNormals,u=h.length;let f;if(u>0){f=[];for(let v=0;v<u;v++)f[v]={name:h[v].name,data:[]};this.morphTargets.normal=f}const d=e.skinIndices,m=e.skinWeights,b=d.length===i.length,w=m.length===i.length;i.length>0&&n.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let v=0;v<n.length;v++){const p=n[v];this.vertices.push(i[p.a],i[p.b],i[p.c]);const E=p.vertexNormals;if(E.length===3)this.normals.push(E[0],E[1],E[2]);else{const R=p.normal;this.normals.push(R,R,R)}const A=p.vertexColors;if(A.length===3)this.colors.push(A[0],A[1],A[2]);else{const R=p.color;this.colors.push(R,R,R)}if(s===!0){const R=r[0][v];R!==void 0?this.uvs.push(R[0],R[1],R[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v),this.uvs.push(new Y,new Y,new Y))}if(o===!0){const R=r[1][v];R!==void 0?this.uvs2.push(R[0],R[1],R[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v),this.uvs2.push(new Y,new Y,new Y))}for(let R=0;R<c;R++){const S=a[R].vertices;l[R].data.push(S[p.a],S[p.b],S[p.c])}for(let R=0;R<u;R++){const S=h[R].vertexNormals[v];f[R].data.push(S.a,S.b,S.c)}b&&this.skinIndices.push(d[p.a],d[p.b],d[p.c]),w&&this.skinWeights.push(m[p.a],m[p.b],m[p.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}}function Wf(t){if(t.length===0)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}let nm=1;const an=new fe,qa=new me,Ki=new C,At=new sn,Zr=new sn,ft=new C;function xe(){Object.defineProperty(this,"id",{value:nm+=2}),this.uuid=be.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}xe.prototype=Object.assign(Object.create(vn.prototype),{constructor:xe,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(Wf(t)>65535?Mi:Jn)(t,1):this.index=t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new yt().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(t){return an.makeRotationX(t),this.applyMatrix4(an),this},rotateY:function(t){return an.makeRotationY(t),this.applyMatrix4(an),this},rotateZ:function(t){return an.makeRotationZ(t),this.applyMatrix4(an),this},translate:function(t,e,n){return an.makeTranslation(t,e,n),this.applyMatrix4(an),this},scale:function(t,e,n){return an.makeScale(t,e,n),this.applyMatrix4(an),this},lookAt:function(t){return qa.lookAt(t),qa.updateMatrix(),this.applyMatrix4(qa.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ki).negate(),this.translate(Ki.x,Ki.y,Ki.z),this},setFromObject:function(t){const e=t.geometry;if(t.isPoints||t.isLine){const n=new ie(e.vertices.length*3,3),i=new ie(e.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(e.vertices)),this.setAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){const r=new ie(e.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(e.lineDistances))}e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ie(e,3)),this},updateFromObject:function(t){let e=t.geometry;if(t.isMesh){let n=e.__directGeometry;if(e.elementsNeedUpdate===!0&&(n=void 0,e.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(e);n.verticesNeedUpdate=e.verticesNeedUpdate,n.normalsNeedUpdate=e.normalsNeedUpdate,n.colorsNeedUpdate=e.colorsNeedUpdate,n.uvsNeedUpdate=e.uvsNeedUpdate,n.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=n}if(e.verticesNeedUpdate===!0){const n=this.attributes.position;n!==void 0&&(n.copyVector3sArray(e.vertices),n.needsUpdate=!0),e.verticesNeedUpdate=!1}if(e.normalsNeedUpdate===!0){const n=this.attributes.normal;n!==void 0&&(n.copyVector3sArray(e.normals),n.needsUpdate=!0),e.normalsNeedUpdate=!1}if(e.colorsNeedUpdate===!0){const n=this.attributes.color;n!==void 0&&(n.copyColorsArray(e.colors),n.needsUpdate=!0),e.colorsNeedUpdate=!1}if(e.uvsNeedUpdate){const n=this.attributes.uv;n!==void 0&&(n.copyVector2sArray(e.uvs),n.needsUpdate=!0),e.uvsNeedUpdate=!1}if(e.lineDistancesNeedUpdate){const n=this.attributes.lineDistance;n!==void 0&&(n.copyArray(e.lineDistances),n.needsUpdate=!0),e.lineDistancesNeedUpdate=!1}return e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=new tm().fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const e=new Float32Array(t.vertices.length*3);if(this.setAttribute("position",new we(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){const n=new Float32Array(t.normals.length*3);this.setAttribute("normal",new we(n,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const n=new Float32Array(t.colors.length*3);this.setAttribute("color",new we(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const n=new Float32Array(t.uvs.length*2);this.setAttribute("uv",new we(n,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const n=new Float32Array(t.uvs2.length*2);this.setAttribute("uv2",new we(n,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const n in t.morphTargets){const i=[],r=t.morphTargets[n];for(let s=0,o=r.length;s<o;s++){const a=r[s],c=new ie(a.data.length*3,3);c.name=a.name,i.push(c.copyVector3sArray(a.data))}this.morphAttributes[n]=i}if(t.skinIndices.length>0){const n=new ie(t.skinIndices.length*4,4);this.setAttribute("skinIndex",n.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const n=new ie(t.skinWeights.length*4,4);this.setAttribute("skinWeight",n.copyVector4sArray(t.skinWeights))}return t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new sn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new C(-1/0,-1/0,-1/0),new C(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];At.setFromBufferAttribute(r),this.morphTargetsRelative?(ft.addVectors(this.boundingBox.min,At.min),this.boundingBox.expandByPoint(ft),ft.addVectors(this.boundingBox.max,At.max),this.boundingBox.expandByPoint(ft)):(this.boundingBox.expandByPoint(At.min),this.boundingBox.expandByPoint(At.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Bn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new C,1/0);return}if(t){const n=this.boundingSphere.center;if(At.setFromBufferAttribute(t),e)for(let r=0,s=e.length;r<s;r++){const o=e[r];Zr.setFromBufferAttribute(o),this.morphTargetsRelative?(ft.addVectors(At.min,Zr.min),At.expandByPoint(ft),ft.addVectors(At.max,Zr.max),At.expandByPoint(ft)):(At.expandByPoint(Zr.min),At.expandByPoint(Zr.max))}At.getCenter(n);let i=0;for(let r=0,s=t.count;r<s;r++)ft.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(ft));if(e)for(let r=0,s=e.length;r<s;r++){const o=e[r],a=this.morphTargetsRelative;for(let c=0,l=o.count;c<l;c++)ft.fromBufferAttribute(o,c),a&&(Ki.fromBufferAttribute(t,c),ft.add(Ki)),i=Math.max(i,n.distanceToSquared(ft))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new we(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let u=0,f=n.count;u<f;u++)n.setXYZ(u,0,0,0);const i=new C,r=new C,s=new C,o=new C,a=new C,c=new C,l=new C,h=new C;if(t)for(let u=0,f=t.count;u<f;u+=3){const d=t.getX(u+0),m=t.getX(u+1),b=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,m),s.fromBufferAttribute(e,b),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),o.fromBufferAttribute(n,d),a.fromBufferAttribute(n,m),c.fromBufferAttribute(n,b),o.add(l),a.add(l),c.add(l),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(b,c.x,c.y,c.z)}else for(let u=0,f=e.count;u<f;u+=3)i.fromBufferAttribute(e,u+0),r.fromBufferAttribute(e,u+1),s.fromBufferAttribute(e,u+2),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),n.setXYZ(u+0,l.x,l.y,l.z),n.setXYZ(u+1,l.x,l.y,l.z),n.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(t.attributes[i]===void 0)continue;const s=n[i].array,o=t.attributes[i],a=o.array,c=o.itemSize*e,l=Math.min(a.length,s.length-c);for(let h=0,u=c;h<l;h++,u++)s[u]=a[h]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ft.fromBufferAttribute(t,e),ft.normalize(),t.setXYZ(e,ft.x,ft.y,ft.z)},toNonIndexed:function(){function t(o,a){const c=o.array,l=o.itemSize,h=o.normalized,u=new c.constructor(a.length*l);let f=0,d=0;for(let m=0,b=a.length;m<b;m++){f=a[m]*l;for(let w=0;w<l;w++)u[d++]=c[f++]}return new we(u,l,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new xe,n=this.index.array,i=this.attributes;for(const o in i){const a=i[o],c=t(a,n);e.setAttribute(o,c)}const r=this.morphAttributes;for(const o in r){const a=[],c=r[o];for(let l=0,h=c.length;l<h;l++){const u=c[l],f=t(u,n);a.push(f)}e.morphAttributes[o]=a}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,a=s.length;o<a;o++){const c=s[o];e.addGroup(c.start,c.count,c.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const c in a)a[c]!==void 0&&(t[c]=a[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const a in n){const c=n[a],l=c.toJSON(t.data);c.name!==""&&(l.name=c.name),t.data.attributes[a]=l}const i={};let r=!1;for(const a in this.morphAttributes){const c=this.morphAttributes[a],l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=f.toJSON(t.data);f.name!==""&&(d.name=f.name),l.push(d)}l.length>0&&(i[a]=l,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t},clone:function(){return new xe().copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const l=i[c];this.setAttribute(c,l.clone(e))}const r=t.morphAttributes;for(const c in r){const l=[],h=r[c];for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone(e));this.morphAttributes[c]=l}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let c=0,l=s.length;c<l;c++){const h=s[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const ru=new fe,ai=new zr,Xa=new Bn,Hn=new C,Vn=new C,kn=new C,Ya=new C,Za=new C,Ja=new C,ro=new C,so=new C,oo=new C,fr=new Y,dr=new Y,pr=new Y,ss=new C,ao=new C;function je(t,e){me.call(this),this.type="Mesh",this.geometry=t!==void 0?t:new xe,this.material=e!==void 0?e:new kt,this.updateMorphTargets()}je.prototype=Object.assign(Object.create(me.prototype),{constructor:je,isMesh:!0,copy:function(t){return me.prototype.copy.call(this,t),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Xa.copy(n.boundingSphere),Xa.applyMatrix4(r),t.ray.intersectsSphere(Xa)===!1)||(ru.getInverse(r),ai.copy(t.ray).applyMatrix4(ru),n.boundingBox!==null&&ai.intersectsBox(n.boundingBox)===!1))return;let s;if(n.isBufferGeometry){const o=n.index,a=n.attributes.position,c=n.morphAttributes.position,l=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,f=n.groups,d=n.drawRange;if(o!==null)if(Array.isArray(i))for(let m=0,b=f.length;m<b;m++){const w=f[m],v=i[w.materialIndex],p=Math.max(w.start,d.start),E=Math.min(w.start+w.count,d.start+d.count);for(let A=p,R=E;A<R;A+=3){const S=o.getX(A),D=o.getX(A+1),N=o.getX(A+2);s=co(this,v,t,ai,a,c,l,h,u,S,D,N),s&&(s.faceIndex=Math.floor(A/3),s.face.materialIndex=w.materialIndex,e.push(s))}}else{const m=Math.max(0,d.start),b=Math.min(o.count,d.start+d.count);for(let w=m,v=b;w<v;w+=3){const p=o.getX(w),E=o.getX(w+1),A=o.getX(w+2);s=co(this,i,t,ai,a,c,l,h,u,p,E,A),s&&(s.faceIndex=Math.floor(w/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(i))for(let m=0,b=f.length;m<b;m++){const w=f[m],v=i[w.materialIndex],p=Math.max(w.start,d.start),E=Math.min(w.start+w.count,d.start+d.count);for(let A=p,R=E;A<R;A+=3){const S=A,D=A+1,N=A+2;s=co(this,v,t,ai,a,c,l,h,u,S,D,N),s&&(s.faceIndex=Math.floor(A/3),s.face.materialIndex=w.materialIndex,e.push(s))}}else{const m=Math.max(0,d.start),b=Math.min(a.count,d.start+d.count);for(let w=m,v=b;w<v;w+=3){const p=w,E=w+1,A=w+2;s=co(this,i,t,ai,a,c,l,h,u,p,E,A),s&&(s.faceIndex=Math.floor(w/3),e.push(s))}}}else if(n.isGeometry){const o=Array.isArray(i),a=n.vertices,c=n.faces;let l;const h=n.faceVertexUvs[0];h.length>0&&(l=h);for(let u=0,f=c.length;u<f;u++){const d=c[u],m=o?i[d.materialIndex]:i;if(m===void 0)continue;const b=a[d.a],w=a[d.b],v=a[d.c];if(s=jf(this,m,t,ai,b,w,v,ss),s){if(l&&l[u]){const p=l[u];fr.copy(p[0]),dr.copy(p[1]),pr.copy(p[2]),s.uv=vt.getUV(ss,b,w,v,fr,dr,pr,new Y)}s.face=d,s.faceIndex=u,e.push(s)}}}}});function jf(t,e,n,i,r,s,o,a){let c;if(e.side===lt?c=i.intersectTriangle(o,s,r,!0,a):c=i.intersectTriangle(r,s,o,e.side!==Gs,a),c===null)return null;ao.copy(a),ao.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(ao);return l<n.near||l>n.far?null:{distance:l,point:ao.clone(),object:t}}function co(t,e,n,i,r,s,o,a,c,l,h,u){Hn.fromBufferAttribute(r,l),Vn.fromBufferAttribute(r,h),kn.fromBufferAttribute(r,u);const f=t.morphTargetInfluences;if(e.morphTargets&&s&&f){ro.set(0,0,0),so.set(0,0,0),oo.set(0,0,0);for(let m=0,b=s.length;m<b;m++){const w=f[m],v=s[m];w!==0&&(Ya.fromBufferAttribute(v,l),Za.fromBufferAttribute(v,h),Ja.fromBufferAttribute(v,u),o?(ro.addScaledVector(Ya,w),so.addScaledVector(Za,w),oo.addScaledVector(Ja,w)):(ro.addScaledVector(Ya.sub(Hn),w),so.addScaledVector(Za.sub(Vn),w),oo.addScaledVector(Ja.sub(kn),w)))}Hn.add(ro),Vn.add(so),kn.add(oo)}t.isSkinnedMesh&&(t.boneTransform(l,Hn),t.boneTransform(h,Vn),t.boneTransform(u,kn));const d=jf(t,e,n,i,Hn,Vn,kn,ss);if(d){a&&(fr.fromBufferAttribute(a,l),dr.fromBufferAttribute(a,h),pr.fromBufferAttribute(a,u),d.uv=vt.getUV(ss,Hn,Vn,kn,fr,dr,pr,new Y)),c&&(fr.fromBufferAttribute(c,l),dr.fromBufferAttribute(c,h),pr.fromBufferAttribute(c,u),d.uv2=vt.getUV(ss,Hn,Vn,kn,fr,dr,pr,new Y));const m=new gs(l,h,u);vt.getNormal(Hn,Vn,kn,m.normal),d.face=m}return d}let im=0;const cn=new fe,Ka=new me,lo=new C;function Ue(){Object.defineProperty(this,"id",{value:im+=2}),this.uuid=be.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Ue.prototype=Object.assign(Object.create(vn.prototype),{constructor:Ue,isGeometry:!0,applyMatrix4:function(t){const e=new yt().getNormalMatrix(t);for(let n=0,i=this.vertices.length;n<i;n++)this.vertices[n].applyMatrix4(t);for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.normal.applyMatrix3(e).normalize();for(let s=0,o=r.vertexNormals.length;s<o;s++)r.vertexNormals[s].applyMatrix3(e).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return cn.makeRotationX(t),this.applyMatrix4(cn),this},rotateY:function(t){return cn.makeRotationY(t),this.applyMatrix4(cn),this},rotateZ:function(t){return cn.makeRotationZ(t),this.applyMatrix4(cn),this},translate:function(t,e,n){return cn.makeTranslation(t,e,n),this.applyMatrix4(cn),this},scale:function(t,e,n){return cn.makeScale(t,e,n),this.applyMatrix4(cn),this},lookAt:function(t){return Ka.lookAt(t),Ka.updateMatrix(),this.applyMatrix4(Ka.matrix),this},fromBufferGeometry:function(t){const e=this,n=t.index!==null?t.index:void 0,i=t.attributes;if(i.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=i.position,s=i.normal,o=i.color,a=i.uv,c=i.uv2;c!==void 0&&(this.faceVertexUvs[1]=[]);for(let u=0;u<r.count;u++)e.vertices.push(new C().fromBufferAttribute(r,u)),o!==void 0&&e.colors.push(new oe().fromBufferAttribute(o,u));function l(u,f,d,m){const b=o===void 0?[]:[e.colors[u].clone(),e.colors[f].clone(),e.colors[d].clone()],w=s===void 0?[]:[new C().fromBufferAttribute(s,u),new C().fromBufferAttribute(s,f),new C().fromBufferAttribute(s,d)],v=new gs(u,f,d,w,b,m);e.faces.push(v),a!==void 0&&e.faceVertexUvs[0].push([new Y().fromBufferAttribute(a,u),new Y().fromBufferAttribute(a,f),new Y().fromBufferAttribute(a,d)]),c!==void 0&&e.faceVertexUvs[1].push([new Y().fromBufferAttribute(c,u),new Y().fromBufferAttribute(c,f),new Y().fromBufferAttribute(c,d)])}const h=t.groups;if(h.length>0)for(let u=0;u<h.length;u++){const f=h[u],d=f.start,m=f.count;for(let b=d,w=d+m;b<w;b+=3)n!==void 0?l(n.getX(b),n.getX(b+1),n.getX(b+2),f.materialIndex):l(b,b+1,b+2,f.materialIndex)}else if(n!==void 0)for(let u=0;u<n.count;u+=3)l(n.getX(u),n.getX(u+1),n.getX(u+2));else for(let u=0;u<r.count;u+=3)l(u,u+1,u+2);return this.computeFaceNormals(),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(lo).negate(),this.translate(lo.x,lo.y,lo.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,n=e===0?1:1/e,i=new fe;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const t=new C,e=new C;for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c];t.subVectors(a,o),e.subVectors(s,o),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){t===void 0&&(t=!0);const e=new Array(this.vertices.length);for(let n=0,i=this.vertices.length;n<i;n++)e[n]=new C;if(t){const n=new C,i=new C;for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=this.vertices[o.a],c=this.vertices[o.b],l=this.vertices[o.c];n.subVectors(l,c),i.subVectors(a,c),n.cross(i),e[o.a].add(n),e[o.b].add(n),e[o.c].add(n)}}else{this.computeFaceNormals();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];e[r.a].add(r.normal),e[r.b].add(r.normal),e[r.c].add(r.normal)}}for(let n=0,i=this.vertices.length;n<i;n++)e[n].normalize();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=r.vertexNormals;s.length===3?(s[0].copy(e[r.a]),s[1].copy(e[r.b]),s[2].copy(e[r.c])):(s[0]=e[r.a].clone(),s[1]=e[r.b].clone(),s[2]=e[r.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const n=this.faces[t],i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,n=this.faces.length;e<n;e++){const i=this.faces[e];i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]);for(let r=0,s=i.vertexNormals.length;r<s;r++)i.__originalVertexNormals[r]?i.__originalVertexNormals[r].copy(i.vertexNormals[r]):i.__originalVertexNormals[r]=i.vertexNormals[r].clone()}const t=new Ue;t.faces=this.faces;for(let e=0,n=this.morphTargets.length;e<n;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];const r=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals;for(let o=0,a=this.faces.length;o<a;o++){const c=new C,l={a:new C,b:new C,c:new C};r.push(c),s.push(l)}}const i=this.morphNormals[e];t.vertices=this.morphTargets[e].vertices,t.computeFaceNormals(),t.computeVertexNormals();for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=i.faceNormals[r],c=i.vertexNormals[r];a.copy(o.normal),c.a.copy(o.vertexNormals[0]),c.b.copy(o.vertexNormals[1]),c.c.copy(o.vertexNormals[2])}}for(let e=0,n=this.faces.length;e<n;e++){const i=this.faces[e];i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals}},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new sn),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Bn),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(!(t&&t.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);return}let i;const r=this.vertices.length,s=this.vertices,o=t.vertices,a=this.faces,c=t.faces,l=this.colors,h=t.colors;n===void 0&&(n=0),e!==void 0&&(i=new yt().getNormalMatrix(e));for(let u=0,f=o.length;u<f;u++){const m=o[u].clone();e!==void 0&&m.applyMatrix4(e),s.push(m)}for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone());for(let u=0,f=c.length;u<f;u++){const d=c[u];let m,b;const w=d.vertexNormals,v=d.vertexColors,p=new gs(d.a+r,d.b+r,d.c+r);p.normal.copy(d.normal),i!==void 0&&p.normal.applyMatrix3(i).normalize();for(let E=0,A=w.length;E<A;E++)m=w[E].clone(),i!==void 0&&m.applyMatrix3(i).normalize(),p.vertexNormals.push(m);p.color.copy(d.color);for(let E=0,A=v.length;E<A;E++)b=v[E],p.vertexColors.push(b.clone());p.materialIndex=d.materialIndex+n,a.push(p)}for(let u=0,f=t.faceVertexUvs.length;u<f;u++){const d=t.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let m=0,b=d.length;m<b;m++){const w=d[m],v=[];for(let p=0,E=w.length;p<E;p++)v.push(w[p].clone());this.faceVertexUvs[u].push(v)}}},mergeMesh:function(t){if(!(t&&t.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t);return}t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)},mergeVertices:function(){const t={},e=[],n=[],r=Math.pow(10,4);for(let a=0,c=this.vertices.length;a<c;a++){const l=this.vertices[a],h=Math.round(l.x*r)+"_"+Math.round(l.y*r)+"_"+Math.round(l.z*r);t[h]===void 0?(t[h]=a,e.push(this.vertices[a]),n[a]=e.length-1):n[a]=n[t[h]]}const s=[];for(let a=0,c=this.faces.length;a<c;a++){const l=this.faces[a];l.a=n[l.a],l.b=n[l.b],l.c=n[l.c];const h=[l.a,l.b,l.c];for(let u=0;u<3;u++)if(h[u]===h[(u+1)%3]){s.push(a);break}}for(let a=s.length-1;a>=0;a--){const c=s[a];this.faces.splice(c,1);for(let l=0,h=this.faceVertexUvs.length;l<h;l++)this.faceVertexUvs[l].splice(c,1)}const o=this.vertices.length-e.length;return this.vertices=e,o},setFromPoints:function(t){this.vertices=[];for(let e=0,n=t.length;e<n;e++){const i=t[e];this.vertices.push(new C(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const t=this.faces,e=t.length;for(let a=0;a<e;a++)t[a]._id=a;function n(a,c){return a.materialIndex-c.materialIndex}t.sort(n);const i=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let s,o;i&&i.length===e&&(s=[]),r&&r.length===e&&(o=[]);for(let a=0;a<e;a++){const c=t[a]._id;s&&s.push(i[c]),o&&o.push(r[c])}s&&(this.faceVertexUvs[0]=s),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.parameters!==void 0){const d=this.parameters;for(const m in d)d[m]!==void 0&&(t[m]=d[m]);return t}const e=[];for(let d=0;d<this.vertices.length;d++){const m=this.vertices[d];e.push(m.x,m.y,m.z)}const n=[],i=[],r={},s=[],o={},a=[],c={};for(let d=0;d<this.faces.length;d++){const m=this.faces[d],b=!0,w=!1,v=this.faceVertexUvs[0][d]!==void 0,p=m.normal.length()>0,E=m.vertexNormals.length>0,A=m.color.r!==1||m.color.g!==1||m.color.b!==1,R=m.vertexColors.length>0;let S=0;if(S=l(S,0,0),S=l(S,1,b),S=l(S,2,w),S=l(S,3,v),S=l(S,4,p),S=l(S,5,E),S=l(S,6,A),S=l(S,7,R),n.push(S),n.push(m.a,m.b,m.c),n.push(m.materialIndex),v){const D=this.faceVertexUvs[0][d];n.push(f(D[0]),f(D[1]),f(D[2]))}if(p&&n.push(h(m.normal)),E){const D=m.vertexNormals;n.push(h(D[0]),h(D[1]),h(D[2]))}if(A&&n.push(u(m.color)),R){const D=m.vertexColors;n.push(u(D[0]),u(D[1]),u(D[2]))}}function l(d,m,b){return b?d|1<<m:d&~(1<<m)}function h(d){const m=d.x.toString()+d.y.toString()+d.z.toString();return r[m]!==void 0||(r[m]=i.length/3,i.push(d.x,d.y,d.z)),r[m]}function u(d){const m=d.r.toString()+d.g.toString()+d.b.toString();return o[m]!==void 0||(o[m]=s.length,s.push(d.getHex())),o[m]}function f(d){const m=d.x.toString()+d.y.toString();return c[m]!==void 0||(c[m]=a.length/2,a.push(d.x,d.y)),c[m]}return t.data={},t.data.vertices=e,t.data.normals=i,s.length>0&&(t.data.colors=s),a.length>0&&(t.data.uvs=[a]),t.data.faces=n,t},clone:function(){return new Ue().copy(this)},copy:function(t){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;const e=t.vertices;for(let u=0,f=e.length;u<f;u++)this.vertices.push(e[u].clone());const n=t.colors;for(let u=0,f=n.length;u<f;u++)this.colors.push(n[u].clone());const i=t.faces;for(let u=0,f=i.length;u<f;u++)this.faces.push(i[u].clone());for(let u=0,f=t.faceVertexUvs.length;u<f;u++){const d=t.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let m=0,b=d.length;m<b;m++){const w=d[m],v=[];for(let p=0,E=w.length;p<E;p++){const A=w[p];v.push(A.clone())}this.faceVertexUvs[u].push(v)}}const r=t.morphTargets;for(let u=0,f=r.length;u<f;u++){const d={};if(d.name=r[u].name,r[u].vertices!==void 0){d.vertices=[];for(let m=0,b=r[u].vertices.length;m<b;m++)d.vertices.push(r[u].vertices[m].clone())}if(r[u].normals!==void 0){d.normals=[];for(let m=0,b=r[u].normals.length;m<b;m++)d.normals.push(r[u].normals[m].clone())}this.morphTargets.push(d)}const s=t.morphNormals;for(let u=0,f=s.length;u<f;u++){const d={};if(s[u].vertexNormals!==void 0){d.vertexNormals=[];for(let m=0,b=s[u].vertexNormals.length;m<b;m++){const w=s[u].vertexNormals[m],v={};v.a=w.a.clone(),v.b=w.b.clone(),v.c=w.c.clone(),d.vertexNormals.push(v)}}if(s[u].faceNormals!==void 0){d.faceNormals=[];for(let m=0,b=s[u].faceNormals.length;m<b;m++)d.faceNormals.push(s[u].faceNormals[m].clone())}this.morphNormals.push(d)}const o=t.skinWeights;for(let u=0,f=o.length;u<f;u++)this.skinWeights.push(o[u].clone());const a=t.skinIndices;for(let u=0,f=a.length;u<f;u++)this.skinIndices.push(a[u].clone());const c=t.lineDistances;for(let u=0,f=c.length;u<f;u++)this.lineDistances.push(c[u]);const l=t.boundingBox;l!==null&&(this.boundingBox=l.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Lc extends Ue{constructor(e,n,i,r,s,o){super();this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:o},this.fromBufferGeometry(new Ws(e,n,i,r,s,o)),this.mergeVertices()}}class Ws extends xe{constructor(e=1,n=1,i=1,r=1,s=1,o=1){super();this.type="BoxBufferGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const c=[],l=[],h=[],u=[];let f=0,d=0;m("z","y","x",-1,-1,i,n,e,o,s,0),m("z","y","x",1,-1,i,n,-e,o,s,1),m("x","z","y",1,1,e,i,n,r,o,2),m("x","z","y",1,-1,e,i,-n,r,o,3),m("x","y","z",1,-1,e,n,i,r,s,4),m("x","y","z",-1,-1,e,n,-i,r,s,5),this.setIndex(c),this.setAttribute("position",new ie(l,3)),this.setAttribute("normal",new ie(h,3)),this.setAttribute("uv",new ie(u,2));function m(b,w,v,p,E,A,R,S,D,N,U){const g=A/D,y=R/N,x=A/2,M=R/2,_=S/2,T=D+1,L=N+1;let I=0,z=0;const V=new C;for(let H=0;H<L;H++){const k=H*y-M;for(let Z=0;Z<T;Z++){const ce=Z*g-x;V[b]=ce*p,V[w]=k*E,V[v]=_,l.push(V.x,V.y,V.z),V[b]=0,V[w]=0,V[v]=S>0?1:-1,h.push(V.x,V.y,V.z),u.push(Z/D),u.push(1-H/N),I+=1}}for(let H=0;H<N;H++)for(let k=0;k<D;k++){const Z=f+k+T*H,ce=f+k+T*(H+1),Ee=f+(k+1)+T*(H+1),j=f+(k+1)+T*H;c.push(Z,ce,j),c.push(ce,Ee,j),z+=6}a.addGroup(d,z,U),d+=z,f+=I}}}function Mr(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function gt(t){const e={};for(let n=0;n<t.length;n++){const i=Mr(t[n]);for(const r in i)e[r]=i[r]}return e}const qf={clone:Mr,merge:gt};var rm=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,sm=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function wt(t){Se.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=rm,this.fragmentShader=sm,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}wt.prototype=Object.create(Se.prototype);wt.prototype.constructor=wt;wt.prototype.isShaderMaterial=!0;wt.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Mr(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this};wt.prototype.toJSON=function(t){const e=Se.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?e.uniforms[i]={type:"t",value:s.toJSON(t).uuid}:s&&s.isColor?e.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?e.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?e.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?e.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?e.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?e.uniforms[i]={type:"m4",value:s.toArray()}:e.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e};function fn(){me.call(this),this.type="Camera",this.matrixWorldInverse=new fe,this.projectionMatrix=new fe,this.projectionMatrixInverse=new fe}fn.prototype=Object.assign(Object.create(me.prototype),{constructor:fn,isCamera:!0,copy:function(t,e){return me.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new C),this.updateMatrixWorld(!0);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){me.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(t,e){me.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function Qe(t,e,n,i){fn.call(this),this.type="PerspectiveCamera",this.fov=t!==void 0?t:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=i!==void 0?i:2e3,this.focus=10,this.aspect=e!==void 0?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Qe.prototype=Object.assign(Object.create(fn.prototype),{constructor:Qe,isPerspectiveCamera:!0,copy:function(t,e){return fn.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=be.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(be.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/t},getEffectiveFOV:function(){return be.RAD2DEG*2*Math.atan(Math.tan(be.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,s){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(be.DEG2RAD*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,c=s.fullHeight;r+=s.offsetX*i/a,e-=s.offsetY*n/c,i*=s.width/a,n*=s.height/c}const o=this.filmOffset;o!==0&&(r+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=me.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const $i=90,Qi=1;function Sr(t,e,n){if(me.call(this),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new Qe($i,Qi,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new C(1,0,0)),this.add(i);const r=new Qe($i,Qi,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new C(-1,0,0)),this.add(r);const s=new Qe($i,Qi,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new C(0,1,0)),this.add(s);const o=new Qe($i,Qi,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new C(0,-1,0)),this.add(o);const a=new Qe($i,Qi,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new C(0,0,1)),this.add(a);const c=new Qe($i,Qi,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new C(0,0,-1)),this.add(c),this.update=function(l,h){this.parent===null&&this.updateMatrixWorld();const u=l.xr.enabled,f=l.getRenderTarget();l.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,l.setRenderTarget(n,0),l.render(h,i),l.setRenderTarget(n,1),l.render(h,r),l.setRenderTarget(n,2),l.render(h,s),l.setRenderTarget(n,3),l.render(h,o),l.setRenderTarget(n,4),l.render(h,a),n.texture.generateMipmaps=d,l.setRenderTarget(n,5),l.render(h,c),l.setRenderTarget(f),l.xr.enabled=u},this.clear=function(l,h,u,f){const d=l.getRenderTarget();for(let m=0;m<6;m++)l.setRenderTarget(n,m),l.clear(h,u,f);l.setRenderTarget(d)}}Sr.prototype=Object.create(me.prototype);Sr.prototype.constructor=Sr;function Kn(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),Dt.call(this,t,t,e),this.texture.isWebGLCubeRenderTargetTexture=!0}Kn.prototype=Object.create(Dt.prototype);Kn.prototype.constructor=Kn;Kn.prototype.isWebGLCubeRenderTarget=!0;Kn.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=It,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

			varying vec3 vWorldDirection;

			vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

				return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

			}

			void main() {

				vWorldDirection = transformDirection( position, modelMatrix );

				#include <begin_vertex>
				#include <project_vertex>

			}
		`,fragmentShader:`

			uniform sampler2D tEquirect;

			varying vec3 vWorldDirection;

			#include <common>

			void main() {

				vec3 direction = normalize( vWorldDirection );

				vec2 sampleUV = equirectUv( direction );

				gl_FragColor = texture2D( tEquirect, sampleUV );

			}
		`},i=new Ws(5,5,5),r=new wt({name:"CubemapFromEquirect",uniforms:Mr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:lt,blending:Rn});r.uniforms.tEquirect.value=e;const s=new je(i,r),o=e.minFilter;return e.minFilter===Ur&&(e.minFilter=rt),new Sr(1,10,this).update(t,s),e.minFilter=o,s.geometry.dispose(),s.material.dispose(),this};function Si(t,e,n,i,r,s,o,a,c,l,h,u){Ge.call(this,null,s,o,a,c,l,i,r,h,u),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=c!==void 0?c:ut,this.minFilter=l!==void 0?l:ut,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Si.prototype=Object.create(Ge.prototype);Si.prototype.constructor=Si;Si.prototype.isDataTexture=!0;const er=new Bn,uo=new C;class js{constructor(e,n,i,r,s,o){this.planes=[e!==void 0?e:new un,n!==void 0?n:new un,i!==void 0?i:new un,r!==void 0?r:new un,s!==void 0?s:new un,o!==void 0?o:new un]}set(e,n,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(n),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}clone(){return new this.constructor().copy(this)}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const n=this.planes,i=e.elements,r=i[0],s=i[1],o=i[2],a=i[3],c=i[4],l=i[5],h=i[6],u=i[7],f=i[8],d=i[9],m=i[10],b=i[11],w=i[12],v=i[13],p=i[14],E=i[15];return n[0].setComponents(a-r,u-c,b-f,E-w).normalize(),n[1].setComponents(a+r,u+c,b+f,E+w).normalize(),n[2].setComponents(a+s,u+l,b+d,E+v).normalize(),n[3].setComponents(a-s,u-l,b-d,E-v).normalize(),n[4].setComponents(a-o,u-h,b-m,E-p).normalize(),n[5].setComponents(a+o,u+h,b+m,E+p).normalize(),this}intersectsObject(e){const n=e.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),er.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(er)}intersectsSprite(e){return er.center.set(0,0,0),er.radius=.7071067811865476,er.applyMatrix4(e.matrixWorld),this.intersectsSphere(er)}intersectsSphere(e){const n=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(n[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(uo.x=r.normal.x>0?e.max.x:e.min.x,uo.y=r.normal.y>0?e.max.y:e.min.y,uo.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(uo)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}}function Xf(){let t=null,e=!1,n=null,i=null;function r(s,o){n(s,o),i=t.requestAnimationFrame(r)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){n=s},setContext:function(s){t=s}}}function om(t,e){const n=e.isWebGL2,i=new WeakMap;function r(l,h){const u=l.array,f=l.usage,d=t.createBuffer();t.bindBuffer(h,d),t.bufferData(h,u,f),l.onUploadCallback();let m=5126;return u instanceof Float32Array?m=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?m=5123:u instanceof Int16Array?m=5122:u instanceof Uint32Array?m=5125:u instanceof Int32Array?m=5124:u instanceof Int8Array?m=5120:u instanceof Uint8Array&&(m=5121),{buffer:d,type:m,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version}}function s(l,h,u){const f=h.array,d=h.updateRange;t.bindBuffer(u,l),d.count===-1?t.bufferSubData(u,0,f):(n?t.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):t.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),i.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);const h=i.get(l);h&&(t.deleteBuffer(h.buffer),i.delete(l))}function c(l,h){if(l.isGLBufferAttribute){var u=i.get(l);(!u||u.version<l.version)&&i.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const f=i.get(l);f===void 0?i.set(l,r(l,h)):f.version<l.version&&(s(f.buffer,l,h),f.version=l.version)}return{get:o,remove:a,update:c}}class Yf extends Ue{constructor(e,n,i,r){super();this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:r},this.fromBufferGeometry(new va(e,n,i,r)),this.mergeVertices()}}class va extends xe{constructor(e,n,i,r){super();this.type="PlaneBufferGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:r},e=e||1,n=n||1;const s=e/2,o=n/2,a=Math.floor(i)||1,c=Math.floor(r)||1,l=a+1,h=c+1,u=e/a,f=n/c,d=[],m=[],b=[],w=[];for(let v=0;v<h;v++){const p=v*f-o;for(let E=0;E<l;E++){const A=E*u-s;m.push(A,-p,0),b.push(0,0,1),w.push(E/a),w.push(1-v/c)}}for(let v=0;v<c;v++)for(let p=0;p<a;p++){const E=p+l*v,A=p+l*(v+1),R=p+1+l*(v+1),S=p+1+l*v;d.push(E,A,S),d.push(A,R,S)}this.setIndex(d),this.setAttribute("position",new ie(m,3)),this.setAttribute("normal",new ie(b,3)),this.setAttribute("uv",new ie(w,2))}}var am=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,cm=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,lm=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,um=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,hm=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,fm="vec3 transformed = vec3( position );",dm=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,pm=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,mm=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,gm=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,vm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,ym=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,xm=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,_m=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,bm=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,wm=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Mm=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Sm=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Tm=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Em=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Am=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Lm=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Cm=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Rm=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Pm="gl_FragColor = linearToOutputTexel( gl_FragColor );",Im=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,Dm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Om=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Fm=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Bm=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Nm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Um=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,Gm=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,zm=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Hm=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Vm=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,km=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,Wm=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,jm=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,qm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,Xm=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,Ym=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Zm=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Jm=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Km=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,$m=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,Qm=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,eg=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,tg=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,ng=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,ig=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,rg=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,sg=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,og=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,ag=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,cg=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,lg=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ug=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,hg=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,fg=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,dg=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,pg=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,mg=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,gg=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,vg=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,yg=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,xg=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,_g=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,bg=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,wg=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Mg=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Sg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Tg=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Eg=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Ag=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Lg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Cg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Rg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Pg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Ig=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Dg=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Og=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,Fg=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Bg=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Ng=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Ug=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Gg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,zg=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Hg=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,Vg=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,kg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Wg=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,jg=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,qg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Xg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Yg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Zg=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,Jg=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Kg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,$g=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Qg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,ev=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,tv=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,nv=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,iv=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,rv=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,sv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,ov=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,av=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,cv=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lv=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,uv=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hv=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fv=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dv=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,pv=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mv=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gv=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vv=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,yv=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xv=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_v=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,bv=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,wv=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Mv=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Sv=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Tv=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ev=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Av=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const De={alphamap_fragment:am,alphamap_pars_fragment:cm,alphatest_fragment:lm,aomap_fragment:um,aomap_pars_fragment:hm,begin_vertex:fm,beginnormal_vertex:dm,bsdfs:pm,bumpmap_pars_fragment:mm,clipping_planes_fragment:gm,clipping_planes_pars_fragment:vm,clipping_planes_pars_vertex:ym,clipping_planes_vertex:xm,color_fragment:_m,color_pars_fragment:bm,color_pars_vertex:wm,color_vertex:Mm,common:Sm,cube_uv_reflection_fragment:Tm,defaultnormal_vertex:Em,displacementmap_pars_vertex:Am,displacementmap_vertex:Lm,emissivemap_fragment:Cm,emissivemap_pars_fragment:Rm,encodings_fragment:Pm,encodings_pars_fragment:Im,envmap_fragment:Dm,envmap_common_pars_fragment:Om,envmap_pars_fragment:Fm,envmap_pars_vertex:Bm,envmap_physical_pars_fragment:Xm,envmap_vertex:Nm,fog_vertex:Um,fog_pars_vertex:Gm,fog_fragment:zm,fog_pars_fragment:Hm,gradientmap_pars_fragment:Vm,lightmap_fragment:km,lightmap_pars_fragment:Wm,lights_lambert_vertex:jm,lights_pars_begin:qm,lights_toon_fragment:Ym,lights_toon_pars_fragment:Zm,lights_phong_fragment:Jm,lights_phong_pars_fragment:Km,lights_physical_fragment:$m,lights_physical_pars_fragment:Qm,lights_fragment_begin:eg,lights_fragment_maps:tg,lights_fragment_end:ng,logdepthbuf_fragment:ig,logdepthbuf_pars_fragment:rg,logdepthbuf_pars_vertex:sg,logdepthbuf_vertex:og,map_fragment:ag,map_pars_fragment:cg,map_particle_fragment:lg,map_particle_pars_fragment:ug,metalnessmap_fragment:hg,metalnessmap_pars_fragment:fg,morphnormal_vertex:dg,morphtarget_pars_vertex:pg,morphtarget_vertex:mg,normal_fragment_begin:gg,normal_fragment_maps:vg,normalmap_pars_fragment:yg,clearcoat_normal_fragment_begin:xg,clearcoat_normal_fragment_maps:_g,clearcoat_pars_fragment:bg,packing:wg,premultiplied_alpha_fragment:Mg,project_vertex:Sg,dithering_fragment:Tg,dithering_pars_fragment:Eg,roughnessmap_fragment:Ag,roughnessmap_pars_fragment:Lg,shadowmap_pars_fragment:Cg,shadowmap_pars_vertex:Rg,shadowmap_vertex:Pg,shadowmask_pars_fragment:Ig,skinbase_vertex:Dg,skinning_pars_vertex:Og,skinning_vertex:Fg,skinnormal_vertex:Bg,specularmap_fragment:Ng,specularmap_pars_fragment:Ug,tonemapping_fragment:Gg,tonemapping_pars_fragment:zg,transmissionmap_fragment:Hg,transmissionmap_pars_fragment:Vg,uv_pars_fragment:kg,uv_pars_vertex:Wg,uv_vertex:jg,uv2_pars_fragment:qg,uv2_pars_vertex:Xg,uv2_vertex:Yg,worldpos_vertex:Zg,background_frag:Jg,background_vert:Kg,cube_frag:$g,cube_vert:Qg,depth_frag:ev,depth_vert:tv,distanceRGBA_frag:nv,distanceRGBA_vert:iv,equirect_frag:rv,equirect_vert:sv,linedashed_frag:ov,linedashed_vert:av,meshbasic_frag:cv,meshbasic_vert:lv,meshlambert_frag:uv,meshlambert_vert:hv,meshmatcap_frag:fv,meshmatcap_vert:dv,meshtoon_frag:pv,meshtoon_vert:mv,meshphong_frag:gv,meshphong_vert:vv,meshphysical_frag:yv,meshphysical_vert:xv,normal_frag:_v,normal_vert:bv,points_frag:wv,points_vert:Mv,shadow_frag:Sv,shadow_vert:Tv,sprite_frag:Ev,sprite_vert:Av},he={common:{diffuse:{value:new oe(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new yt},uv2Transform:{value:new yt},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Y(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new oe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new oe(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new yt}},sprite:{diffuse:{value:new oe(15658734)},opacity:{value:1},center:{value:new Y(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new yt}}},Zt={basic:{uniforms:gt([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.fog]),vertexShader:De.meshbasic_vert,fragmentShader:De.meshbasic_frag},lambert:{uniforms:gt([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.fog,he.lights,{emissive:{value:new oe(0)}}]),vertexShader:De.meshlambert_vert,fragmentShader:De.meshlambert_frag},phong:{uniforms:gt([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.fog,he.lights,{emissive:{value:new oe(0)},specular:{value:new oe(1118481)},shininess:{value:30}}]),vertexShader:De.meshphong_vert,fragmentShader:De.meshphong_frag},standard:{uniforms:gt([he.common,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.roughnessmap,he.metalnessmap,he.fog,he.lights,{emissive:{value:new oe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:De.meshphysical_vert,fragmentShader:De.meshphysical_frag},toon:{uniforms:gt([he.common,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.gradientmap,he.fog,he.lights,{emissive:{value:new oe(0)}}]),vertexShader:De.meshtoon_vert,fragmentShader:De.meshtoon_frag},matcap:{uniforms:gt([he.common,he.bumpmap,he.normalmap,he.displacementmap,he.fog,{matcap:{value:null}}]),vertexShader:De.meshmatcap_vert,fragmentShader:De.meshmatcap_frag},points:{uniforms:gt([he.points,he.fog]),vertexShader:De.points_vert,fragmentShader:De.points_frag},dashed:{uniforms:gt([he.common,he.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:De.linedashed_vert,fragmentShader:De.linedashed_frag},depth:{uniforms:gt([he.common,he.displacementmap]),vertexShader:De.depth_vert,fragmentShader:De.depth_frag},normal:{uniforms:gt([he.common,he.bumpmap,he.normalmap,he.displacementmap,{opacity:{value:1}}]),vertexShader:De.normal_vert,fragmentShader:De.normal_frag},sprite:{uniforms:gt([he.sprite,he.fog]),vertexShader:De.sprite_vert,fragmentShader:De.sprite_frag},background:{uniforms:{uvTransform:{value:new yt},t2D:{value:null}},vertexShader:De.background_vert,fragmentShader:De.background_frag},cube:{uniforms:gt([he.envmap,{opacity:{value:1}}]),vertexShader:De.cube_vert,fragmentShader:De.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:De.equirect_vert,fragmentShader:De.equirect_frag},distanceRGBA:{uniforms:gt([he.common,he.displacementmap,{referencePosition:{value:new C},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:De.distanceRGBA_vert,fragmentShader:De.distanceRGBA_frag},shadow:{uniforms:gt([he.lights,he.fog,{color:{value:new oe(0)},opacity:{value:1}}]),vertexShader:De.shadow_vert,fragmentShader:De.shadow_frag}};Zt.physical={uniforms:gt([Zt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Y(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new oe(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:De.meshphysical_vert,fragmentShader:De.meshphysical_frag};function Lv(t,e,n,i,r){const s=new oe(0);let o=0,a,c,l=null,h=0,u=null;function f(m,b,w,v){let p=b.isScene===!0?b.background:null;p&&p.isTexture&&(p=e.get(p));const E=t.xr,A=E.getSession&&E.getSession();A&&A.environmentBlendMode==="additive"&&(p=null),p===null?d(s,o):p&&p.isColor&&(d(p,1),v=!0),(t.autoClear||v)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),p&&(p.isCubeTexture||p.isWebGLCubeRenderTarget||p.isWebGLCubeRenderTargetTexture||p.mapping===Nr)?(c===void 0&&(c=new je(new Ws(1,1,1),new wt({name:"BackgroundCubeMaterial",uniforms:Mr(Zt.cube.uniforms),vertexShader:Zt.cube.vertexShader,fragmentShader:Zt.cube.fragmentShader,side:lt,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(R,S,D){this.matrixWorld.copyPosition(D.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),p.isWebGLCubeRenderTarget&&(p=p.texture),c.material.uniforms.envMap.value=p,c.material.uniforms.flipEnvMap.value=p.isCubeTexture?-1:1,(l!==p||h!==p.version||u!==t.toneMapping)&&(c.material.needsUpdate=!0,l=p,h=p.version,u=t.toneMapping),m.unshift(c,c.geometry,c.material,0,0,null)):p&&p.isTexture&&(a===void 0&&(a=new je(new va(2,2),new wt({name:"BackgroundMaterial",uniforms:Mr(Zt.background.uniforms),vertexShader:Zt.background.vertexShader,fragmentShader:Zt.background.fragmentShader,side:Bi,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=p,p.matrixAutoUpdate===!0&&p.updateMatrix(),a.material.uniforms.uvTransform.value.copy(p.matrix),(l!==p||h!==p.version||u!==t.toneMapping)&&(a.material.needsUpdate=!0,l=p,h=p.version,u=t.toneMapping),m.unshift(a,a.geometry,a.material,0,0,null))}function d(m,b){n.buffers.color.setClear(m.r,m.g,m.b,b,r)}return{getClearColor:function(){return s},setClearColor:function(m,b){s.set(m),o=b!==void 0?b:1,d(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(m){o=m,d(s,o)},render:f}}function Cv(t,e,n,i){const r=t.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},c=b(null);let l=c;function h(M,_,T,L,I){let z=!1;if(o){const V=m(L,T,_);l!==V&&(l=V,f(l.object)),z=w(L,I),z&&v(L,I)}else{const V=_.wireframe===!0;(l.geometry!==L.id||l.program!==T.id||l.wireframe!==V)&&(l.geometry=L.id,l.program=T.id,l.wireframe=V,z=!0)}M.isInstancedMesh===!0&&(z=!0),I!==null&&n.update(I,34963),z&&(D(M,_,T,L),I!==null&&t.bindBuffer(34963,n.get(I).buffer))}function u(){return i.isWebGL2?t.createVertexArray():s.createVertexArrayOES()}function f(M){return i.isWebGL2?t.bindVertexArray(M):s.bindVertexArrayOES(M)}function d(M){return i.isWebGL2?t.deleteVertexArray(M):s.deleteVertexArrayOES(M)}function m(M,_,T){const L=T.wireframe===!0;let I=a[M.id];I===void 0&&(I={},a[M.id]=I);let z=I[_.id];z===void 0&&(z={},I[_.id]=z);let V=z[L];return V===void 0&&(V=b(u()),z[L]=V),V}function b(M){const _=[],T=[],L=[];for(let I=0;I<r;I++)_[I]=0,T[I]=0,L[I]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:_,enabledAttributes:T,attributeDivisors:L,object:M,attributes:{},index:null}}function w(M,_){const T=l.attributes,L=M.attributes;if(Object.keys(T).length!==Object.keys(L).length)return!0;for(const I in L){const z=T[I],V=L[I];if(z===void 0||z.attribute!==V||z.data!==V.data)return!0}return l.index!==_}function v(M,_){const T={},L=M.attributes;for(const I in L){const z=L[I],V={};V.attribute=z,z.data&&(V.data=z.data),T[I]=V}l.attributes=T,l.index=_}function p(){const M=l.newAttributes;for(let _=0,T=M.length;_<T;_++)M[_]=0}function E(M){A(M,0)}function A(M,_){const T=l.newAttributes,L=l.enabledAttributes,I=l.attributeDivisors;T[M]=1,L[M]===0&&(t.enableVertexAttribArray(M),L[M]=1),I[M]!==_&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](M,_),I[M]=_)}function R(){const M=l.newAttributes,_=l.enabledAttributes;for(let T=0,L=_.length;T<L;T++)_[T]!==M[T]&&(t.disableVertexAttribArray(T),_[T]=0)}function S(M,_,T,L,I,z){i.isWebGL2===!0&&(T===5124||T===5125)?t.vertexAttribIPointer(M,_,T,I,z):t.vertexAttribPointer(M,_,T,L,I,z)}function D(M,_,T,L){if(i.isWebGL2===!1&&(M.isInstancedMesh||L.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;p();const I=L.attributes,z=T.getAttributes(),V=_.defaultAttributeValues;for(const H in z){const k=z[H];if(k>=0){const Z=I[H];if(Z!==void 0){const ce=Z.normalized,Ee=Z.itemSize,j=n.get(Z);if(j===void 0)continue;const Pe=j.buffer,de=j.type,Te=j.bytesPerElement;if(Z.isInterleavedBufferAttribute){const Me=Z.data,Ie=Me.stride,Ae=Z.offset;Me&&Me.isInstancedInterleavedBuffer?(A(k,Me.meshPerAttribute),L._maxInstanceCount===void 0&&(L._maxInstanceCount=Me.meshPerAttribute*Me.count)):E(k),t.bindBuffer(34962,Pe),S(k,Ee,de,ce,Ie*Te,Ae*Te)}else Z.isInstancedBufferAttribute?(A(k,Z.meshPerAttribute),L._maxInstanceCount===void 0&&(L._maxInstanceCount=Z.meshPerAttribute*Z.count)):E(k),t.bindBuffer(34962,Pe),S(k,Ee,de,ce,0,0)}else if(H==="instanceMatrix"){const ce=n.get(M.instanceMatrix);if(ce===void 0)continue;const Ee=ce.buffer,j=ce.type;A(k+0,1),A(k+1,1),A(k+2,1),A(k+3,1),t.bindBuffer(34962,Ee),t.vertexAttribPointer(k+0,4,j,!1,64,0),t.vertexAttribPointer(k+1,4,j,!1,64,16),t.vertexAttribPointer(k+2,4,j,!1,64,32),t.vertexAttribPointer(k+3,4,j,!1,64,48)}else if(H==="instanceColor"){const ce=n.get(M.instanceColor);if(ce===void 0)continue;const Ee=ce.buffer,j=ce.type;A(k,1),t.bindBuffer(34962,Ee),t.vertexAttribPointer(k,3,j,!1,12,0)}else if(V!==void 0){const ce=V[H];if(ce!==void 0)switch(ce.length){case 2:t.vertexAttrib2fv(k,ce);break;case 3:t.vertexAttrib3fv(k,ce);break;case 4:t.vertexAttrib4fv(k,ce);break;default:t.vertexAttrib1fv(k,ce)}}}}R()}function N(){y();for(const M in a){const _=a[M];for(const T in _){const L=_[T];for(const I in L)d(L[I].object),delete L[I];delete _[T]}delete a[M]}}function U(M){if(a[M.id]===void 0)return;const _=a[M.id];for(const T in _){const L=_[T];for(const I in L)d(L[I].object),delete L[I];delete _[T]}delete a[M.id]}function g(M){for(const _ in a){const T=a[_];if(T[M.id]===void 0)continue;const L=T[M.id];for(const I in L)d(L[I].object),delete L[I];delete T[M.id]}}function y(){x(),l!==c&&(l=c,f(l.object))}function x(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:h,reset:y,resetDefaultState:x,dispose:N,releaseStatesOfGeometry:U,releaseStatesOfProgram:g,initAttributes:p,enableAttribute:E,disableUnusedAttributes:R}}function Rv(t,e,n,i){const r=i.isWebGL2;let s;function o(l){s=l}function a(l,h){t.drawArrays(s,l,h),n.update(h,s,1)}function c(l,h,u){if(u===0)return;let f,d;if(r)f=t,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,l,h,u),n.update(h,s,u)}this.setMode=o,this.render=a,this.renderInstances=c}function Pv(t,e,n){let i;function r(){if(i!==void 0)return i;const S=e.get("EXT_texture_filter_anisotropic");return S!==null?i=t.getParameter(S.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(S){if(S==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";S="mediump"}return S==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&t instanceof WebGL2ComputeRenderingContext;let a=n.precision!==void 0?n.precision:"highp";const c=s(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const l=n.logarithmicDepthBuffer===!0,h=t.getParameter(34930),u=t.getParameter(35660),f=t.getParameter(3379),d=t.getParameter(34076),m=t.getParameter(34921),b=t.getParameter(36347),w=t.getParameter(36348),v=t.getParameter(36349),p=u>0,E=o||!!e.get("OES_texture_float"),A=p&&E,R=o?t.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:d,maxAttributes:m,maxVertexUniforms:b,maxVaryings:w,maxFragmentUniforms:v,vertexTextures:p,floatFragmentTextures:E,floatVertexTextures:A,maxSamples:R}}function Iv(t){const e=this;let n=null,i=0,r=!1,s=!1;const o=new un,a=new yt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,d){const m=u.length!==0||f||i!==0||r;return r=f,n=h(u,d,0),i=u.length,m},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,l()},this.setState=function(u,f,d){const m=u.clippingPlanes,b=u.clipIntersection,w=u.clipShadows,v=t.get(u);if(!r||m===null||m.length===0||s&&!w)s?h(null):l();else{const p=s?0:i,E=p*4;let A=v.clippingState||null;c.value=A,A=h(m,f,E,d);for(let R=0;R!==E;++R)A[R]=n[R];v.clippingState=A,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=p}};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(u,f,d,m){const b=u!==null?u.length:0;let w=null;if(b!==0){if(w=c.value,m!==!0||w===null){const v=d+b*4,p=f.matrixWorldInverse;a.getNormalMatrix(p),(w===null||w.length<v)&&(w=new Float32Array(v));for(let E=0,A=d;E!==b;++E,A+=4)o.copy(u[E]).applyMatrix4(p,a),o.normal.toArray(w,A),w[A+3]=o.constant}c.value=w,c.needsUpdate=!0}return e.numPlanes=b,e.numIntersection=0,w}}function Dv(t){let e=new WeakMap;function n(s,o){return o===br?s.mapping=zs:o===ko&&(s.mapping=Hs),s}function i(s){if(s&&s.isTexture){const o=s.mapping;if(o===br||o===ko)if(e.has(s)){const a=e.get(s).texture;return n(a,s.mapping)}else{const a=s.image;if(a&&a.height>0){const c=t.getRenderList(),l=t.getRenderTarget(),h=t.getRenderState(),u=new Kn(a.height/2);return u.fromEquirectangularTexture(t,s),e.set(s,u),t.setRenderTarget(l),t.setRenderList(c),t.setRenderState(h),n(u.texture,s.mapping)}else return null}}return s}function r(){e=new WeakMap}return{get:i,dispose:r}}function Ov(t){const e={};return{has:function(n){if(e[n]!==void 0)return e[n]!==null;let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i!==null},get:function(n){return this.has(n)||console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),e[n]}}}function Fv(t,e,n,i){const r=new WeakMap,s=new WeakMap;function o(u){const f=u.target,d=r.get(f);d.index!==null&&e.remove(d.index);for(const b in d.attributes)e.remove(d.attributes[b]);f.removeEventListener("dispose",o),r.delete(f);const m=s.get(d);m&&(e.remove(m),s.delete(d)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function a(u,f){let d=r.get(f);return d||(f.addEventListener("dispose",o),f.isBufferGeometry?d=f:f.isGeometry&&(f._bufferGeometry===void 0&&(f._bufferGeometry=new xe().setFromObject(u)),d=f._bufferGeometry),r.set(f,d),n.memory.geometries++,d)}function c(u){const f=u.attributes;for(const m in f)e.update(f[m],34962);const d=u.morphAttributes;for(const m in d){const b=d[m];for(let w=0,v=b.length;w<v;w++)e.update(b[w],34962)}}function l(u){const f=[],d=u.index,m=u.attributes.position;let b=0;if(d!==null){const p=d.array;b=d.version;for(let E=0,A=p.length;E<A;E+=3){const R=p[E+0],S=p[E+1],D=p[E+2];f.push(R,S,S,D,D,R)}}else{const p=m.array;b=m.version;for(let E=0,A=p.length/3-1;E<A;E+=3){const R=E+0,S=E+1,D=E+2;f.push(R,S,S,D,D,R)}}const w=new(Wf(f)>65535?Mi:Jn)(f,1);w.version=b;const v=s.get(u);v&&e.remove(v),s.set(u,w)}function h(u){const f=s.get(u);if(f){const d=u.index;d!==null&&f.version<d.version&&l(u)}else l(u);return s.get(u)}return{get:a,update:c,getWireframeAttribute:h}}function Bv(t,e,n,i){const r=i.isWebGL2;let s;function o(f){s=f}let a,c;function l(f){a=f.type,c=f.bytesPerElement}function h(f,d){t.drawElements(s,d,a,f*c),n.update(d,s,1)}function u(f,d,m){if(m===0)return;let b,w;if(r)b=t,w="drawElementsInstanced";else if(b=e.get("ANGLE_instanced_arrays"),w="drawElementsInstancedANGLE",b===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}b[w](s,d,a,f*c,m),n.update(d,s,m)}this.setMode=o,this.setIndex=l,this.render=h,this.renderInstances=u}function Nv(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(n.calls++,o){case 4:n.triangles+=a*(s/3);break;case 1:n.lines+=a*(s/2);break;case 3:n.lines+=a*(s-1);break;case 2:n.lines+=a*s;break;case 0:n.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function Uv(t,e){return t[0]-e[0]}function Gv(t,e){return Math.abs(e[1])-Math.abs(t[1])}function zv(t){const e={},n=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,o,a,c){const l=s.morphTargetInfluences,h=l===void 0?0:l.length;let u=e[o.id];if(u===void 0){u=[];for(let w=0;w<h;w++)u[w]=[w,0];e[o.id]=u}for(let w=0;w<h;w++){const v=u[w];v[0]=w,v[1]=l[w]}u.sort(Gv);for(let w=0;w<8;w++)w<h&&u[w][1]?(i[w][0]=u[w][0],i[w][1]=u[w][1]):(i[w][0]=Number.MAX_SAFE_INTEGER,i[w][1]=0);i.sort(Uv);const f=a.morphTargets&&o.morphAttributes.position,d=a.morphNormals&&o.morphAttributes.normal;let m=0;for(let w=0;w<8;w++){const v=i[w],p=v[0],E=v[1];p!==Number.MAX_SAFE_INTEGER&&E?(f&&o.getAttribute("morphTarget"+w)!==f[p]&&o.setAttribute("morphTarget"+w,f[p]),d&&o.getAttribute("morphNormal"+w)!==d[p]&&o.setAttribute("morphNormal"+w,d[p]),n[w]=E,m+=E):(f&&o.getAttribute("morphTarget"+w)!==void 0&&o.deleteAttribute("morphTarget"+w),d&&o.getAttribute("morphNormal"+w)!==void 0&&o.deleteAttribute("morphNormal"+w),n[w]=0)}const b=o.morphTargetsRelative?1:1-m;c.getUniforms().setValue(t,"morphTargetBaseInfluence",b),c.getUniforms().setValue(t,"morphTargetInfluences",n)}return{update:r}}function Hv(t,e,n,i){let r=new WeakMap;function s(a){const c=i.render.frame,l=a.geometry,h=e.get(a,l);return r.get(h)!==c&&(l.isGeometry&&h.updateFromObject(a),e.update(h),r.set(h,c)),a.isInstancedMesh&&(n.update(a.instanceMatrix,34962),a.instanceColor!==null&&n.update(a.instanceColor,34962)),h}function o(){r=new WeakMap}return{update:s,dispose:o}}function In(t,e,n,i,r,s,o,a,c,l){t=t!==void 0?t:[],e=e!==void 0?e:zs,o=o!==void 0?o:jn,Ge.call(this,t,e,n,i,r,s,o,a,c,l),this.flipY=!1}In.prototype=Object.create(Ge.prototype);In.prototype.constructor=In;In.prototype.isCubeTexture=!0;Object.defineProperty(In.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});function Tr(t,e,n,i){Ge.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=ut,this.minFilter=ut,this.wrapR=pt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Tr.prototype=Object.create(Ge.prototype);Tr.prototype.constructor=Tr;Tr.prototype.isDataTexture2DArray=!0;function Er(t,e,n,i){Ge.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=ut,this.minFilter=ut,this.wrapR=pt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Er.prototype=Object.create(Ge.prototype);Er.prototype.constructor=Er;Er.prototype.isDataTexture3D=!0;const Zf=new Ge,Vv=new Tr,kv=new Er,Jf=new In,su=[],ou=[],au=new Float32Array(16),cu=new Float32Array(9),lu=new Float32Array(4);function Hr(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=su[r];if(s===void 0&&(s=new Float32Array(r),su[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=n,t[o].toArray(s,a)}return s}function Wt(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Bt(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Kf(t,e){let n=ou[e];n===void 0&&(n=new Int32Array(e),ou[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Wv(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function jv(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Wt(n,e))return;t.uniform2fv(this.addr,e),Bt(n,e)}}function qv(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Wt(n,e))return;t.uniform3fv(this.addr,e),Bt(n,e)}}function Xv(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Wt(n,e))return;t.uniform4fv(this.addr,e),Bt(n,e)}}function Yv(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Wt(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Bt(n,e)}else{if(Wt(n,i))return;lu.set(i),t.uniformMatrix2fv(this.addr,!1,lu),Bt(n,i)}}function Zv(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Wt(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Bt(n,e)}else{if(Wt(n,i))return;cu.set(i),t.uniformMatrix3fv(this.addr,!1,cu),Bt(n,i)}}function Jv(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Wt(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Bt(n,e)}else{if(Wt(n,i))return;au.set(i),t.uniformMatrix4fv(this.addr,!1,au),Bt(n,i)}}function Kv(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||Zf,r)}function $v(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||Vv,r)}function Qv(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||kv,r)}function ey(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||Jf,r)}function ty(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function ny(t,e){const n=this.cache;Wt(n,e)||(t.uniform2iv(this.addr,e),Bt(n,e))}function iy(t,e){const n=this.cache;Wt(n,e)||(t.uniform3iv(this.addr,e),Bt(n,e))}function ry(t,e){const n=this.cache;Wt(n,e)||(t.uniform4iv(this.addr,e),Bt(n,e))}function sy(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function oy(t){switch(t){case 5126:return Wv;case 35664:return jv;case 35665:return qv;case 35666:return Xv;case 35674:return Yv;case 35675:return Zv;case 35676:return Jv;case 5124:case 35670:return ty;case 35667:case 35671:return ny;case 35668:case 35672:return iy;case 35669:case 35673:return ry;case 5125:return sy;case 35678:case 36198:case 36298:case 36306:case 35682:return Kv;case 35679:case 36299:case 36307:return Qv;case 35680:case 36300:case 36308:case 36293:return ey;case 36289:case 36303:case 36311:case 36292:return $v}}function ay(t,e){t.uniform1fv(this.addr,e)}function cy(t,e){t.uniform1iv(this.addr,e)}function ly(t,e){t.uniform2iv(this.addr,e)}function uy(t,e){t.uniform3iv(this.addr,e)}function hy(t,e){t.uniform4iv(this.addr,e)}function fy(t,e){const n=Hr(e,this.size,2);t.uniform2fv(this.addr,n)}function dy(t,e){const n=Hr(e,this.size,3);t.uniform3fv(this.addr,n)}function py(t,e){const n=Hr(e,this.size,4);t.uniform4fv(this.addr,n)}function my(t,e){const n=Hr(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function gy(t,e){const n=Hr(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function vy(t,e){const n=Hr(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function yy(t,e,n){const i=e.length,r=Kf(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTexture2D(e[s]||Zf,r[s])}function xy(t,e,n){const i=e.length,r=Kf(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTextureCube(e[s]||Jf,r[s])}function _y(t){switch(t){case 5126:return ay;case 35664:return fy;case 35665:return dy;case 35666:return py;case 35674:return my;case 35675:return gy;case 35676:return vy;case 5124:case 35670:return cy;case 35667:case 35671:return ly;case 35668:case 35672:return uy;case 35669:case 35673:return hy;case 35678:case 36198:case 36298:case 36306:case 35682:return yy;case 35680:case 36300:case 36308:case 36293:return xy}}function by(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=oy(e.type)}function $f(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=_y(e.type)}$f.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Bt(e,t)};function Qf(t){this.id=t,this.seq=[],this.map={}}Qf.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(t,e[o.id],n)}};const $a=/([\w\d_]+)(\])?(\[|\.)?/g;function uu(t,e){t.seq.push(e),t.map[e.id]=e}function wy(t,e,n){const i=t.name,r=i.length;for($a.lastIndex=0;;){const s=$a.exec(i),o=$a.lastIndex;let a=s[1];const c=s[2]==="]",l=s[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===r){uu(n,l===void 0?new by(a,t,e):new $f(a,t,e));break}else{let u=n.map[a];u===void 0&&(u=new Qf(a),uu(n,u)),n=u}}}function qn(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),s=t.getUniformLocation(e,r.name);wy(r,s,this)}}qn.prototype.setValue=function(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)};qn.prototype.setOptional=function(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)};qn.upload=function(t,e,n,i){for(let r=0,s=e.length;r!==s;++r){const o=e[r],a=n[o.id];a.needsUpdate!==!1&&o.setValue(t,a.value,i)}};qn.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const s=t[i];s.id in e&&n.push(s)}return n};function hu(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let My=0;function Sy(t){const e=t.split(`
`);for(let n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join(`
`)}function ed(t){switch(t){case bt:return["Linear","( value )"];case Ln:return["sRGB","( value )"];case ga:return["RGBE","( value )"];case rl:return["RGBM","( value, 7.0 )"];case sl:return["RGBM","( value, 16.0 )"];case ol:return["RGBD","( value, 256.0 )"];case ma:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Uf:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function fu(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=t.getShaderSource(e);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+r+Sy(s)}function Jr(t,e){const n=ed(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Ty(t,e){const n=ed(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Ey(t,e){let n;switch(e){case Bh:n="Linear";break;case Nh:n="Reinhard";break;case Uh:n="OptimizedCineon";break;case Gh:n="ACESFilmic";break;case zh:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ay(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ns).join(`
`)}function Ly(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function Cy(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const o=t.getActiveAttrib(e,r).name;n[o]=t.getAttribLocation(e,o)}return n}function ns(t){return t!==""}function du(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function pu(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Ry=/^[ \t]*#include +<([\w\d./]+)>/gm;function Cc(t){return t.replace(Ry,Py)}function Py(t,e){const n=De[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return Cc(n)}const Iy=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Dy=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function mu(t){return t.replace(Dy,td).replace(Iy,Oy)}function Oy(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),td(t,e,n,i)}function td(t,e,n,i){let r="";for(let s=parseInt(e);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function gu(t){let e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Fy(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===$c?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===ph?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===hr&&(e="SHADOWMAP_TYPE_VSM"),e}function By(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case zs:case Hs:e="ENVMAP_TYPE_CUBE";break;case Nr:case Vs:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Ny(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case Hs:case Vs:e="ENVMAP_MODE_REFRACTION";break}return e}function Uy(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Br:e="ENVMAP_BLENDING_MULTIPLY";break;case Oh:e="ENVMAP_BLENDING_MIX";break;case Fh:e="ENVMAP_BLENDING_ADD";break}return e}function Gy(t,e,n,i){const r=t.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const c=Fy(n),l=By(n),h=Ny(n),u=Uy(n),f=t.gammaFactor>0?t.gammaFactor:1,d=n.isWebGL2?"":Ay(n),m=Ly(s),b=r.createProgram();let w,v,p=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(w=[m].filter(ns).join(`
`),w.length>0&&(w+=`
`),v=[d,m].filter(ns).join(`
`),v.length>0&&(v+=`
`)):(w=[gu(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ns).join(`
`),v=[d,gu(n),"#define SHADER_NAME "+n.shaderName,m,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==xi?"#define TONE_MAPPING":"",n.toneMapping!==xi?De.tonemapping_pars_fragment:"",n.toneMapping!==xi?Ey("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",De.encodings_pars_fragment,n.map?Jr("mapTexelToLinear",n.mapEncoding):"",n.matcap?Jr("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Jr("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Jr("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Jr("lightMapTexelToLinear",n.lightMapEncoding):"",Ty("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(ns).join(`
`)),o=Cc(o),o=du(o,n),o=pu(o,n),a=Cc(a),a=du(a,n),a=pu(a,n),o=mu(o),a=mu(a),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(p=`#version 300 es
`,w=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+w,v=["#define varying in",n.glslVersion===Ec?"":"out highp vec4 pc_fragColor;",n.glslVersion===Ec?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const E=p+w+o,A=p+v+a,R=hu(r,35633,E),S=hu(r,35632,A);if(r.attachShader(b,R),r.attachShader(b,S),n.index0AttributeName!==void 0?r.bindAttribLocation(b,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(b,0,"position"),r.linkProgram(b),t.debug.checkShaderErrors){const U=r.getProgramInfoLog(b).trim(),g=r.getShaderInfoLog(R).trim(),y=r.getShaderInfoLog(S).trim();let x=!0,M=!0;if(r.getProgramParameter(b,35714)===!1){x=!1;const _=fu(r,R,"vertex"),T=fu(r,S,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(b,35715),"gl.getProgramInfoLog",U,_,T)}else U!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",U):(g===""||y==="")&&(M=!1);M&&(this.diagnostics={runnable:x,programLog:U,vertexShader:{log:g,prefix:w},fragmentShader:{log:y,prefix:v}})}r.deleteShader(R),r.deleteShader(S);let D;this.getUniforms=function(){return D===void 0&&(D=new qn(r,b)),D};let N;return this.getAttributes=function(){return N===void 0&&(N=Cy(r,b)),N},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(b),this.program=void 0},this.name=n.shaderName,this.id=My++,this.cacheKey=e,this.usedTimes=1,this.program=b,this.vertexShader=R,this.fragmentShader=S,this}function zy(t,e,n,i,r,s){const o=[],a=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let f=i.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function b(S){const N=S.skeleton.bones;if(l)return 1024;{const g=Math.floor((h-20)/4),y=Math.min(g,N.length);return y<N.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+N.length+" bones. This GPU supports "+y+"."),0):y}}function w(S){let D;return S?S.isTexture?D=S.encoding:S.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),D=S.texture.encoding):D=bt,D}function v(S,D,N,U,g){const y=U.fog,x=S.isMeshStandardMaterial?U.environment:null,M=e.get(S.envMap||x),_=d[S.type],T=g.isSkinnedMesh?b(g):0;S.precision!==null&&(f=i.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));let L,I;if(_){const H=Zt[_];L=H.vertexShader,I=H.fragmentShader}else L=S.vertexShader,I=S.fragmentShader;const z=t.getRenderTarget();return{isWebGL2:a,shaderID:_,shaderName:S.type,vertexShader:L,fragmentShader:I,defines:S.defines,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,instancing:g.isInstancedMesh===!0,instancingColor:g.isInstancedMesh===!0&&g.instanceColor!==null,supportsVertexTextures:u,outputEncoding:z!==null?w(z.texture):t.outputEncoding,map:!!S.map,mapEncoding:w(S.map),matcap:!!S.matcap,matcapEncoding:w(S.matcap),envMap:!!M,envMapMode:M&&M.mapping,envMapEncoding:w(M),envMapCubeUV:!!M&&(M.mapping===Nr||M.mapping===Vs),lightMap:!!S.lightMap,lightMapEncoding:w(S.lightMap),aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,emissiveMapEncoding:w(S.emissiveMap),bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:S.normalMapType===Hf,tangentSpaceNormalMap:S.normalMapType===Ni,clearcoatMap:!!S.clearcoatMap,clearcoatRoughnessMap:!!S.clearcoatRoughnessMap,clearcoatNormalMap:!!S.clearcoatNormalMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,alphaMap:!!S.alphaMap,gradientMap:!!S.gradientMap,sheen:!!S.sheen,transmissionMap:!!S.transmissionMap,combine:S.combine,vertexTangents:S.normalMap&&S.vertexTangents,vertexColors:S.vertexColors,vertexUvs:!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatMap||!!S.clearcoatRoughnessMap||!!S.clearcoatNormalMap||!!S.displacementMap||!!S.transmissionMap,uvsVertexOnly:!(!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatNormalMap||!!S.transmissionMap)&&!!S.displacementMap,fog:!!y,useFog:S.fog,fogExp2:y&&y.isFogExp2,flatShading:S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:c,skinning:S.skinning&&T>0,maxBones:T,useVertexTexture:l,morphTargets:S.morphTargets,morphNormals:S.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:D.directional.length,numPointLights:D.point.length,numSpotLights:D.spot.length,numRectAreaLights:D.rectArea.length,numHemiLights:D.hemi.length,numDirLightShadows:D.directionalShadowMap.length,numPointLightShadows:D.pointShadowMap.length,numSpotLightShadows:D.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:S.dithering,shadowMapEnabled:t.shadowMap.enabled&&N.length>0,shadowMapType:t.shadowMap.type,toneMapping:S.toneMapped?t.toneMapping:xi,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:S.premultipliedAlpha,alphaTest:S.alphaTest,doubleSided:S.side===Gs,flipSided:S.side===lt,depthPacking:S.depthPacking!==void 0?S.depthPacking:!1,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function p(S){const D=[];if(S.shaderID?D.push(S.shaderID):(D.push(S.fragmentShader),D.push(S.vertexShader)),S.defines!==void 0)for(const N in S.defines)D.push(N),D.push(S.defines[N]);if(S.isRawShaderMaterial===!1){for(let N=0;N<m.length;N++)D.push(S[m[N]]);D.push(t.outputEncoding),D.push(t.gammaFactor)}return D.push(S.customProgramCacheKey),D.join()}function E(S){const D=d[S.type];let N;if(D){const U=Zt[D];N=qf.clone(U.uniforms)}else N=S.uniforms;return N}function A(S,D){let N;for(let U=0,g=o.length;U<g;U++){const y=o[U];if(y.cacheKey===D){N=y,++N.usedTimes;break}}return N===void 0&&(N=new Gy(t,D,S,r),o.push(N)),N}function R(S){if(--S.usedTimes===0){const D=o.indexOf(S);o[D]=o[o.length-1],o.pop(),S.destroy()}}return{getParameters:v,getProgramCacheKey:p,getUniforms:E,acquireProgram:A,releaseProgram:R,programs:o}}function Hy(){let t=new WeakMap;function e(s){let o=t.get(s);return o===void 0&&(o={},t.set(s,o)),o}function n(s){t.delete(s)}function i(s,o,a){t.get(s)[o]=a}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function Vy(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function ky(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function vu(t){const e=[];let n=0;const i=[],r=[],s={id:-1};function o(){n=0,i.length=0,r.length=0}function a(f,d,m,b,w,v){let p=e[n];const E=t.get(m);return p===void 0?(p={id:f.id,object:f,geometry:d,material:m,program:E.program||s,groupOrder:b,renderOrder:f.renderOrder,z:w,group:v},e[n]=p):(p.id=f.id,p.object=f,p.geometry=d,p.material=m,p.program=E.program||s,p.groupOrder=b,p.renderOrder=f.renderOrder,p.z=w,p.group=v),n++,p}function c(f,d,m,b,w,v){const p=a(f,d,m,b,w,v);(m.transparent===!0?r:i).push(p)}function l(f,d,m,b,w,v){const p=a(f,d,m,b,w,v);(m.transparent===!0?r:i).unshift(p)}function h(f,d){i.length>1&&i.sort(f||Vy),r.length>1&&r.sort(d||ky)}function u(){for(let f=n,d=e.length;f<d;f++){const m=e[f];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.program=null,m.group=null}}return{opaque:i,transparent:r,init:o,push:c,unshift:l,finish:u,sort:h}}function Wy(t){let e=new WeakMap;function n(r,s){const o=e.get(r);let a;return o===void 0?(a=new vu(t),e.set(r,new WeakMap),e.get(r).set(s,a)):(a=o.get(s),a===void 0&&(a=new vu(t),o.set(s,a))),a}function i(){e=new WeakMap}return{get:n,dispose:i}}function jy(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new C,color:new oe};break;case"SpotLight":n={position:new C,direction:new C,color:new oe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new C,color:new oe,distance:0,decay:0};break;case"HemisphereLight":n={direction:new C,skyColor:new oe,groundColor:new oe};break;case"RectAreaLight":n={color:new oe,position:new C,halfWidth:new C,halfHeight:new C};break}return t[e.id]=n,n}}}function qy(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Y};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Y};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Y,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let Xy=0;function Yy(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Zy(){const t=new jy,e=qy(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;a<9;a++)n.probe.push(new C);const i=new C,r=new fe,s=new fe;function o(a,c,l){let h=0,u=0,f=0;for(let D=0;D<9;D++)n.probe[D].set(0,0,0);let d=0,m=0,b=0,w=0,v=0,p=0,E=0,A=0;const R=l.matrixWorldInverse;a.sort(Yy);for(let D=0,N=a.length;D<N;D++){const U=a[D],g=U.color,y=U.intensity,x=U.distance,M=U.shadow&&U.shadow.map?U.shadow.map.texture:null;if(U.isAmbientLight)h+=g.r*y,u+=g.g*y,f+=g.b*y;else if(U.isLightProbe)for(let _=0;_<9;_++)n.probe[_].addScaledVector(U.sh.coefficients[_],y);else if(U.isDirectionalLight){const _=t.get(U);if(_.color.copy(U.color).multiplyScalar(U.intensity),_.direction.setFromMatrixPosition(U.matrixWorld),i.setFromMatrixPosition(U.target.matrixWorld),_.direction.sub(i),_.direction.transformDirection(R),U.castShadow){const T=U.shadow,L=e.get(U);L.shadowBias=T.bias,L.shadowNormalBias=T.normalBias,L.shadowRadius=T.radius,L.shadowMapSize=T.mapSize,n.directionalShadow[d]=L,n.directionalShadowMap[d]=M,n.directionalShadowMatrix[d]=U.shadow.matrix,p++}n.directional[d]=_,d++}else if(U.isSpotLight){const _=t.get(U);if(_.position.setFromMatrixPosition(U.matrixWorld),_.position.applyMatrix4(R),_.color.copy(g).multiplyScalar(y),_.distance=x,_.direction.setFromMatrixPosition(U.matrixWorld),i.setFromMatrixPosition(U.target.matrixWorld),_.direction.sub(i),_.direction.transformDirection(R),_.coneCos=Math.cos(U.angle),_.penumbraCos=Math.cos(U.angle*(1-U.penumbra)),_.decay=U.decay,U.castShadow){const T=U.shadow,L=e.get(U);L.shadowBias=T.bias,L.shadowNormalBias=T.normalBias,L.shadowRadius=T.radius,L.shadowMapSize=T.mapSize,n.spotShadow[b]=L,n.spotShadowMap[b]=M,n.spotShadowMatrix[b]=U.shadow.matrix,A++}n.spot[b]=_,b++}else if(U.isRectAreaLight){const _=t.get(U);_.color.copy(g).multiplyScalar(y),_.position.setFromMatrixPosition(U.matrixWorld),_.position.applyMatrix4(R),s.identity(),r.copy(U.matrixWorld),r.premultiply(R),s.extractRotation(r),_.halfWidth.set(U.width*.5,0,0),_.halfHeight.set(0,U.height*.5,0),_.halfWidth.applyMatrix4(s),_.halfHeight.applyMatrix4(s),n.rectArea[w]=_,w++}else if(U.isPointLight){const _=t.get(U);if(_.position.setFromMatrixPosition(U.matrixWorld),_.position.applyMatrix4(R),_.color.copy(U.color).multiplyScalar(U.intensity),_.distance=U.distance,_.decay=U.decay,U.castShadow){const T=U.shadow,L=e.get(U);L.shadowBias=T.bias,L.shadowNormalBias=T.normalBias,L.shadowRadius=T.radius,L.shadowMapSize=T.mapSize,L.shadowCameraNear=T.camera.near,L.shadowCameraFar=T.camera.far,n.pointShadow[m]=L,n.pointShadowMap[m]=M,n.pointShadowMatrix[m]=U.shadow.matrix,E++}n.point[m]=_,m++}else if(U.isHemisphereLight){const _=t.get(U);_.direction.setFromMatrixPosition(U.matrixWorld),_.direction.transformDirection(R),_.direction.normalize(),_.skyColor.copy(U.color).multiplyScalar(y),_.groundColor.copy(U.groundColor).multiplyScalar(y),n.hemi[v]=_,v++}}w>0&&(n.rectAreaLTC1=he.LTC_1,n.rectAreaLTC2=he.LTC_2),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=f;const S=n.hash;(S.directionalLength!==d||S.pointLength!==m||S.spotLength!==b||S.rectAreaLength!==w||S.hemiLength!==v||S.numDirectionalShadows!==p||S.numPointShadows!==E||S.numSpotShadows!==A)&&(n.directional.length=d,n.spot.length=b,n.rectArea.length=w,n.point.length=m,n.hemi.length=v,n.directionalShadow.length=p,n.directionalShadowMap.length=p,n.pointShadow.length=E,n.pointShadowMap.length=E,n.spotShadow.length=A,n.spotShadowMap.length=A,n.directionalShadowMatrix.length=p,n.pointShadowMatrix.length=E,n.spotShadowMatrix.length=A,S.directionalLength=d,S.pointLength=m,S.spotLength=b,S.rectAreaLength=w,S.hemiLength=v,S.numDirectionalShadows=p,S.numPointShadows=E,S.numSpotShadows=A,n.version=Xy++)}return{setup:o,state:n}}function yu(){const t=new Zy,e=[],n=[];function i(){e.length=0,n.length=0}function r(c){e.push(c)}function s(c){n.push(c)}function o(c){t.setup(e,n,c)}return{init:i,state:{lightsArray:e,shadowsArray:n,lights:t},setupLights:o,pushLight:r,pushShadow:s}}function Jy(){let t=new WeakMap;function e(i,r){let s;return t.has(i)===!1?(s=new yu,t.set(i,new WeakMap),t.get(i).set(r,s)):t.get(i).has(r)===!1?(s=new yu,t.get(i).set(r,s)):s=t.get(i).get(r),s}function n(){t=new WeakMap}return{get:e,dispose:n}}function $n(t){Se.call(this),this.type="MeshDepthMaterial",this.depthPacking=Gf,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}$n.prototype=Object.create(Se.prototype);$n.prototype.constructor=$n;$n.prototype.isMeshDepthMaterial=!0;$n.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this};function Qn(t){Se.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new C,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}Qn.prototype=Object.create(Se.prototype);Qn.prototype.constructor=Qn;Qn.prototype.isMeshDistanceMaterial=!0;Qn.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};var Ky=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,$y=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function nd(t,e,n){let i=new js;const r=new Y,s=new Y,o=new Be,a=[],c=[],l={},h={0:lt,1:Bi,2:Gs},u=new wt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Y},radius:{value:4}},vertexShader:$y,fragmentShader:Ky}),f=u.clone();f.defines.HORIZONAL_PASS=1;const d=new xe;d.setAttribute("position",new we(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new je(d,u),b=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=$c,this.render=function(R,S,D){if(b.enabled===!1||b.autoUpdate===!1&&b.needsUpdate===!1||R.length===0)return;const N=t.getRenderTarget(),U=t.getActiveCubeFace(),g=t.getActiveMipmapLevel(),y=t.state;y.setBlending(Rn),y.buffers.color.setClear(1,1,1,1),y.buffers.depth.setTest(!0),y.setScissorTest(!1);for(let x=0,M=R.length;x<M;x++){const _=R[x],T=_.shadow;if(T.autoUpdate===!1&&T.needsUpdate===!1)continue;if(T===void 0){console.warn("THREE.WebGLShadowMap:",_,"has no shadow.");continue}r.copy(T.mapSize);const L=T.getFrameExtents();if(r.multiply(L),s.copy(T.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(s.x=Math.floor(n/L.x),r.x=s.x*L.x,T.mapSize.x=s.x),r.y>n&&(s.y=Math.floor(n/L.y),r.y=s.y*L.y,T.mapSize.y=s.y)),T.map===null&&!T.isPointLightShadow&&this.type===hr){const z={minFilter:rt,magFilter:rt,format:It};T.map=new Dt(r.x,r.y,z),T.map.texture.name=_.name+".shadowMap",T.mapPass=new Dt(r.x,r.y,z),T.camera.updateProjectionMatrix()}if(T.map===null){const z={minFilter:ut,magFilter:ut,format:It};T.map=new Dt(r.x,r.y,z),T.map.texture.name=_.name+".shadowMap",T.camera.updateProjectionMatrix()}t.setRenderTarget(T.map),t.clear();const I=T.getViewportCount();for(let z=0;z<I;z++){const V=T.getViewport(z);o.set(s.x*V.x,s.y*V.y,s.x*V.z,s.y*V.w),y.viewport(o),T.updateMatrices(_,z),i=T.getFrustum(),A(S,D,T.camera,_,this.type)}!T.isPointLightShadow&&this.type===hr&&w(T,D),T.needsUpdate=!1}b.needsUpdate=!1,t.setRenderTarget(N,U,g)};function w(R,S){const D=e.update(m);u.uniforms.shadow_pass.value=R.map.texture,u.uniforms.resolution.value=R.mapSize,u.uniforms.radius.value=R.radius,t.setRenderTarget(R.mapPass),t.clear(),t.renderBufferDirect(S,null,D,u,m,null),f.uniforms.shadow_pass.value=R.mapPass.texture,f.uniforms.resolution.value=R.mapSize,f.uniforms.radius.value=R.radius,t.setRenderTarget(R.map),t.clear(),t.renderBufferDirect(S,null,D,f,m,null)}function v(R,S,D){const N=R<<0|S<<1|D<<2;let U=a[N];return U===void 0&&(U=new $n({depthPacking:zf,morphTargets:R,skinning:S}),a[N]=U),U}function p(R,S,D){const N=R<<0|S<<1|D<<2;let U=c[N];return U===void 0&&(U=new Qn({morphTargets:R,skinning:S}),c[N]=U),U}function E(R,S,D,N,U,g,y){let x=null,M=v,_=R.customDepthMaterial;if(N.isPointLight===!0&&(M=p,_=R.customDistanceMaterial),_===void 0){let T=!1;D.morphTargets===!0&&(T=S.morphAttributes&&S.morphAttributes.position&&S.morphAttributes.position.length>0);let L=!1;R.isSkinnedMesh===!0&&(D.skinning===!0?L=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",R));const I=R.isInstancedMesh===!0;x=M(T,L,I)}else x=_;if(t.localClippingEnabled&&D.clipShadows===!0&&D.clippingPlanes.length!==0){const T=x.uuid,L=D.uuid;let I=l[T];I===void 0&&(I={},l[T]=I);let z=I[L];z===void 0&&(z=x.clone(),I[L]=z),x=z}return x.visible=D.visible,x.wireframe=D.wireframe,y===hr?x.side=D.shadowSide!==null?D.shadowSide:D.side:x.side=D.shadowSide!==null?D.shadowSide:h[D.side],x.clipShadows=D.clipShadows,x.clippingPlanes=D.clippingPlanes,x.clipIntersection=D.clipIntersection,x.wireframeLinewidth=D.wireframeLinewidth,x.linewidth=D.linewidth,N.isPointLight===!0&&x.isMeshDistanceMaterial===!0&&(x.referencePosition.setFromMatrixPosition(N.matrixWorld),x.nearDistance=U,x.farDistance=g),x}function A(R,S,D,N,U){if(R.visible===!1)return;if(R.layers.test(S.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&U===hr)&&(!R.frustumCulled||i.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(D.matrixWorldInverse,R.matrixWorld);const x=e.update(R),M=R.material;if(Array.isArray(M)){const _=x.groups;for(let T=0,L=_.length;T<L;T++){const I=_[T],z=M[I.materialIndex];if(z&&z.visible){const V=E(R,x,z,N,D.near,D.far,U);t.renderBufferDirect(D,null,x,V,R,I)}}}else if(M.visible){const _=E(R,x,M,N,D.near,D.far,U);t.renderBufferDirect(D,null,x,_,R,null)}}const y=R.children;for(let x=0,M=y.length;x<M;x++)A(y[x],S,D,N,U)}}function Qy(t,e,n){const i=n.isWebGL2;function r(){let G=!1;const ee=new Be;let ae=null;const ve=new Be(0,0,0,0);return{setMask:function(re){ae!==re&&!G&&(t.colorMask(re,re,re,re),ae=re)},setLocked:function(re){G=re},setClear:function(re,B,ne,pe,se){se===!0&&(re*=pe,B*=pe,ne*=pe),ee.set(re,B,ne,pe),ve.equals(ee)===!1&&(t.clearColor(re,B,ne,pe),ve.copy(ee))},reset:function(){G=!1,ae=null,ve.set(-1,0,0,0)}}}function s(){let G=!1,ee=null,ae=null,ve=null;return{setTest:function(re){re?H(2929):k(2929)},setMask:function(re){ee!==re&&!G&&(t.depthMask(re),ee=re)},setFunc:function(re){if(ae!==re){if(re)switch(re){case Ah:t.depthFunc(512);break;case Lh:t.depthFunc(519);break;case Ch:t.depthFunc(513);break;case Vo:t.depthFunc(515);break;case Rh:t.depthFunc(514);break;case Ph:t.depthFunc(518);break;case Ih:t.depthFunc(516);break;case Dh:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);ae=re}},setLocked:function(re){G=re},setClear:function(re){ve!==re&&(t.clearDepth(re),ve=re)},reset:function(){G=!1,ee=null,ae=null,ve=null}}}function o(){let G=!1,ee=null,ae=null,ve=null,re=null,B=null,ne=null,pe=null,se=null;return{setTest:function(_e){G||(_e?H(2960):k(2960))},setMask:function(_e){ee!==_e&&!G&&(t.stencilMask(_e),ee=_e)},setFunc:function(_e,He,et){(ae!==_e||ve!==He||re!==et)&&(t.stencilFunc(_e,He,et),ae=_e,ve=He,re=et)},setOp:function(_e,He,et){(B!==_e||ne!==He||pe!==et)&&(t.stencilOp(_e,He,et),B=_e,ne=He,pe=et)},setLocked:function(_e){G=_e},setClear:function(_e){se!==_e&&(t.clearStencil(_e),se=_e)},reset:function(){G=!1,ee=null,ae=null,ve=null,re=null,B=null,ne=null,pe=null,se=null}}}const a=new r,c=new s,l=new o;let h={},u=null,f=null,d=null,m=null,b=null,w=null,v=null,p=null,E=null,A=!1,R=null,S=null,D=null,N=null,U=null;const g=t.getParameter(35661);let y=!1,x=0;const M=t.getParameter(7938);M.indexOf("WebGL")!==-1?(x=parseFloat(/^WebGL\ ([0-9])/.exec(M)[1]),y=x>=1):M.indexOf("OpenGL ES")!==-1&&(x=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(M)[1]),y=x>=2);let _=null,T={};const L=new Be,I=new Be;function z(G,ee,ae){const ve=new Uint8Array(4),re=t.createTexture();t.bindTexture(G,re),t.texParameteri(G,10241,9728),t.texParameteri(G,10240,9728);for(let B=0;B<ae;B++)t.texImage2D(ee+B,0,6408,1,1,0,6408,5121,ve);return re}const V={};V[3553]=z(3553,3553,1),V[34067]=z(34067,34069,6),a.setClear(0,0,0,1),c.setClear(1),l.setClear(0),H(2929),c.setFunc(Vo),de(!1),Te(uc),H(2884),j(Rn);function H(G){h[G]!==!0&&(t.enable(G),h[G]=!0)}function k(G){h[G]!==!1&&(t.disable(G),h[G]=!1)}function Z(G){return u!==G?(t.useProgram(G),u=G,!0):!1}const ce={[mi]:32774,[gh]:32778,[vh]:32779};if(i)ce[pc]=32775,ce[mc]=32776;else{const G=e.get("EXT_blend_minmax");G!==null&&(ce[pc]=G.MIN_EXT,ce[mc]=G.MAX_EXT)}const Ee={[yh]:0,[xh]:1,[_h]:768,[el]:770,[Eh]:776,[Sh]:774,[wh]:772,[bh]:769,[tl]:771,[Th]:775,[Mh]:773};function j(G,ee,ae,ve,re,B,ne,pe){if(G===Rn){f&&(k(3042),f=!1);return}if(f||(H(3042),f=!0),G!==mh){if(G!==d||pe!==A){if((m!==mi||v!==mi)&&(t.blendEquation(32774),m=mi,v=mi),pe)switch(G){case gr:t.blendFuncSeparate(1,771,1,771);break;case hc:t.blendFunc(1,1);break;case fc:t.blendFuncSeparate(0,0,769,771);break;case dc:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case gr:t.blendFuncSeparate(770,771,1,771);break;case hc:t.blendFunc(770,1);break;case fc:t.blendFunc(0,769);break;case dc:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}b=null,w=null,p=null,E=null,d=G,A=pe}return}re=re||ee,B=B||ae,ne=ne||ve,(ee!==m||re!==v)&&(t.blendEquationSeparate(ce[ee],ce[re]),m=ee,v=re),(ae!==b||ve!==w||B!==p||ne!==E)&&(t.blendFuncSeparate(Ee[ae],Ee[ve],Ee[B],Ee[ne]),b=ae,w=ve,p=B,E=ne),d=G,A=null}function Pe(G,ee){G.side===Gs?k(2884):H(2884);let ae=G.side===lt;ee&&(ae=!ae),de(ae),G.blending===gr&&G.transparent===!1?j(Rn):j(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.premultipliedAlpha),c.setFunc(G.depthFunc),c.setTest(G.depthTest),c.setMask(G.depthWrite),a.setMask(G.colorWrite);const ve=G.stencilWrite;l.setTest(ve),ve&&(l.setMask(G.stencilWriteMask),l.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),l.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),Ie(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits)}function de(G){R!==G&&(G?t.frontFace(2304):t.frontFace(2305),R=G)}function Te(G){G!==fh?(H(2884),G!==S&&(G===uc?t.cullFace(1029):G===dh?t.cullFace(1028):t.cullFace(1032))):k(2884),S=G}function Me(G){G!==D&&(y&&t.lineWidth(G),D=G)}function Ie(G,ee,ae){G?(H(32823),(N!==ee||U!==ae)&&(t.polygonOffset(ee,ae),N=ee,U=ae)):k(32823)}function Ae(G){G?H(3089):k(3089)}function J(G){G===void 0&&(G=33984+g-1),_!==G&&(t.activeTexture(G),_=G)}function Q(G,ee){_===null&&J();let ae=T[_];ae===void 0&&(ae={type:void 0,texture:void 0},T[_]=ae),(ae.type!==G||ae.texture!==ee)&&(t.bindTexture(G,ee||V[G]),ae.type=G,ae.texture=ee)}function te(){const G=T[_];G!==void 0&&G.type!==void 0&&(t.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function ge(){try{t.compressedTexImage2D.apply(t,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function le(){try{t.texImage2D.apply(t,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function P(){try{t.texImage3D.apply(t,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function F(G){L.equals(G)===!1&&(t.scissor(G.x,G.y,G.z,G.w),L.copy(G))}function $(G){I.equals(G)===!1&&(t.viewport(G.x,G.y,G.z,G.w),I.copy(G))}function K(){h={},_=null,T={},u=null,d=null,R=null,S=null,a.reset(),c.reset(),l.reset()}return{buffers:{color:a,depth:c,stencil:l},enable:H,disable:k,useProgram:Z,setBlending:j,setMaterial:Pe,setFlipSided:de,setCullFace:Te,setLineWidth:Me,setPolygonOffset:Ie,setScissorTest:Ae,activeTexture:J,bindTexture:Q,unbindTexture:te,compressedTexImage2D:ge,texImage2D:le,texImage3D:P,scissor:F,viewport:$,reset:K}}function e0(t,e,n,i,r,s,o){const a=r.isWebGL2,c=r.maxTextures,l=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,f=new WeakMap;let d,m=!1;try{m=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(P,F){return m?new OffscreenCanvas(P,F):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function w(P,F,$,K){let G=1;if((P.width>K||P.height>K)&&(G=K/Math.max(P.width,P.height)),G<1||F===!0)if(typeof HTMLImageElement!="undefined"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&P instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&P instanceof ImageBitmap){const ee=F?be.floorPowerOfTwo:Math.floor,ae=ee(G*P.width),ve=ee(G*P.height);d===void 0&&(d=b(ae,ve));const re=$?b(ae,ve):d;return re.width=ae,re.height=ve,re.getContext("2d").drawImage(P,0,0,ae,ve),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+P.width+"x"+P.height+") to ("+ae+"x"+ve+")."),re}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+P.width+"x"+P.height+")."),P;return P}function v(P){return be.isPowerOfTwo(P.width)&&be.isPowerOfTwo(P.height)}function p(P){return a?!1:P.wrapS!==pt||P.wrapT!==pt||P.minFilter!==ut&&P.minFilter!==rt}function E(P,F){return P.generateMipmaps&&F&&P.minFilter!==ut&&P.minFilter!==rt}function A(P,F,$,K){t.generateMipmap(P);const G=i.get(F);G.__maxMipLevel=Math.log(Math.max($,K))*Math.LOG2E}function R(P,F,$){if(a===!1)return F;if(P!==null){if(t[P]!==void 0)return t[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let K=F;return F===6403&&($===5126&&(K=33326),$===5131&&(K=33325),$===5121&&(K=33321)),F===6407&&($===5126&&(K=34837),$===5131&&(K=34843),$===5121&&(K=32849)),F===6408&&($===5126&&(K=34836),$===5131&&(K=34842),$===5121&&(K=32856)),(K===33325||K===33326||K===34842||K===34836)&&e.get("EXT_color_buffer_float"),K}function S(P){return P===ut||P===Wo||P===jo?9728:9729}function D(P){const F=P.target;F.removeEventListener("dispose",D),U(F),F.isVideoTexture&&f.delete(F),o.memory.textures--}function N(P){const F=P.target;F.removeEventListener("dispose",N),g(F),o.memory.textures--}function U(P){const F=i.get(P);F.__webglInit!==void 0&&(t.deleteTexture(F.__webglTexture),i.remove(P))}function g(P){const F=i.get(P),$=i.get(P.texture);if(!!P){if($.__webglTexture!==void 0&&t.deleteTexture($.__webglTexture),P.depthTexture&&P.depthTexture.dispose(),P.isWebGLCubeRenderTarget)for(let K=0;K<6;K++)t.deleteFramebuffer(F.__webglFramebuffer[K]),F.__webglDepthbuffer&&t.deleteRenderbuffer(F.__webglDepthbuffer[K]);else t.deleteFramebuffer(F.__webglFramebuffer),F.__webglDepthbuffer&&t.deleteRenderbuffer(F.__webglDepthbuffer),F.__webglMultisampledFramebuffer&&t.deleteFramebuffer(F.__webglMultisampledFramebuffer),F.__webglColorRenderbuffer&&t.deleteRenderbuffer(F.__webglColorRenderbuffer),F.__webglDepthRenderbuffer&&t.deleteRenderbuffer(F.__webglDepthRenderbuffer);i.remove(P.texture),i.remove(P)}}let y=0;function x(){y=0}function M(){const P=y;return P>=c&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+c),y+=1,P}function _(P,F){const $=i.get(P);if(P.isVideoTexture&&J(P),P.version>0&&$.__version!==P.version){const K=P.image;if(K===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(K.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ce($,P,F);return}}n.activeTexture(33984+F),n.bindTexture(3553,$.__webglTexture)}function T(P,F){const $=i.get(P);if(P.version>0&&$.__version!==P.version){ce($,P,F);return}n.activeTexture(33984+F),n.bindTexture(35866,$.__webglTexture)}function L(P,F){const $=i.get(P);if(P.version>0&&$.__version!==P.version){ce($,P,F);return}n.activeTexture(33984+F),n.bindTexture(32879,$.__webglTexture)}function I(P,F){if(P.image.length!==6)return;const $=i.get(P);if(P.version>0&&$.__version!==P.version){Z($,P),n.activeTexture(33984+F),n.bindTexture(34067,$.__webglTexture),t.pixelStorei(37440,P.flipY);const K=P&&(P.isCompressedTexture||P.image[0].isCompressedTexture),G=P.image[0]&&P.image[0].isDataTexture,ee=[];for(let se=0;se<6;se++)!K&&!G?ee[se]=w(P.image[se],!1,!0,l):ee[se]=G?P.image[se].image:P.image[se];const ae=ee[0],ve=v(ae)||a,re=s.convert(P.format),B=s.convert(P.type),ne=R(P.internalFormat,re,B);k(34067,P,ve);let pe;if(K){for(let se=0;se<6;se++){pe=ee[se].mipmaps;for(let _e=0;_e<pe.length;_e++){const He=pe[_e];P.format!==It&&P.format!==jn?re!==null?n.compressedTexImage2D(34069+se,_e,ne,He.width,He.height,0,He.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+se,_e,ne,He.width,He.height,0,re,B,He.data)}}$.__maxMipLevel=pe.length-1}else{pe=P.mipmaps;for(let se=0;se<6;se++)if(G){n.texImage2D(34069+se,0,ne,ee[se].width,ee[se].height,0,re,B,ee[se].data);for(let _e=0;_e<pe.length;_e++){const et=pe[_e].image[se].image;n.texImage2D(34069+se,_e+1,ne,et.width,et.height,0,re,B,et.data)}}else{n.texImage2D(34069+se,0,ne,re,B,ee[se]);for(let _e=0;_e<pe.length;_e++){const He=pe[_e];n.texImage2D(34069+se,_e+1,ne,re,B,He.image[se])}}$.__maxMipLevel=pe.length}E(P,ve)&&A(34067,P,ae.width,ae.height),$.__version=P.version,P.onUpdate&&P.onUpdate(P)}else n.activeTexture(33984+F),n.bindTexture(34067,$.__webglTexture)}function z(P,F){n.activeTexture(33984+F),n.bindTexture(34067,i.get(P).__webglTexture)}const V={[bi]:10497,[pt]:33071,[hs]:33648},H={[ut]:9728,[Wo]:9984,[jo]:9986,[rt]:9729,[nl]:9985,[Ur]:9987};function k(P,F,$){$?(t.texParameteri(P,10242,V[F.wrapS]),t.texParameteri(P,10243,V[F.wrapT]),(P===32879||P===35866)&&t.texParameteri(P,32882,V[F.wrapR]),t.texParameteri(P,10240,H[F.magFilter]),t.texParameteri(P,10241,H[F.minFilter])):(t.texParameteri(P,10242,33071),t.texParameteri(P,10243,33071),(P===32879||P===35866)&&t.texParameteri(P,32882,33071),(F.wrapS!==pt||F.wrapT!==pt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(P,10240,S(F.magFilter)),t.texParameteri(P,10241,S(F.minFilter)),F.minFilter!==ut&&F.minFilter!==rt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const K=e.get("EXT_texture_filter_anisotropic");if(K){if(F.type===An&&e.get("OES_texture_float_linear")===null||F.type===ds&&(a||e.get("OES_texture_half_float_linear"))===null)return;(F.anisotropy>1||i.get(F).__currentAnisotropy)&&(t.texParameterf(P,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(F.anisotropy,r.getMaxAnisotropy())),i.get(F).__currentAnisotropy=F.anisotropy)}}function Z(P,F){P.__webglInit===void 0&&(P.__webglInit=!0,F.addEventListener("dispose",D),P.__webglTexture=t.createTexture(),o.memory.textures++)}function ce(P,F,$){let K=3553;F.isDataTexture2DArray&&(K=35866),F.isDataTexture3D&&(K=32879),Z(P,F),n.activeTexture(33984+$),n.bindTexture(K,P.__webglTexture),t.pixelStorei(37440,F.flipY),t.pixelStorei(37441,F.premultiplyAlpha),t.pixelStorei(3317,F.unpackAlignment);const G=p(F)&&v(F.image)===!1,ee=w(F.image,G,!1,h),ae=v(ee)||a,ve=s.convert(F.format);let re=s.convert(F.type),B=R(F.internalFormat,ve,re);k(K,F,ae);let ne;const pe=F.mipmaps;if(F.isDepthTexture)B=6402,a?F.type===An?B=36012:F.type===is?B=33190:F.type===vr?B=35056:B=33189:F.type===An&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),F.format===_i&&B===6402&&F.type!==fs&&F.type!==is&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),F.type=fs,re=s.convert(F.type)),F.format===wr&&B===6402&&(B=34041,F.type!==vr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),F.type=vr,re=s.convert(F.type))),n.texImage2D(3553,0,B,ee.width,ee.height,0,ve,re,null);else if(F.isDataTexture)if(pe.length>0&&ae){for(let se=0,_e=pe.length;se<_e;se++)ne=pe[se],n.texImage2D(3553,se,B,ne.width,ne.height,0,ve,re,ne.data);F.generateMipmaps=!1,P.__maxMipLevel=pe.length-1}else n.texImage2D(3553,0,B,ee.width,ee.height,0,ve,re,ee.data),P.__maxMipLevel=0;else if(F.isCompressedTexture){for(let se=0,_e=pe.length;se<_e;se++)ne=pe[se],F.format!==It&&F.format!==jn?ve!==null?n.compressedTexImage2D(3553,se,B,ne.width,ne.height,0,ne.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,se,B,ne.width,ne.height,0,ve,re,ne.data);P.__maxMipLevel=pe.length-1}else if(F.isDataTexture2DArray)n.texImage3D(35866,0,B,ee.width,ee.height,ee.depth,0,ve,re,ee.data),P.__maxMipLevel=0;else if(F.isDataTexture3D)n.texImage3D(32879,0,B,ee.width,ee.height,ee.depth,0,ve,re,ee.data),P.__maxMipLevel=0;else if(pe.length>0&&ae){for(let se=0,_e=pe.length;se<_e;se++)ne=pe[se],n.texImage2D(3553,se,B,ve,re,ne);F.generateMipmaps=!1,P.__maxMipLevel=pe.length-1}else n.texImage2D(3553,0,B,ve,re,ee),P.__maxMipLevel=0;E(F,ae)&&A(K,F,ee.width,ee.height),P.__version=F.version,F.onUpdate&&F.onUpdate(F)}function Ee(P,F,$,K){const G=s.convert(F.texture.format),ee=s.convert(F.texture.type),ae=R(F.texture.internalFormat,G,ee);n.texImage2D(K,0,ae,F.width,F.height,0,G,ee,null),t.bindFramebuffer(36160,P),t.framebufferTexture2D(36160,$,K,i.get(F.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function j(P,F,$){if(t.bindRenderbuffer(36161,P),F.depthBuffer&&!F.stencilBuffer){let K=33189;if($){const G=F.depthTexture;G&&G.isDepthTexture&&(G.type===An?K=36012:G.type===is&&(K=33190));const ee=Ae(F);t.renderbufferStorageMultisample(36161,ee,K,F.width,F.height)}else t.renderbufferStorage(36161,K,F.width,F.height);t.framebufferRenderbuffer(36160,36096,36161,P)}else if(F.depthBuffer&&F.stencilBuffer){if($){const K=Ae(F);t.renderbufferStorageMultisample(36161,K,35056,F.width,F.height)}else t.renderbufferStorage(36161,34041,F.width,F.height);t.framebufferRenderbuffer(36160,33306,36161,P)}else{const K=s.convert(F.texture.format),G=s.convert(F.texture.type),ee=R(F.texture.internalFormat,K,G);if($){const ae=Ae(F);t.renderbufferStorageMultisample(36161,ae,ee,F.width,F.height)}else t.renderbufferStorage(36161,ee,F.width,F.height)}t.bindRenderbuffer(36161,null)}function Pe(P,F){if(F&&F.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,P),!(F.depthTexture&&F.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(F.depthTexture).__webglTexture||F.depthTexture.image.width!==F.width||F.depthTexture.image.height!==F.height)&&(F.depthTexture.image.width=F.width,F.depthTexture.image.height=F.height,F.depthTexture.needsUpdate=!0),_(F.depthTexture,0);const K=i.get(F.depthTexture).__webglTexture;if(F.depthTexture.format===_i)t.framebufferTexture2D(36160,36096,3553,K,0);else if(F.depthTexture.format===wr)t.framebufferTexture2D(36160,33306,3553,K,0);else throw new Error("Unknown depthTexture format")}function de(P){const F=i.get(P),$=P.isWebGLCubeRenderTarget===!0;if(P.depthTexture){if($)throw new Error("target.depthTexture not supported in Cube render targets");Pe(F.__webglFramebuffer,P)}else if($){F.__webglDepthbuffer=[];for(let K=0;K<6;K++)t.bindFramebuffer(36160,F.__webglFramebuffer[K]),F.__webglDepthbuffer[K]=t.createRenderbuffer(),j(F.__webglDepthbuffer[K],P,!1)}else t.bindFramebuffer(36160,F.__webglFramebuffer),F.__webglDepthbuffer=t.createRenderbuffer(),j(F.__webglDepthbuffer,P,!1);t.bindFramebuffer(36160,null)}function Te(P){const F=i.get(P),$=i.get(P.texture);P.addEventListener("dispose",N),$.__webglTexture=t.createTexture(),o.memory.textures++;const K=P.isWebGLCubeRenderTarget===!0,G=P.isWebGLMultisampleRenderTarget===!0,ee=v(P)||a;if(a&&P.texture.format===jn&&(P.texture.type===An||P.texture.type===ds)&&(P.texture.format=It,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),K){F.__webglFramebuffer=[];for(let ae=0;ae<6;ae++)F.__webglFramebuffer[ae]=t.createFramebuffer()}else if(F.__webglFramebuffer=t.createFramebuffer(),G)if(a){F.__webglMultisampledFramebuffer=t.createFramebuffer(),F.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,F.__webglColorRenderbuffer);const ae=s.convert(P.texture.format),ve=s.convert(P.texture.type),re=R(P.texture.internalFormat,ae,ve),B=Ae(P);t.renderbufferStorageMultisample(36161,B,re,P.width,P.height),t.bindFramebuffer(36160,F.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,F.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),P.depthBuffer&&(F.__webglDepthRenderbuffer=t.createRenderbuffer(),j(F.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(K){n.bindTexture(34067,$.__webglTexture),k(34067,P.texture,ee);for(let ae=0;ae<6;ae++)Ee(F.__webglFramebuffer[ae],P,36064,34069+ae);E(P.texture,ee)&&A(34067,P.texture,P.width,P.height),n.bindTexture(34067,null)}else n.bindTexture(3553,$.__webglTexture),k(3553,P.texture,ee),Ee(F.__webglFramebuffer,P,36064,3553),E(P.texture,ee)&&A(3553,P.texture,P.width,P.height),n.bindTexture(3553,null);P.depthBuffer&&de(P)}function Me(P){const F=P.texture,$=v(P)||a;if(E(F,$)){const K=P.isWebGLCubeRenderTarget?34067:3553,G=i.get(F).__webglTexture;n.bindTexture(K,G),A(K,F,P.width,P.height),n.bindTexture(K,null)}}function Ie(P){if(P.isWebGLMultisampleRenderTarget)if(a){const F=i.get(P);t.bindFramebuffer(36008,F.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,F.__webglFramebuffer);const $=P.width,K=P.height;let G=16384;P.depthBuffer&&(G|=256),P.stencilBuffer&&(G|=1024),t.blitFramebuffer(0,0,$,K,0,0,$,K,G,9728),t.bindFramebuffer(36160,F.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Ae(P){return a&&P.isWebGLMultisampleRenderTarget?Math.min(u,P.samples):0}function J(P){const F=o.render.frame;f.get(P)!==F&&(f.set(P,F),P.update())}let Q=!1,te=!1;function ge(P,F){P&&P.isWebGLRenderTarget&&(Q===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Q=!0),P=P.texture),_(P,F)}function le(P,F){P&&P.isWebGLCubeRenderTarget&&(te===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),te=!0),P=P.texture),P&&P.isCubeTexture||Array.isArray(P.image)&&P.image.length===6?I(P,F):z(P,F)}this.allocateTextureUnit=M,this.resetTextureUnits=x,this.setTexture2D=_,this.setTexture2DArray=T,this.setTexture3D=L,this.setTextureCube=I,this.setTextureCubeDynamic=z,this.setupRenderTarget=Te,this.updateRenderTargetMipmap=Me,this.updateMultisampleRenderTarget=Ie,this.safeSetTexture2D=ge,this.safeSetTextureCube=le}function id(t,e,n){const i=n.isWebGL2;function r(s){let o;if(s===Gr)return 5121;if(s===Wh)return 32819;if(s===jh)return 32820;if(s===qh)return 33635;if(s===Hh)return 5120;if(s===Vh)return 5122;if(s===fs)return 5123;if(s===kh)return 5124;if(s===is)return 5125;if(s===An)return 5126;if(s===ds)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===Xh)return 6406;if(s===jn)return 6407;if(s===It)return 6408;if(s===Yh)return 6409;if(s===Zh)return 6410;if(s===_i)return 6402;if(s===wr)return 34041;if(s===Kh)return 6403;if(s===$h)return 36244;if(s===Qh)return 33319;if(s===ef)return 33320;if(s===tf)return 36248;if(s===nf)return 36249;if(s===gc||s===vc||s===yc||s===xc)if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===gc)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===vc)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===yc)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===xc)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===_c||s===bc||s===wc||s===Mc)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===_c)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===bc)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===wc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Mc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===rf)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===Sc||s===Tc)&&(o=e.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===Sc)return o.COMPRESSED_RGB8_ETC2;if(s===Tc)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===sf||s===of||s===af||s===cf||s===lf||s===uf||s===hf||s===ff||s===df||s===pf||s===mf||s===gf||s===vf||s===yf||s===_f||s===bf||s===wf||s===Mf||s===Sf||s===Tf||s===Ef||s===Af||s===Lf||s===Cf||s===Rf||s===Pf||s===If||s===Df)return o=e.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===xf)return o=e.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===vr)return i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function qo(t){Qe.call(this),this.cameras=t||[]}qo.prototype=Object.assign(Object.create(Qe.prototype),{constructor:qo,isArrayCamera:!0});function $t(){me.call(this),this.type="Group"}$t.prototype=Object.assign(Object.create(me.prototype),{constructor:$t,isGroup:!0});function os(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(os.prototype,{constructor:os,getHandSpace:function(){if(this._hand===null&&(this._hand=new $t,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let t=0;t<=window.XRHand.LITTLE_PHALANX_TIP;t++){const e=new $t;e.matrixAutoUpdate=!1,e.visible=!1,this._hand.joints.push(e),this._hand.add(e)}return this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new $t,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new $t,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,c=this._hand;if(t)if(c&&t.hand){s=!0;for(let l=0;l<=window.XRHand.LITTLE_PHALANX_TIP;l++)if(t.hand[l]){const h=e.getJointPose(t.hand[l],n),u=c.joints[l];h!==null&&(u.matrix.fromArray(h.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.jointRadius=h.radius),u.visible=h!==null;const f=c.joints[window.XRHand.INDEX_PHALANX_TIP],d=c.joints[window.XRHand.THUMB_PHALANX_TIP],m=f.position.distanceTo(d.position),b=.02,w=.005;c.inputState.pinching&&m>b+w?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&m<=b-w&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}}else o!==null&&(i=e.getPose(t.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),a!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return o!==null&&(o.visible=i!==null),a!==null&&(a.visible=r!==null),c!==null&&(c.visible=s!==null),this}});function rd(t,e){const n=this;let i=null,r=1,s=null,o="local-floor",a=null;const c=[],l=new Map,h=new Qe;h.layers.enable(1),h.viewport=new Be;const u=new Qe;u.layers.enable(2),u.viewport=new Be;const f=[h,u],d=new qo;d.layers.enable(1),d.layers.enable(2);let m=null,b=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(y){let x=c[y];return x===void 0&&(x=new os,c[y]=x),x.getTargetRaySpace()},this.getControllerGrip=function(y){let x=c[y];return x===void 0&&(x=new os,c[y]=x),x.getGripSpace()},this.getHand=function(y){let x=c[y];return x===void 0&&(x=new os,c[y]=x),x.getHandSpace()};function w(y){const x=l.get(y.inputSource);x&&x.dispatchEvent({type:y.type})}function v(){l.forEach(function(y,x){y.disconnect(x)}),l.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),g.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function p(y){s=y,g.setContext(i),g.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(y){r=y,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(y){o=y,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=function(y){if(i=y,i!==null){i.addEventListener("select",w),i.addEventListener("selectstart",w),i.addEventListener("selectend",w),i.addEventListener("squeeze",w),i.addEventListener("squeezestart",w),i.addEventListener("squeezeend",w),i.addEventListener("end",v);const x=e.getContextAttributes();x.xrCompatible!==!0&&e.makeXRCompatible();const M={antialias:x.antialias,alpha:x.alpha,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:r},_=new XRWebGLLayer(i,e,M);i.updateRenderState({baseLayer:_}),i.requestReferenceSpace(o).then(p),i.addEventListener("inputsourceschange",E)}};function E(y){const x=i.inputSources;for(let M=0;M<c.length;M++)l.set(x[M],c[M]);for(let M=0;M<y.removed.length;M++){const _=y.removed[M],T=l.get(_);T&&(T.dispatchEvent({type:"disconnected",data:_}),l.delete(_))}for(let M=0;M<y.added.length;M++){const _=y.added[M],T=l.get(_);T&&T.dispatchEvent({type:"connected",data:_})}}const A=new C,R=new C;function S(y,x,M){A.setFromMatrixPosition(x.matrixWorld),R.setFromMatrixPosition(M.matrixWorld);const _=A.distanceTo(R),T=x.projectionMatrix.elements,L=M.projectionMatrix.elements,I=T[14]/(T[10]-1),z=T[14]/(T[10]+1),V=(T[9]+1)/T[5],H=(T[9]-1)/T[5],k=(T[8]-1)/T[0],Z=(L[8]+1)/L[0],ce=I*k,Ee=I*Z,j=_/(-k+Z),Pe=j*-k;x.matrixWorld.decompose(y.position,y.quaternion,y.scale),y.translateX(Pe),y.translateZ(j),y.matrixWorld.compose(y.position,y.quaternion,y.scale),y.matrixWorldInverse.getInverse(y.matrixWorld);const de=I+j,Te=z+j,Me=ce-Pe,Ie=Ee+(_-Pe),Ae=V*z/Te*de,J=H*z/Te*de;y.projectionMatrix.makePerspective(Me,Ie,Ae,J,de,Te)}function D(y,x){x===null?y.matrixWorld.copy(y.matrix):y.matrixWorld.multiplyMatrices(x.matrixWorld,y.matrix),y.matrixWorldInverse.getInverse(y.matrixWorld)}this.getCamera=function(y){d.near=u.near=h.near=y.near,d.far=u.far=h.far=y.far,(m!==d.near||b!==d.far)&&(i.updateRenderState({depthNear:d.near,depthFar:d.far}),m=d.near,b=d.far);const x=y.parent,M=d.cameras;D(d,x);for(let T=0;T<M.length;T++)D(M[T],x);y.matrixWorld.copy(d.matrixWorld);const _=y.children;for(let T=0,L=_.length;T<L;T++)_[T].updateMatrixWorld(!0);return M.length===2?S(d,h,u):d.projectionMatrix.copy(h.projectionMatrix),d};let N=null;function U(y,x){if(a=x.getViewerPose(s),a!==null){const _=a.views,T=i.renderState.baseLayer;t.setFramebuffer(T.framebuffer);let L=!1;_.length!==d.cameras.length&&(d.cameras.length=0,L=!0);for(let I=0;I<_.length;I++){const z=_[I],V=T.getViewport(z),H=f[I];H.matrix.fromArray(z.transform.matrix),H.projectionMatrix.fromArray(z.projectionMatrix),H.viewport.set(V.x,V.y,V.width,V.height),I===0&&d.matrix.copy(H.matrix),L===!0&&d.cameras.push(H)}}const M=i.inputSources;for(let _=0;_<c.length;_++){const T=c[_],L=M[_];T.update(L,x,s)}N&&N(y,x)}const g=new Xf;g.setAnimationLoop(U),this.setAnimationLoop=function(y){N=y},this.dispose=function(){}}Object.assign(rd.prototype,vn.prototype);function t0(t){function e(v,p){v.fogColor.value.copy(p.color),p.isFog?(v.fogNear.value=p.near,v.fogFar.value=p.far):p.isFogExp2&&(v.fogDensity.value=p.density)}function n(v,p,E,A){p.isMeshBasicMaterial?i(v,p):p.isMeshLambertMaterial?(i(v,p),c(v,p)):p.isMeshToonMaterial?(i(v,p),h(v,p)):p.isMeshPhongMaterial?(i(v,p),l(v,p)):p.isMeshStandardMaterial?(i(v,p),p.isMeshPhysicalMaterial?f(v,p):u(v,p)):p.isMeshMatcapMaterial?(i(v,p),d(v,p)):p.isMeshDepthMaterial?(i(v,p),m(v,p)):p.isMeshDistanceMaterial?(i(v,p),b(v,p)):p.isMeshNormalMaterial?(i(v,p),w(v,p)):p.isLineBasicMaterial?(r(v,p),p.isLineDashedMaterial&&s(v,p)):p.isPointsMaterial?o(v,p,E,A):p.isSpriteMaterial?a(v,p):p.isShadowMaterial?(v.color.value.copy(p.color),v.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function i(v,p){v.opacity.value=p.opacity,p.color&&v.diffuse.value.copy(p.color),p.emissive&&v.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(v.map.value=p.map),p.alphaMap&&(v.alphaMap.value=p.alphaMap),p.specularMap&&(v.specularMap.value=p.specularMap);const E=t.get(p).envMap;if(E){v.envMap.value=E,v.flipEnvMap.value=E.isCubeTexture?-1:1,v.reflectivity.value=p.reflectivity,v.refractionRatio.value=p.refractionRatio;const S=t.get(E).__maxMipLevel;S!==void 0&&(v.maxMipLevel.value=S)}p.lightMap&&(v.lightMap.value=p.lightMap,v.lightMapIntensity.value=p.lightMapIntensity),p.aoMap&&(v.aoMap.value=p.aoMap,v.aoMapIntensity.value=p.aoMapIntensity);let A;p.map?A=p.map:p.specularMap?A=p.specularMap:p.displacementMap?A=p.displacementMap:p.normalMap?A=p.normalMap:p.bumpMap?A=p.bumpMap:p.roughnessMap?A=p.roughnessMap:p.metalnessMap?A=p.metalnessMap:p.alphaMap?A=p.alphaMap:p.emissiveMap?A=p.emissiveMap:p.clearcoatMap?A=p.clearcoatMap:p.clearcoatNormalMap?A=p.clearcoatNormalMap:p.clearcoatRoughnessMap&&(A=p.clearcoatRoughnessMap),A!==void 0&&(A.isWebGLRenderTarget&&(A=A.texture),A.matrixAutoUpdate===!0&&A.updateMatrix(),v.uvTransform.value.copy(A.matrix));let R;p.aoMap?R=p.aoMap:p.lightMap&&(R=p.lightMap),R!==void 0&&(R.isWebGLRenderTarget&&(R=R.texture),R.matrixAutoUpdate===!0&&R.updateMatrix(),v.uv2Transform.value.copy(R.matrix))}function r(v,p){v.diffuse.value.copy(p.color),v.opacity.value=p.opacity}function s(v,p){v.dashSize.value=p.dashSize,v.totalSize.value=p.dashSize+p.gapSize,v.scale.value=p.scale}function o(v,p,E,A){v.diffuse.value.copy(p.color),v.opacity.value=p.opacity,v.size.value=p.size*E,v.scale.value=A*.5,p.map&&(v.map.value=p.map),p.alphaMap&&(v.alphaMap.value=p.alphaMap);let R;p.map?R=p.map:p.alphaMap&&(R=p.alphaMap),R!==void 0&&(R.matrixAutoUpdate===!0&&R.updateMatrix(),v.uvTransform.value.copy(R.matrix))}function a(v,p){v.diffuse.value.copy(p.color),v.opacity.value=p.opacity,v.rotation.value=p.rotation,p.map&&(v.map.value=p.map),p.alphaMap&&(v.alphaMap.value=p.alphaMap);let E;p.map?E=p.map:p.alphaMap&&(E=p.alphaMap),E!==void 0&&(E.matrixAutoUpdate===!0&&E.updateMatrix(),v.uvTransform.value.copy(E.matrix))}function c(v,p){p.emissiveMap&&(v.emissiveMap.value=p.emissiveMap)}function l(v,p){v.specular.value.copy(p.specular),v.shininess.value=Math.max(p.shininess,1e-4),p.emissiveMap&&(v.emissiveMap.value=p.emissiveMap),p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,p.side===lt&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),p.side===lt&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}function h(v,p){p.gradientMap&&(v.gradientMap.value=p.gradientMap),p.emissiveMap&&(v.emissiveMap.value=p.emissiveMap),p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,p.side===lt&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),p.side===lt&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}function u(v,p){v.roughness.value=p.roughness,v.metalness.value=p.metalness,p.roughnessMap&&(v.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(v.metalnessMap.value=p.metalnessMap),p.emissiveMap&&(v.emissiveMap.value=p.emissiveMap),p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,p.side===lt&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),p.side===lt&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias),t.get(p).envMap&&(v.envMapIntensity.value=p.envMapIntensity)}function f(v,p){u(v,p),v.reflectivity.value=p.reflectivity,v.clearcoat.value=p.clearcoat,v.clearcoatRoughness.value=p.clearcoatRoughness,p.sheen&&v.sheen.value.copy(p.sheen),p.clearcoatMap&&(v.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(v.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),v.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===lt&&v.clearcoatNormalScale.value.negate()),v.transmission.value=p.transmission,p.transmissionMap&&(v.transmissionMap.value=p.transmissionMap)}function d(v,p){p.matcap&&(v.matcap.value=p.matcap),p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,p.side===lt&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),p.side===lt&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}function m(v,p){p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}function b(v,p){p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias),v.referencePosition.value.copy(p.referencePosition),v.nearDistance.value=p.nearDistance,v.farDistance.value=p.farDistance}function w(v,p){p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,p.side===lt&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),p.side===lt&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function Vr(t){t=t||{};const e=t.canvas!==void 0?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=t.context!==void 0?t.context:null,i=t.alpha!==void 0?t.alpha:!1,r=t.depth!==void 0?t.depth:!0,s=t.stencil!==void 0?t.stencil:!0,o=t.antialias!==void 0?t.antialias:!1,a=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,c=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,l=t.powerPreference!==void 0?t.powerPreference:"default",h=t.failIfMajorPerformanceCaveat!==void 0?t.failIfMajorPerformanceCaveat:!1;let u=null,f=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=bt,this.physicallyCorrectLights=!1,this.toneMapping=xi,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const d=this;let m=!1,b=null,w=0,v=0,p=null,E=null,A=-1,R=null,S=null;const D=new Be,N=new Be;let U=null,g=e.width,y=e.height,x=1,M=null,_=null;const T=new Be(0,0,g,y),L=new Be(0,0,g,y);let I=!1;const z=new js;let V=!1,H=!1;const k=new fe,Z=new C,ce={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ee(){return p===null?x:1}let j=n;function Pe(O,q){for(let W=0;W<O.length;W++){const X=O[W],ue=e.getContext(X,q);if(ue!==null)return ue}return null}try{const O={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(e.addEventListener("webglcontextlost",He,!1),e.addEventListener("webglcontextrestored",et,!1),j===null){const q=["webgl2","webgl","experimental-webgl"];if(d.isWebGL1Renderer===!0&&q.shift(),j=Pe(q,O),j===null)throw Pe(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}j.getShaderPrecisionFormat===void 0&&(j.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(O){throw console.error("THREE.WebGLRenderer: "+O.message),O}let de,Te,Me,Ie,Ae,J,Q,te,ge,le,P,F,$,K,G,ee,ae,ve,re,B,ne;function pe(){de=new Ov(j),Te=new Pv(j,de,t),Te.isWebGL2===!1&&(de.get("WEBGL_depth_texture"),de.get("OES_texture_float"),de.get("OES_texture_half_float"),de.get("OES_texture_half_float_linear"),de.get("OES_standard_derivatives"),de.get("OES_element_index_uint"),de.get("OES_vertex_array_object"),de.get("ANGLE_instanced_arrays")),de.get("OES_texture_float_linear"),B=new id(j,de,Te),Me=new Qy(j,de,Te),Me.scissor(N.copy(L).multiplyScalar(x).floor()),Me.viewport(D.copy(T).multiplyScalar(x).floor()),Ie=new Nv(j),Ae=new Hy,J=new e0(j,de,Me,Ae,Te,B,Ie),Q=new Dv(d),te=new om(j,Te),ne=new Cv(j,de,te,Te),ge=new Fv(j,te,Ie,ne),le=new Hv(j,ge,te,Ie),ae=new zv(j),G=new Iv(Ae),P=new zy(d,Q,de,Te,ne,G),F=new t0(Ae),$=new Wy(Ae),K=new Jy,ee=new Lv(d,Q,Me,le,a),ve=new Rv(j,de,Ie,Te),re=new Bv(j,de,Ie,Te),Ie.programs=P.programs,d.capabilities=Te,d.extensions=de,d.properties=Ae,d.renderLists=$,d.state=Me,d.info=Ie}pe();const se=new rd(d,j);this.xr=se;const _e=new nd(d,le,Te.maxTextureSize);this.shadowMap=_e,this.getContext=function(){return j},this.getContextAttributes=function(){return j.getContextAttributes()},this.forceContextLoss=function(){const O=de.get("WEBGL_lose_context");O&&O.loseContext()},this.forceContextRestore=function(){const O=de.get("WEBGL_lose_context");O&&O.restoreContext()},this.getPixelRatio=function(){return x},this.setPixelRatio=function(O){O!==void 0&&(x=O,this.setSize(g,y,!1))},this.getSize=function(O){return O===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),O=new Y),O.set(g,y)},this.setSize=function(O,q,W){if(se.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}g=O,y=q,e.width=Math.floor(O*x),e.height=Math.floor(q*x),W!==!1&&(e.style.width=O+"px",e.style.height=q+"px"),this.setViewport(0,0,O,q)},this.getDrawingBufferSize=function(O){return O===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),O=new Y),O.set(g*x,y*x).floor()},this.setDrawingBufferSize=function(O,q,W){g=O,y=q,x=W,e.width=Math.floor(O*W),e.height=Math.floor(q*W),this.setViewport(0,0,O,q)},this.getCurrentViewport=function(O){return O===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),O=new Be),O.copy(D)},this.getViewport=function(O){return O.copy(T)},this.setViewport=function(O,q,W,X){O.isVector4?T.set(O.x,O.y,O.z,O.w):T.set(O,q,W,X),Me.viewport(D.copy(T).multiplyScalar(x).floor())},this.getScissor=function(O){return O.copy(L)},this.setScissor=function(O,q,W,X){O.isVector4?L.set(O.x,O.y,O.z,O.w):L.set(O,q,W,X),Me.scissor(N.copy(L).multiplyScalar(x).floor())},this.getScissorTest=function(){return I},this.setScissorTest=function(O){Me.setScissorTest(I=O)},this.setOpaqueSort=function(O){M=O},this.setTransparentSort=function(O){_=O},this.getClearColor=function(){return ee.getClearColor()},this.setClearColor=function(){ee.setClearColor.apply(ee,arguments)},this.getClearAlpha=function(){return ee.getClearAlpha()},this.setClearAlpha=function(){ee.setClearAlpha.apply(ee,arguments)},this.clear=function(O,q,W){let X=0;(O===void 0||O)&&(X|=16384),(q===void 0||q)&&(X|=256),(W===void 0||W)&&(X|=1024),j.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",He,!1),e.removeEventListener("webglcontextrestored",et,!1),$.dispose(),K.dispose(),Ae.dispose(),Q.dispose(),le.dispose(),ne.dispose(),se.dispose(),kr.stop()};function He(O){O.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function et(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,pe()}function Gl(O){const q=O.target;q.removeEventListener("dispose",Gl),Zd(q)}function Zd(O){zl(O),Ae.remove(O)}function zl(O){const q=Ae.get(O).program;q!==void 0&&P.releaseProgram(q)}function Jd(O,q){O.render(function(W){d.renderBufferImmediate(W,q)})}this.renderBufferImmediate=function(O,q){ne.initAttributes();const W=Ae.get(O);O.hasPositions&&!W.position&&(W.position=j.createBuffer()),O.hasNormals&&!W.normal&&(W.normal=j.createBuffer()),O.hasUvs&&!W.uv&&(W.uv=j.createBuffer()),O.hasColors&&!W.color&&(W.color=j.createBuffer());const X=q.getAttributes();O.hasPositions&&(j.bindBuffer(34962,W.position),j.bufferData(34962,O.positionArray,35048),ne.enableAttribute(X.position),j.vertexAttribPointer(X.position,3,5126,!1,0,0)),O.hasNormals&&(j.bindBuffer(34962,W.normal),j.bufferData(34962,O.normalArray,35048),ne.enableAttribute(X.normal),j.vertexAttribPointer(X.normal,3,5126,!1,0,0)),O.hasUvs&&(j.bindBuffer(34962,W.uv),j.bufferData(34962,O.uvArray,35048),ne.enableAttribute(X.uv),j.vertexAttribPointer(X.uv,2,5126,!1,0,0)),O.hasColors&&(j.bindBuffer(34962,W.color),j.bufferData(34962,O.colorArray,35048),ne.enableAttribute(X.color),j.vertexAttribPointer(X.color,3,5126,!1,0,0)),ne.disableUnusedAttributes(),j.drawArrays(4,0,O.count),O.count=0},this.renderBufferDirect=function(O,q,W,X,ue,Oe){q===null&&(q=ce);const Ce=ue.isMesh&&ue.matrixWorld.determinant()<0,Fe=Wl(O,q,X,ue);Me.setMaterial(X,Ce);let Re=W.index;const it=W.attributes.position;if(Re===null){if(it===void 0||it.count===0)return}else if(Re.count===0)return;let tt=1;X.wireframe===!0&&(Re=ge.getWireframeAttribute(W),tt=2),(X.morphTargets||X.morphNormals)&&ae.update(ue,W,X,Fe),ne.setup(ue,X,Fe,W,Re);let Le,Ve=ve;Re!==null&&(Le=te.get(Re),Ve=re,Ve.setIndex(Le));const xn=Re!==null?Re.count:it.count,ke=W.drawRange.start*tt,ri=W.drawRange.count*tt,ht=Oe!==null?Oe.start*tt:0,La=Oe!==null?Oe.count*tt:1/0,St=Math.max(ke,ht),Wr=Math.min(xn,ke+ri,ht+La)-1,Gi=Math.max(0,Wr-St+1);if(Gi!==0){if(ue.isMesh)X.wireframe===!0?(Me.setLineWidth(X.wireframeLinewidth*Ee()),Ve.setMode(1)):Ve.setMode(4);else if(ue.isLine){let jr=X.linewidth;jr===void 0&&(jr=1),Me.setLineWidth(jr*Ee()),ue.isLineSegments?Ve.setMode(1):ue.isLineLoop?Ve.setMode(2):Ve.setMode(3)}else ue.isPoints?Ve.setMode(0):ue.isSprite&&Ve.setMode(4);if(ue.isInstancedMesh)Ve.renderInstances(St,Gi,ue.count);else if(W.isInstancedBufferGeometry){const jr=Math.min(W.instanceCount,W._maxInstanceCount);Ve.renderInstances(St,Gi,jr)}else Ve.render(St,Gi)}},this.compile=function(O,q){f=K.get(O,q),f.init(),O.traverse(function(X){X.isLight&&(f.pushLight(X),X.castShadow&&f.pushShadow(X))}),f.setupLights(q);const W=new WeakMap;O.traverse(function(X){const ue=X.material;if(ue)if(Array.isArray(ue))for(let Oe=0;Oe<ue.length;Oe++){const Ce=ue[Oe];W.has(Ce)===!1&&(yn(Ce,O,X),W.set(Ce))}else W.has(ue)===!1&&(yn(ue,O,X),W.set(ue))})};let Aa=null;function Kd(O){se.isPresenting||Aa&&Aa(O)}const kr=new Xf;kr.setAnimationLoop(Kd),typeof window!="undefined"&&kr.setContext(window),this.setAnimationLoop=function(O){Aa=O,se.setAnimationLoop(O),O===null?kr.stop():kr.start()},this.render=function(O,q){let W,X;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),W=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),X=arguments[3]),q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;ne.resetDefaultState(),A=-1,R=null,O.autoUpdate===!0&&O.updateMatrixWorld(),q.parent===null&&q.updateMatrixWorld(),se.enabled===!0&&se.isPresenting===!0&&(q=se.getCamera(q)),O.isScene===!0&&O.onBeforeRender(d,O,q,W||p),f=K.get(O,q),f.init(),k.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),z.setFromProjectionMatrix(k),H=this.localClippingEnabled,V=G.init(this.clippingPlanes,H,q),u=$.get(O,q),u.init(),Hl(O,q,0,d.sortObjects),u.finish(),d.sortObjects===!0&&u.sort(M,_),V===!0&&G.beginShadows();const ue=f.state.shadowsArray;_e.render(ue,O,q),f.setupLights(q),V===!0&&G.endShadows(),this.info.autoReset===!0&&this.info.reset(),W!==void 0&&this.setRenderTarget(W),ee.render(u,O,q,X);const Oe=u.opaque,Ce=u.transparent;Oe.length>0&&Vl(Oe,O,q),Ce.length>0&&Vl(Ce,O,q),O.isScene===!0&&O.onAfterRender(d,O,q),p!==null&&(J.updateRenderTargetMipmap(p),J.updateMultisampleRenderTarget(p)),Me.buffers.depth.setTest(!0),Me.buffers.depth.setMask(!0),Me.buffers.color.setMask(!0),Me.setPolygonOffset(!1),u=null,f=null};function Hl(O,q,W,X){if(O.visible===!1)return;if(O.layers.test(q.layers)){if(O.isGroup)W=O.renderOrder;else if(O.isLOD)O.autoUpdate===!0&&O.update(q);else if(O.isLight)f.pushLight(O),O.castShadow&&f.pushShadow(O);else if(O.isSprite){if(!O.frustumCulled||z.intersectsSprite(O)){X&&Z.setFromMatrixPosition(O.matrixWorld).applyMatrix4(k);const Ce=le.update(O),Fe=O.material;Fe.visible&&u.push(O,Ce,Fe,W,Z.z,null)}}else if(O.isImmediateRenderObject)X&&Z.setFromMatrixPosition(O.matrixWorld).applyMatrix4(k),u.push(O,null,O.material,W,Z.z,null);else if((O.isMesh||O.isLine||O.isPoints)&&(O.isSkinnedMesh&&O.skeleton.frame!==Ie.render.frame&&(O.skeleton.update(),O.skeleton.frame=Ie.render.frame),!O.frustumCulled||z.intersectsObject(O))){X&&Z.setFromMatrixPosition(O.matrixWorld).applyMatrix4(k);const Ce=le.update(O),Fe=O.material;if(Array.isArray(Fe)){const Re=Ce.groups;for(let it=0,tt=Re.length;it<tt;it++){const Le=Re[it],Ve=Fe[Le.materialIndex];Ve&&Ve.visible&&u.push(O,Ce,Ve,W,Z.z,Le)}}else Fe.visible&&u.push(O,Ce,Fe,W,Z.z,null)}}const Oe=O.children;for(let Ce=0,Fe=Oe.length;Ce<Fe;Ce++)Hl(Oe[Ce],q,W,X)}function Vl(O,q,W){const X=q.isScene===!0?q.overrideMaterial:null;for(let ue=0,Oe=O.length;ue<Oe;ue++){const Ce=O[ue],Fe=Ce.object,Re=Ce.geometry,it=X===null?Ce.material:X,tt=Ce.group;if(W.isArrayCamera){S=W;const Le=W.cameras;for(let Ve=0,xn=Le.length;Ve<xn;Ve++){const ke=Le[Ve];Fe.layers.test(ke.layers)&&(Me.viewport(D.copy(ke.viewport)),f.setupLights(ke),kl(Fe,q,ke,Re,it,tt))}}else S=null,kl(Fe,q,W,Re,it,tt)}}function kl(O,q,W,X,ue,Oe){if(O.onBeforeRender(d,q,W,X,ue,Oe),f=K.get(q,S||W),O.modelViewMatrix.multiplyMatrices(W.matrixWorldInverse,O.matrixWorld),O.normalMatrix.getNormalMatrix(O.modelViewMatrix),O.isImmediateRenderObject){const Ce=Wl(W,q,ue,O);Me.setMaterial(ue),ne.reset(),Jd(O,Ce)}else d.renderBufferDirect(W,q,X,ue,O,Oe);O.onAfterRender(d,q,W,X,ue,Oe),f=K.get(q,S||W)}function yn(O,q,W){q.isScene!==!0&&(q=ce);const X=Ae.get(O),ue=f.state.lights,Oe=f.state.shadowsArray,Ce=ue.state.version,Fe=P.getParameters(O,ue.state,Oe,q,W),Re=P.getProgramCacheKey(Fe);let it=X.program,tt=!0;if(it===void 0)O.addEventListener("dispose",Gl);else if(it.cacheKey!==Re)zl(O);else if(X.lightsStateVersion!==Ce)tt=!1;else if(Fe.shaderID!==void 0){const ke=O.isMeshStandardMaterial?q.environment:null;X.envMap=Q.get(O.envMap||ke);return}else tt=!1;tt&&(Fe.uniforms=P.getUniforms(O),O.onBeforeCompile(Fe,d),it=P.acquireProgram(Fe,Re),X.program=it,X.uniforms=Fe.uniforms,X.outputEncoding=Fe.outputEncoding);const Le=X.uniforms;(!O.isShaderMaterial&&!O.isRawShaderMaterial||O.clipping===!0)&&(X.numClippingPlanes=G.numPlanes,X.numIntersection=G.numIntersection,Le.clippingPlanes=G.uniform),X.environment=O.isMeshStandardMaterial?q.environment:null,X.fog=q.fog,X.envMap=Q.get(O.envMap||X.environment),X.needsLights=Qd(O),X.lightsStateVersion=Ce,X.needsLights&&(Le.ambientLightColor.value=ue.state.ambient,Le.lightProbe.value=ue.state.probe,Le.directionalLights.value=ue.state.directional,Le.directionalLightShadows.value=ue.state.directionalShadow,Le.spotLights.value=ue.state.spot,Le.spotLightShadows.value=ue.state.spotShadow,Le.rectAreaLights.value=ue.state.rectArea,Le.ltc_1.value=ue.state.rectAreaLTC1,Le.ltc_2.value=ue.state.rectAreaLTC2,Le.pointLights.value=ue.state.point,Le.pointLightShadows.value=ue.state.pointShadow,Le.hemisphereLights.value=ue.state.hemi,Le.directionalShadowMap.value=ue.state.directionalShadowMap,Le.directionalShadowMatrix.value=ue.state.directionalShadowMatrix,Le.spotShadowMap.value=ue.state.spotShadowMap,Le.spotShadowMatrix.value=ue.state.spotShadowMatrix,Le.pointShadowMap.value=ue.state.pointShadowMap,Le.pointShadowMatrix.value=ue.state.pointShadowMatrix);const Ve=X.program.getUniforms(),xn=qn.seqWithValue(Ve.seq,Le);X.uniformsList=xn}function Wl(O,q,W,X){q.isScene!==!0&&(q=ce),J.resetTextureUnits();const ue=q.fog,Oe=W.isMeshStandardMaterial?q.environment:null,Ce=p===null?d.outputEncoding:p.texture.encoding,Fe=Q.get(W.envMap||Oe),Re=Ae.get(W),it=f.state.lights;if(V===!0&&(H===!0||O!==R)){const ht=O===R&&W.id===A;G.setState(W,O,ht)}W.version===Re.__version?(W.fog&&Re.fog!==ue||Re.environment!==Oe||Re.needsLights&&Re.lightsStateVersion!==it.state.version||Re.numClippingPlanes!==void 0&&(Re.numClippingPlanes!==G.numPlanes||Re.numIntersection!==G.numIntersection)||Re.outputEncoding!==Ce||Re.envMap!==Fe)&&yn(W,q,X):(yn(W,q,X),Re.__version=W.version);let tt=!1,Le=!1,Ve=!1;const xn=Re.program,ke=xn.getUniforms(),ri=Re.uniforms;if(Me.useProgram(xn.program)&&(tt=!0,Le=!0,Ve=!0),W.id!==A&&(A=W.id,Le=!0),tt||R!==O){if(ke.setValue(j,"projectionMatrix",O.projectionMatrix),Te.logarithmicDepthBuffer&&ke.setValue(j,"logDepthBufFC",2/(Math.log(O.far+1)/Math.LN2)),R!==O&&(R=O,Le=!0,Ve=!0),W.isShaderMaterial||W.isMeshPhongMaterial||W.isMeshToonMaterial||W.isMeshStandardMaterial||W.envMap){const ht=ke.map.cameraPosition;ht!==void 0&&ht.setValue(j,Z.setFromMatrixPosition(O.matrixWorld))}(W.isMeshPhongMaterial||W.isMeshToonMaterial||W.isMeshLambertMaterial||W.isMeshBasicMaterial||W.isMeshStandardMaterial||W.isShaderMaterial)&&ke.setValue(j,"isOrthographic",O.isOrthographicCamera===!0),(W.isMeshPhongMaterial||W.isMeshToonMaterial||W.isMeshLambertMaterial||W.isMeshBasicMaterial||W.isMeshStandardMaterial||W.isShaderMaterial||W.isShadowMaterial||W.skinning)&&ke.setValue(j,"viewMatrix",O.matrixWorldInverse)}if(W.skinning){ke.setOptional(j,X,"bindMatrix"),ke.setOptional(j,X,"bindMatrixInverse");const ht=X.skeleton;if(ht){const La=ht.bones;if(Te.floatVertexTextures){if(ht.boneTexture===void 0){let St=Math.sqrt(La.length*4);St=be.ceilPowerOfTwo(St),St=Math.max(St,4);const Wr=new Float32Array(St*St*4);Wr.set(ht.boneMatrices);const Gi=new Si(Wr,St,St,It,An);ht.boneMatrices=Wr,ht.boneTexture=Gi,ht.boneTextureSize=St}ke.setValue(j,"boneTexture",ht.boneTexture,J),ke.setValue(j,"boneTextureSize",ht.boneTextureSize)}else ke.setOptional(j,ht,"boneMatrices")}}return(Le||Re.receiveShadow!==X.receiveShadow)&&(Re.receiveShadow=X.receiveShadow,ke.setValue(j,"receiveShadow",X.receiveShadow)),Le&&(ke.setValue(j,"toneMappingExposure",d.toneMappingExposure),Re.needsLights&&$d(ri,Ve),ue&&W.fog&&F.refreshFogUniforms(ri,ue),F.refreshMaterialUniforms(ri,W,x,y),qn.upload(j,Re.uniformsList,ri,J)),W.isShaderMaterial&&W.uniformsNeedUpdate===!0&&(qn.upload(j,Re.uniformsList,ri,J),W.uniformsNeedUpdate=!1),W.isSpriteMaterial&&ke.setValue(j,"center",X.center),ke.setValue(j,"modelViewMatrix",X.modelViewMatrix),ke.setValue(j,"normalMatrix",X.normalMatrix),ke.setValue(j,"modelMatrix",X.matrixWorld),xn}function $d(O,q){O.ambientLightColor.needsUpdate=q,O.lightProbe.needsUpdate=q,O.directionalLights.needsUpdate=q,O.directionalLightShadows.needsUpdate=q,O.pointLights.needsUpdate=q,O.pointLightShadows.needsUpdate=q,O.spotLights.needsUpdate=q,O.spotLightShadows.needsUpdate=q,O.rectAreaLights.needsUpdate=q,O.hemisphereLights.needsUpdate=q}function Qd(O){return O.isMeshLambertMaterial||O.isMeshToonMaterial||O.isMeshPhongMaterial||O.isMeshStandardMaterial||O.isShadowMaterial||O.isShaderMaterial&&O.lights===!0}this.setFramebuffer=function(O){b!==O&&p===null&&j.bindFramebuffer(36160,O),b=O},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return v},this.getRenderList=function(){return u},this.setRenderList=function(O){u=O},this.getRenderState=function(){return f},this.setRenderState=function(O){f=O},this.getRenderTarget=function(){return p},this.setRenderTarget=function(O,q=0,W=0){p=O,w=q,v=W,O&&Ae.get(O).__webglFramebuffer===void 0&&J.setupRenderTarget(O);let X=b,ue=!1;if(O){const Oe=Ae.get(O).__webglFramebuffer;O.isWebGLCubeRenderTarget?(X=Oe[q],ue=!0):O.isWebGLMultisampleRenderTarget?X=Ae.get(O).__webglMultisampledFramebuffer:X=Oe,D.copy(O.viewport),N.copy(O.scissor),U=O.scissorTest}else D.copy(T).multiplyScalar(x).floor(),N.copy(L).multiplyScalar(x).floor(),U=I;if(E!==X&&(j.bindFramebuffer(36160,X),E=X),Me.viewport(D),Me.scissor(N),Me.setScissorTest(U),ue){const Oe=Ae.get(O.texture);j.framebufferTexture2D(36160,36064,34069+q,Oe.__webglTexture,W)}},this.readRenderTargetPixels=function(O,q,W,X,ue,Oe,Ce){if(!(O&&O.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Fe=Ae.get(O).__webglFramebuffer;if(O.isWebGLCubeRenderTarget&&Ce!==void 0&&(Fe=Fe[Ce]),Fe){let Re=!1;Fe!==E&&(j.bindFramebuffer(36160,Fe),Re=!0);try{const it=O.texture,tt=it.format,Le=it.type;if(tt!==It&&B.convert(tt)!==j.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Le!==Gr&&B.convert(Le)!==j.getParameter(35738)&&!(Le===An&&(Te.isWebGL2||de.get("OES_texture_float")||de.get("WEBGL_color_buffer_float")))&&!(Le===ds&&(Te.isWebGL2?de.get("EXT_color_buffer_float"):de.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}j.checkFramebufferStatus(36160)===36053?q>=0&&q<=O.width-X&&W>=0&&W<=O.height-ue&&j.readPixels(q,W,X,ue,B.convert(tt),B.convert(Le),Oe):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{Re&&j.bindFramebuffer(36160,E)}}},this.copyFramebufferToTexture=function(O,q,W){W===void 0&&(W=0);const X=Math.pow(2,-W),ue=Math.floor(q.image.width*X),Oe=Math.floor(q.image.height*X),Ce=B.convert(q.format);J.setTexture2D(q,0),j.copyTexImage2D(3553,W,Ce,O.x,O.y,ue,Oe,0),Me.unbindTexture()},this.copyTextureToTexture=function(O,q,W,X){X===void 0&&(X=0);const ue=q.image.width,Oe=q.image.height,Ce=B.convert(W.format),Fe=B.convert(W.type);J.setTexture2D(W,0),j.pixelStorei(37440,W.flipY),j.pixelStorei(37441,W.premultiplyAlpha),j.pixelStorei(3317,W.unpackAlignment),q.isDataTexture?j.texSubImage2D(3553,X,O.x,O.y,ue,Oe,Ce,Fe,q.image.data):q.isCompressedTexture?j.compressedTexSubImage2D(3553,X,O.x,O.y,q.mipmaps[0].width,q.mipmaps[0].height,Ce,q.mipmaps[0].data):j.texSubImage2D(3553,X,O.x,O.y,Ce,Fe,q.image),X===0&&W.generateMipmaps&&j.generateMipmap(3553),Me.unbindTexture()},this.initTexture=function(O){J.setTexture2D(O,0),Me.unbindTexture()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Rc(t){Vr.call(this,t)}Rc.prototype=Object.assign(Object.create(Vr.prototype),{constructor:Rc,isWebGL1Renderer:!0});class ya{constructor(e,n){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new oe(e),this.density=n!==void 0?n:25e-5}clone(){return new ya(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class xa{constructor(e,n,i){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new oe(e),this.near=n!==void 0?n:1,this.far=i!==void 0?i:1e3}clone(){return new xa(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class _a extends me{constructor(){super();Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.background!==null&&(n.object.background=this.background.toJSON(e)),this.environment!==null&&(n.object.environment=this.environment.toJSON(e)),this.fog!==null&&(n.object.fog=this.fog.toJSON()),n}}function Pt(t,e){this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=ks,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=be.generateUUID()}Object.defineProperty(Pt.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(Pt.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e){return e===void 0&&(e=0),this.array.set(t,e),this},clone:function(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=be.generateUUID()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new Pt(e,this.stride);return n.setUsage(this.usage),n},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=be.generateUUID()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const ci=new C;function ei(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i===!0}Object.defineProperties(ei.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}});Object.assign(ei.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)ci.x=this.getX(e),ci.y=this.getY(e),ci.z=this.getZ(e),ci.applyMatrix4(t),this.setXYZ(e,ci.x,ci.y,ci.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this},clone:function(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new we(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ei(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function ti(t){Se.call(this),this.type="SpriteMaterial",this.color=new oe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}ti.prototype=Object.create(Se.prototype);ti.prototype.constructor=ti;ti.prototype.isSpriteMaterial=!0;ti.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};let tr;const Kr=new C,nr=new C,ir=new C,rr=new Y,$r=new Y,sd=new fe,ho=new C,Qr=new C,fo=new C,xu=new Y,Qa=new Y,_u=new Y;function Ms(t){if(me.call(this),this.type="Sprite",tr===void 0){tr=new xe;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Pt(e,5);tr.setIndex([0,1,2,0,2,3]),tr.setAttribute("position",new ei(n,3,0,!1)),tr.setAttribute("uv",new ei(n,2,3,!1))}this.geometry=tr,this.material=t!==void 0?t:new ti,this.center=new Y(.5,.5)}Ms.prototype=Object.assign(Object.create(me.prototype),{constructor:Ms,isSprite:!0,raycast:function(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),nr.setFromMatrixScale(this.matrixWorld),sd.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),ir.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&nr.multiplyScalar(-ir.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;po(ho.set(-.5,-.5,0),ir,s,nr,i,r),po(Qr.set(.5,-.5,0),ir,s,nr,i,r),po(fo.set(.5,.5,0),ir,s,nr,i,r),xu.set(0,0),Qa.set(1,0),_u.set(1,1);let o=t.ray.intersectTriangle(ho,Qr,fo,!1,Kr);if(o===null&&(po(Qr.set(-.5,.5,0),ir,s,nr,i,r),Qa.set(0,1),o=t.ray.intersectTriangle(ho,fo,Qr,!1,Kr),o===null))return;const a=t.ray.origin.distanceTo(Kr);a<t.near||a>t.far||e.push({distance:a,point:Kr.clone(),uv:vt.getUV(Kr,ho,Qr,fo,xu,Qa,_u,new Y),face:null,object:this})},copy:function(t){return me.prototype.copy.call(this,t),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}});function po(t,e,n,i,r,s){rr.subVectors(t,n).addScalar(.5).multiply(i),r!==void 0?($r.x=s*rr.x-r*rr.y,$r.y=r*rr.x+s*rr.y):$r.copy(rr),t.copy(e),t.x+=$r.x,t.y+=$r.y,t.applyMatrix4(sd)}const mo=new C,bu=new C;function Ss(){me.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}Ss.prototype=Object.assign(Object.create(me.prototype),{constructor:Ss,isLOD:!0,copy:function(t){me.prototype.copy.call(this,t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const r=e[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e){e===void 0&&(e=0),e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){if(this.levels.length>0){mo.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(mo);this.getObjectForDistance(i).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){mo.setFromMatrixPosition(t.matrixWorld),bu.setFromMatrixPosition(this.matrixWorld);const n=mo.distanceTo(bu)/t.zoom;e[0].object.visible=!0;let i,r;for(i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(t){const e=me.prototype.toJSON.call(this,t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const s=n[i];e.object.levels.push({object:s.object.uuid,distance:s.distance})}return e}});function Ts(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),je.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new fe,this.bindMatrixInverse=new fe}Ts.prototype=Object.assign(Object.create(je.prototype),{constructor:Ts,isSkinnedMesh:!0,copy:function(t){return je.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new Be,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){je.prototype.updateMatrixWorld.call(this,t),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const t=new C,e=new Be,n=new Be,i=new C,r=new fe;return function(s,o){const a=this.skeleton,c=this.geometry;e.fromBufferAttribute(c.attributes.skinIndex,s),n.fromBufferAttribute(c.attributes.skinWeight,s),t.fromBufferAttribute(c.attributes.position,s).applyMatrix4(this.bindMatrix),o.set(0,0,0);for(let l=0;l<4;l++){const h=n.getComponent(l);if(h!==0){const u=e.getComponent(l);r.multiplyMatrices(a.bones[u].matrixWorld,a.boneInverses[u]),o.addScaledVector(i.copy(t).applyMatrix4(r),h)}}return o.applyMatrix4(this.bindMatrixInverse)}}()});const wu=new fe,n0=new fe;function Es(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),this.frame=-1,e===void 0)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new fe)}}Object.assign(Es.prototype,{calculateInverses:function(){this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++){const n=new fe;this.bones[t]&&n.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(n)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.getInverse(this.boneInverses[t])}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.getInverse(n.parent.matrixWorld),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,s=t.length;r<s;r++){const o=t[r]?t[r].matrixWorld:n0;wu.multiplyMatrices(o,e[r]),wu.toArray(n,r*16)}i!==void 0&&(i.needsUpdate=!0)},clone:function(){return new Es(this.bones,this.boneInverses)},getBoneByName:function(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});function As(){me.call(this),this.type="Bone"}As.prototype=Object.assign(Object.create(me.prototype),{constructor:As,isBone:!0});const Mu=new fe,Su=new fe,go=[],es=new je;function Xo(t,e,n){je.call(this,t,e),this.instanceMatrix=new we(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}Xo.prototype=Object.assign(Object.create(je.prototype),{constructor:Xo,isInstancedMesh:!0,copy:function(t){return je.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),this.count=t.count,this},setColorAt:function(t,e){this.instanceColor===null&&(this.instanceColor=new we(new Float32Array(this.count*3),3)),e.toArray(this.instanceColor.array,t*3)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,t*16)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(es.geometry=this.geometry,es.material=this.material,es.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Mu),Su.multiplyMatrices(n,Mu),es.matrixWorld=Su,es.raycast(t,go);for(let s=0,o=go.length;s<o;s++){const a=go[s];a.instanceId=r,a.object=this,e.push(a)}go.length=0}},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,t*16)},updateMorphTargets:function(){}});function Je(t){Se.call(this),this.type="LineBasicMaterial",this.color=new oe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}Je.prototype=Object.create(Se.prototype);Je.prototype.constructor=Je;Je.prototype.isLineBasicMaterial=!0;Je.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const Tu=new C,Eu=new C,Au=new fe,vo=new zr,yo=new Bn;function Nt(t,e,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),me.call(this),this.type="Line",this.geometry=t!==void 0?t:new xe,this.material=e!==void 0?e:new Je,this.updateMorphTargets()}Nt.prototype=Object.assign(Object.create(me.prototype),{constructor:Nt,isLine:!0,copy:function(t){return me.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)Tu.fromBufferAttribute(e,i-1),Eu.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Tu.distanceTo(Eu);t.setAttribute("lineDistance",new ie(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;n[0]=0;for(let i=1,r=e.length;i<r;i++)n[i]=n[i-1],n[i]+=e[i-1].distanceTo(e[i])}return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),yo.copy(n.boundingSphere),yo.applyMatrix4(i),yo.radius+=r,t.ray.intersectsSphere(yo)===!1)return;Au.getInverse(i),vo.copy(t.ray).applyMatrix4(Au);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new C,c=new C,l=new C,h=new C,u=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){const f=n.index,m=n.attributes.position.array;if(f!==null){const b=f.array;for(let w=0,v=b.length-1;w<v;w+=u){const p=b[w],E=b[w+1];if(a.fromArray(m,p*3),c.fromArray(m,E*3),vo.distanceSqToSegment(a,c,h,l)>o)continue;h.applyMatrix4(this.matrixWorld);const R=t.ray.origin.distanceTo(h);R<t.near||R>t.far||e.push({distance:R,point:l.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else for(let b=0,w=m.length/3-1;b<w;b+=u){if(a.fromArray(m,3*b),c.fromArray(m,3*b+3),vo.distanceSqToSegment(a,c,h,l)>o)continue;h.applyMatrix4(this.matrixWorld);const p=t.ray.origin.distanceTo(h);p<t.near||p>t.far||e.push({distance:p,point:l.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const f=n.vertices,d=f.length;for(let m=0;m<d-1;m+=u){if(vo.distanceSqToSegment(f[m],f[m+1],h,l)>o)continue;h.applyMatrix4(this.matrixWorld);const w=t.ray.origin.distanceTo(h);w<t.near||w>t.far||e.push({distance:w,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const xo=new C,_o=new C;function Mt(t,e){Nt.call(this,t,e),this.type="LineSegments"}Mt.prototype=Object.assign(Object.create(Nt.prototype),{constructor:Mt,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,r=e.count;i<r;i+=2)xo.fromBufferAttribute(e,i),_o.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+xo.distanceTo(_o);t.setAttribute("lineDistance",new ie(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;for(let i=0,r=e.length;i<r;i+=2)xo.copy(e[i]),_o.copy(e[i+1]),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+xo.distanceTo(_o)}return this}});function Yo(t,e){Nt.call(this,t,e),this.type="LineLoop"}Yo.prototype=Object.assign(Object.create(Nt.prototype),{constructor:Yo,isLineLoop:!0});function Qt(t){Se.call(this),this.type="PointsMaterial",this.color=new oe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}Qt.prototype=Object.create(Se.prototype);Qt.prototype.constructor=Qt;Qt.prototype.isPointsMaterial=!0;Qt.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const Lu=new fe,Pc=new zr,bo=new Bn,wo=new C;function Ar(t,e){me.call(this),this.type="Points",this.geometry=t!==void 0?t:new xe,this.material=e!==void 0?e:new Qt,this.updateMorphTargets()}Ar.prototype=Object.assign(Object.create(me.prototype),{constructor:Ar,isPoints:!0,copy:function(t){return me.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),bo.copy(n.boundingSphere),bo.applyMatrix4(i),bo.radius+=r,t.ray.intersectsSphere(bo)===!1)return;Lu.getInverse(i),Pc.copy(t.ray).applyMatrix4(Lu);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const a=n.index,l=n.attributes.position.array;if(a!==null){const h=a.array;for(let u=0,f=h.length;u<f;u++){const d=h[u];wo.fromArray(l,d*3),ec(wo,d,o,i,t,e,this)}}else for(let h=0,u=l.length/3;h<u;h++)wo.fromArray(l,h*3),ec(wo,h,o,i,t,e,this)}else{const a=n.vertices;for(let c=0,l=a.length;c<l;c++)ec(a[c],c,o,i,t,e,this)}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function ec(t,e,n,i,r,s,o){const a=Pc.distanceSqToPoint(t);if(a<n){const c=new C;Pc.closestPointToPoint(t,c),c.applyMatrix4(i);const l=r.ray.origin.distanceTo(c);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:e,face:null,object:o})}}function Ic(t,e,n,i,r,s,o,a,c){Ge.call(this,t,e,n,i,r,s,o,a,c),this.format=o!==void 0?o:jn,this.minFilter=s!==void 0?s:rt,this.magFilter=r!==void 0?r:rt,this.generateMipmaps=!1;const l=this;function h(){l.needsUpdate=!0,t.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(h)}Ic.prototype=Object.assign(Object.create(Ge.prototype),{constructor:Ic,isVideoTexture:!0,update:function(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Lr(t,e,n,i,r,s,o,a,c,l,h,u){Ge.call(this,null,s,o,a,c,l,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}Lr.prototype=Object.create(Ge.prototype);Lr.prototype.constructor=Lr;Lr.prototype.isCompressedTexture=!0;function Ls(t,e,n,i,r,s,o,a,c){Ge.call(this,t,e,n,i,r,s,o,a,c),this.needsUpdate=!0}Ls.prototype=Object.create(Ge.prototype);Ls.prototype.constructor=Ls;Ls.prototype.isCanvasTexture=!0;function Cs(t,e,n,i,r,s,o,a,c,l){if(l=l!==void 0?l:_i,l!==_i&&l!==wr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&l===_i&&(n=fs),n===void 0&&l===wr&&(n=vr),Ge.call(this,null,i,r,s,o,a,l,n,c),this.image={width:t,height:e},this.magFilter=o!==void 0?o:ut,this.minFilter=a!==void 0?a:ut,this.flipY=!1,this.generateMipmaps=!1}Cs.prototype=Object.create(Ge.prototype);Cs.prototype.constructor=Cs;Cs.prototype.isDepthTexture=!0;class cl extends xe{constructor(e){super();this.type="WireframeGeometry";const n=[],i=[0,0],r={},s=["a","b","c"];if(e&&e.isGeometry){const o=e.faces;for(let a=0,c=o.length;a<c;a++){const l=o[a];for(let h=0;h<3;h++){const u=l[s[h]],f=l[s[(h+1)%3]];i[0]=Math.min(u,f),i[1]=Math.max(u,f);const d=i[0]+","+i[1];r[d]===void 0&&(r[d]={index1:i[0],index2:i[1]})}}for(const a in r){const c=r[a];let l=e.vertices[c.index1];n.push(l.x,l.y,l.z),l=e.vertices[c.index2],n.push(l.x,l.y,l.z)}}else if(e&&e.isBufferGeometry){const o=new C;if(e.index!==null){const a=e.attributes.position,c=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,u=l.length;h<u;++h){const f=l[h],d=f.start,m=f.count;for(let b=d,w=d+m;b<w;b+=3)for(let v=0;v<3;v++){const p=c.getX(b+v),E=c.getX(b+(v+1)%3);i[0]=Math.min(p,E),i[1]=Math.max(p,E);const A=i[0]+","+i[1];r[A]===void 0&&(r[A]={index1:i[0],index2:i[1]})}}for(const h in r){const u=r[h];o.fromBufferAttribute(a,u.index1),n.push(o.x,o.y,o.z),o.fromBufferAttribute(a,u.index2),n.push(o.x,o.y,o.z)}}else{const a=e.attributes.position;for(let c=0,l=a.count/3;c<l;c++)for(let h=0;h<3;h++){const u=3*c+h;o.fromBufferAttribute(a,u),n.push(o.x,o.y,o.z);const f=3*c+(h+1)%3;o.fromBufferAttribute(a,f),n.push(o.x,o.y,o.z)}}}this.setAttribute("position",new ie(n,3))}}function Rs(t,e,n){Ue.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new Cr(t,e,n)),this.mergeVertices()}Rs.prototype=Object.create(Ue.prototype);Rs.prototype.constructor=Rs;function Cr(t,e,n){xe.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],r=[],s=[],o=[],a=1e-5,c=new C,l=new C,h=new C,u=new C,f=new C;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=e+1;for(let m=0;m<=n;m++){const b=m/n;for(let w=0;w<=e;w++){const v=w/e;t(v,b,l),r.push(l.x,l.y,l.z),v-a>=0?(t(v-a,b,h),u.subVectors(l,h)):(t(v+a,b,h),u.subVectors(h,l)),b-a>=0?(t(v,b-a,h),f.subVectors(l,h)):(t(v,b+a,h),f.subVectors(h,l)),c.crossVectors(u,f).normalize(),s.push(c.x,c.y,c.z),o.push(v,b)}}for(let m=0;m<n;m++)for(let b=0;b<e;b++){const w=m*d+b,v=m*d+b+1,p=(m+1)*d+b+1,E=(m+1)*d+b;i.push(w,v,E),i.push(v,p,E)}this.setIndex(i),this.setAttribute("position",new ie(r,3)),this.setAttribute("normal",new ie(s,3)),this.setAttribute("uv",new ie(o,2))}Cr.prototype=Object.create(xe.prototype);Cr.prototype.constructor=Cr;class od extends Ue{constructor(e,n,i,r){super();this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:n,radius:i,detail:r},this.fromBufferGeometry(new Ui(e,n,i,r)),this.mergeVertices()}}class Ui extends xe{constructor(e,n,i,r){super();this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:n,radius:i,detail:r},i=i||1,r=r||0;const s=[],o=[];a(r),l(i),h(),this.setAttribute("position",new ie(s,3)),this.setAttribute("normal",new ie(s.slice(),3)),this.setAttribute("uv",new ie(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(p){const E=new C,A=new C,R=new C;for(let S=0;S<n.length;S+=3)d(n[S+0],E),d(n[S+1],A),d(n[S+2],R),c(E,A,R,p)}function c(p,E,A,R){const S=Math.pow(2,R),D=[];for(let N=0;N<=S;N++){D[N]=[];const U=p.clone().lerp(A,N/S),g=E.clone().lerp(A,N/S),y=S-N;for(let x=0;x<=y;x++)x===0&&N===S?D[N][x]=U:D[N][x]=U.clone().lerp(g,x/y)}for(let N=0;N<S;N++)for(let U=0;U<2*(S-N)-1;U++){const g=Math.floor(U/2);U%2===0?(f(D[N][g+1]),f(D[N+1][g]),f(D[N][g])):(f(D[N][g+1]),f(D[N+1][g+1]),f(D[N+1][g]))}}function l(p){const E=new C;for(let A=0;A<s.length;A+=3)E.x=s[A+0],E.y=s[A+1],E.z=s[A+2],E.normalize().multiplyScalar(p),s[A+0]=E.x,s[A+1]=E.y,s[A+2]=E.z}function h(){const p=new C;for(let E=0;E<s.length;E+=3){p.x=s[E+0],p.y=s[E+1],p.z=s[E+2];const A=w(p)/2/Math.PI+.5,R=v(p)/Math.PI+.5;o.push(A,1-R)}m(),u()}function u(){for(let p=0;p<o.length;p+=6){const E=o[p+0],A=o[p+2],R=o[p+4],S=Math.max(E,A,R),D=Math.min(E,A,R);S>.9&&D<.1&&(E<.2&&(o[p+0]+=1),A<.2&&(o[p+2]+=1),R<.2&&(o[p+4]+=1))}}function f(p){s.push(p.x,p.y,p.z)}function d(p,E){const A=p*3;E.x=e[A+0],E.y=e[A+1],E.z=e[A+2]}function m(){const p=new C,E=new C,A=new C,R=new C,S=new Y,D=new Y,N=new Y;for(let U=0,g=0;U<s.length;U+=9,g+=6){p.set(s[U+0],s[U+1],s[U+2]),E.set(s[U+3],s[U+4],s[U+5]),A.set(s[U+6],s[U+7],s[U+8]),S.set(o[g+0],o[g+1]),D.set(o[g+2],o[g+3]),N.set(o[g+4],o[g+5]),R.copy(p).add(E).add(A).divideScalar(3);const y=w(R);b(S,g+0,p,y),b(D,g+2,E,y),b(N,g+4,A,y)}}function b(p,E,A,R){R<0&&p.x===1&&(o[E]=p.x-1),A.x===0&&A.z===0&&(o[E]=R/2/Math.PI+.5)}function w(p){return Math.atan2(p.z,-p.x)}function v(p){return Math.atan2(-p.y,Math.sqrt(p.x*p.x+p.z*p.z))}}}class ad extends Ue{constructor(e,n){super();this.type="TetrahedronGeometry",this.parameters={radius:e,detail:n},this.fromBufferGeometry(new ll(e,n)),this.mergeVertices()}}class ll extends Ui{constructor(e,n){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,e,n);this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:n}}}class cd extends Ue{constructor(e,n){super();this.type="OctahedronGeometry",this.parameters={radius:e,detail:n},this.fromBufferGeometry(new ba(e,n)),this.mergeVertices()}}class ba extends Ui{constructor(e,n){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,e,n);this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:n}}}class ld extends Ue{constructor(e,n){super();this.type="IcosahedronGeometry",this.parameters={radius:e,detail:n},this.fromBufferGeometry(new ul(e,n)),this.mergeVertices()}}class ul extends Ui{constructor(e,n){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,n);this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:n}}}class ud extends Ue{constructor(e,n){super();this.type="DodecahedronGeometry",this.parameters={radius:e,detail:n},this.fromBufferGeometry(new hl(e,n)),this.mergeVertices()}}class hl extends Ui{constructor(e,n){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,n);this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:n}}}class hd extends Ue{constructor(e,n,i,r,s,o){super();this.type="TubeGeometry",this.parameters={path:e,tubularSegments:n,radius:i,radialSegments:r,closed:s},o!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");const a=new fl(e,n,i,r,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}}class fl extends xe{constructor(e,n,i,r,s){super();this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:n,radius:i,radialSegments:r,closed:s},n=n||64,i=i||1,r=r||8,s=s||!1;const o=e.computeFrenetFrames(n,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new C,c=new C,l=new Y;let h=new C;const u=[],f=[],d=[],m=[];b(),this.setIndex(m),this.setAttribute("position",new ie(u,3)),this.setAttribute("normal",new ie(f,3)),this.setAttribute("uv",new ie(d,2));function b(){for(let E=0;E<n;E++)w(E);w(s===!1?n:0),p(),v()}function w(E){h=e.getPointAt(E/n,h);const A=o.normals[E],R=o.binormals[E];for(let S=0;S<=r;S++){const D=S/r*Math.PI*2,N=Math.sin(D),U=-Math.cos(D);c.x=U*A.x+N*R.x,c.y=U*A.y+N*R.y,c.z=U*A.z+N*R.z,c.normalize(),f.push(c.x,c.y,c.z),a.x=h.x+i*c.x,a.y=h.y+i*c.y,a.z=h.z+i*c.z,u.push(a.x,a.y,a.z)}}function v(){for(let E=1;E<=n;E++)for(let A=1;A<=r;A++){const R=(r+1)*(E-1)+(A-1),S=(r+1)*E+(A-1),D=(r+1)*E+A,N=(r+1)*(E-1)+A;m.push(R,S,N),m.push(S,D,N)}}function p(){for(let E=0;E<=n;E++)for(let A=0;A<=r;A++)l.x=E/n,l.y=A/r,d.push(l.x,l.y)}}toJSON(){const e=xe.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class fd extends Ue{constructor(e,n,i,r,s,o,a){super();this.type="TorusKnotGeometry",this.parameters={radius:e,tube:n,tubularSegments:i,radialSegments:r,p:s,q:o},a!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new dl(e,n,i,r,s,o)),this.mergeVertices()}}class dl extends xe{constructor(e,n,i,r,s,o){super();this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:n,tubularSegments:i,radialSegments:r,p:s,q:o},e=e||1,n=n||.4,i=Math.floor(i)||64,r=Math.floor(r)||8,s=s||2,o=o||3;const a=[],c=[],l=[],h=[],u=new C,f=new C,d=new C,m=new C,b=new C,w=new C,v=new C;for(let E=0;E<=i;++E){const A=E/i*s*Math.PI*2;p(A,s,o,e,d),p(A+.01,s,o,e,m),w.subVectors(m,d),v.addVectors(m,d),b.crossVectors(w,v),v.crossVectors(b,w),b.normalize(),v.normalize();for(let R=0;R<=r;++R){const S=R/r*Math.PI*2,D=-n*Math.cos(S),N=n*Math.sin(S);u.x=d.x+(D*v.x+N*b.x),u.y=d.y+(D*v.y+N*b.y),u.z=d.z+(D*v.z+N*b.z),c.push(u.x,u.y,u.z),f.subVectors(u,d).normalize(),l.push(f.x,f.y,f.z),h.push(E/i),h.push(R/r)}}for(let E=1;E<=i;E++)for(let A=1;A<=r;A++){const R=(r+1)*(E-1)+(A-1),S=(r+1)*E+(A-1),D=(r+1)*E+A,N=(r+1)*(E-1)+A;a.push(R,S,N),a.push(S,D,N)}this.setIndex(a),this.setAttribute("position",new ie(c,3)),this.setAttribute("normal",new ie(l,3)),this.setAttribute("uv",new ie(h,2));function p(E,A,R,S,D){const N=Math.cos(E),U=Math.sin(E),g=R/A*E,y=Math.cos(g);D.x=S*(2+y)*.5*N,D.y=S*(2+y)*U*.5,D.z=S*Math.sin(g)*.5}}}class dd extends Ue{constructor(e,n,i,r,s){super();this.type="TorusGeometry",this.parameters={radius:e,tube:n,radialSegments:i,tubularSegments:r,arc:s},this.fromBufferGeometry(new pl(e,n,i,r,s)),this.mergeVertices()}}class pl extends xe{constructor(e,n,i,r,s){super();this.type="TorusBufferGeometry",this.parameters={radius:e,tube:n,radialSegments:i,tubularSegments:r,arc:s},e=e||1,n=n||.4,i=Math.floor(i)||8,r=Math.floor(r)||6,s=s||Math.PI*2;const o=[],a=[],c=[],l=[],h=new C,u=new C,f=new C;for(let d=0;d<=i;d++)for(let m=0;m<=r;m++){const b=m/r*s,w=d/i*Math.PI*2;u.x=(e+n*Math.cos(w))*Math.cos(b),u.y=(e+n*Math.cos(w))*Math.sin(b),u.z=n*Math.sin(w),a.push(u.x,u.y,u.z),h.x=e*Math.cos(b),h.y=e*Math.sin(b),f.subVectors(u,h).normalize(),c.push(f.x,f.y,f.z),l.push(m/r),l.push(d/i)}for(let d=1;d<=i;d++)for(let m=1;m<=r;m++){const b=(r+1)*d+m-1,w=(r+1)*(d-1)+m-1,v=(r+1)*(d-1)+m,p=(r+1)*d+m;o.push(b,w,p),o.push(w,v,p)}this.setIndex(o),this.setAttribute("position",new ie(a,3)),this.setAttribute("normal",new ie(c,3)),this.setAttribute("uv",new ie(l,2))}}const i0={triangulate:function(t,e,n){n=n||2;const i=e&&e.length,r=i?e[0]*n:t.length;let s=pd(t,0,r,n,!0);const o=[];if(!s||s.next===s.prev)return o;let a,c,l,h,u,f,d;if(i&&(s=c0(t,e,s,n)),t.length>80*n){a=l=t[0],c=h=t[1];for(let m=n;m<r;m+=n)u=t[m],f=t[m+1],u<a&&(a=u),f<c&&(c=f),u>l&&(l=u),f>h&&(h=f);d=Math.max(l-a,h-c),d=d!==0?1/d:0}return Ps(s,o,n,a,c,d),o}};function pd(t,e,n,i,r){let s,o;if(r===x0(t,e,n,i)>0)for(s=e;s<n;s+=i)o=Cu(s,t[s],t[s+1],o);else for(s=n-i;s>=e;s-=i)o=Cu(s,t[s],t[s+1],o);return o&&wa(o,o.next)&&(Ds(o),o=o.next),o}function ni(t,e){if(!t)return t;e||(e=t);let n=t,i;do if(i=!1,!n.steiner&&(wa(n,n.next)||Ke(n.prev,n,n.next)===0)){if(Ds(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function Ps(t,e,n,i,r,s,o){if(!t)return;!o&&s&&d0(t,i,r,s);let a=t,c,l;for(;t.prev!==t.next;){if(c=t.prev,l=t.next,s?s0(t,i,r,s):r0(t)){e.push(c.i/n),e.push(t.i/n),e.push(l.i/n),Ds(t),t=l.next,a=l.next;continue}if(t=l,t===a){o?o===1?(t=o0(ni(t),e,n),Ps(t,e,n,i,r,s,2)):o===2&&a0(t,e,n,i,r,s):Ps(ni(t),e,n,i,r,s,1);break}}}function r0(t){const e=t.prev,n=t,i=t.next;if(Ke(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(mr(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Ke(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function s0(t,e,n,i){const r=t.prev,s=t,o=t.next;if(Ke(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,c=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,l=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,h=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,u=Dc(a,c,e,n,i),f=Dc(l,h,e,n,i);let d=t.prevZ,m=t.nextZ;for(;d&&d.z>=u&&m&&m.z<=f;){if(d!==t.prev&&d!==t.next&&mr(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Ke(d.prev,d,d.next)>=0||(d=d.prevZ,m!==t.prev&&m!==t.next&&mr(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Ke(m.prev,m,m.next)>=0))return!1;m=m.nextZ}for(;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&mr(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Ke(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;m&&m.z<=f;){if(m!==t.prev&&m!==t.next&&mr(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Ke(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function o0(t,e,n){let i=t;do{const r=i.prev,s=i.next.next;!wa(r,s)&&md(r,i,i.next,s)&&Is(r,s)&&Is(s,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(s.i/n),Ds(i),Ds(i.next),i=t=s),i=i.next}while(i!==t);return ni(i)}function a0(t,e,n,i,r,s){let o=t;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&g0(o,a)){let c=gd(o,a);o=ni(o,o.next),c=ni(c,c.next),Ps(o,e,n,i,r,s),Ps(c,e,n,i,r,s);return}a=a.next}o=o.next}while(o!==t)}function c0(t,e,n,i){const r=[];let s,o,a,c,l;for(s=0,o=e.length;s<o;s++)a=e[s]*i,c=s<o-1?e[s+1]*i:t.length,l=pd(t,a,c,i,!1),l===l.next&&(l.steiner=!0),r.push(m0(l));for(r.sort(l0),s=0;s<r.length;s++)u0(r[s],n),n=ni(n,n.next);return n}function l0(t,e){return t.x-e.x}function u0(t,e){if(e=h0(t,e),e){const n=gd(e,t);ni(e,e.next),ni(n,n.next)}}function h0(t,e){let n=e;const i=t.x,r=t.y;let s=-1/0,o;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const f=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=i&&f>s){if(s=f,f===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!o)return null;if(i===s)return o;const a=o,c=o.x,l=o.y;let h=1/0,u;n=o;do i>=n.x&&n.x>=c&&i!==n.x&&mr(r<l?i:s,r,c,l,r<l?s:i,r,n.x,n.y)&&(u=Math.abs(r-n.y)/(i-n.x),Is(n,t)&&(u<h||u===h&&(n.x>o.x||n.x===o.x&&f0(o,n)))&&(o=n,h=u)),n=n.next;while(n!==a);return o}function f0(t,e){return Ke(t.prev,t,e.prev)<0&&Ke(e.next,t,t.next)<0}function d0(t,e,n,i){let r=t;do r.z===null&&(r.z=Dc(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,p0(r)}function p0(t){let e,n,i,r,s,o,a,c,l=1;do{for(n=t,t=null,s=null,o=0;n;){for(o++,i=n,a=0,e=0;e<l&&(a++,i=i.nextZ,!!i);e++);for(c=l;a>0||c>0&&i;)a!==0&&(c===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,c--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,l*=2}while(o>1);return t}function Dc(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function m0(t){let e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n}function mr(t,e,n,i,r,s,o,a){return(r-o)*(e-a)-(t-o)*(s-a)>=0&&(t-o)*(i-a)-(n-o)*(e-a)>=0&&(n-o)*(s-a)-(r-o)*(i-a)>=0}function g0(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!v0(t,e)&&(Is(t,e)&&Is(e,t)&&y0(t,e)&&(Ke(t.prev,t,e.prev)||Ke(t,e.prev,e))||wa(t,e)&&Ke(t.prev,t,t.next)>0&&Ke(e.prev,e,e.next)>0)}function Ke(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function wa(t,e){return t.x===e.x&&t.y===e.y}function md(t,e,n,i){const r=So(Ke(t,e,n)),s=So(Ke(t,e,i)),o=So(Ke(n,i,t)),a=So(Ke(n,i,e));return!!(r!==s&&o!==a||r===0&&Mo(t,n,e)||s===0&&Mo(t,i,e)||o===0&&Mo(n,t,i)||a===0&&Mo(n,e,i))}function Mo(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function So(t){return t>0?1:t<0?-1:0}function v0(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&md(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function Is(t,e){return Ke(t.prev,t,t.next)<0?Ke(t,e,t.next)>=0&&Ke(t,t.prev,e)>=0:Ke(t,e,t.prev)<0||Ke(t,t.next,e)<0}function y0(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function gd(t,e){const n=new Oc(t.i,t.x,t.y),i=new Oc(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function Cu(t,e,n,i){const r=new Oc(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Ds(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Oc(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function x0(t,e,n,i){let r=0;for(let s=e,o=n-i;s<n;s+=i)r+=(t[o]-t[s])*(t[s+1]+t[o+1]),o=s;return r}const Pn={area:function(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5},isClockWise:function(t){return Pn.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],r=[];Ru(t),Pu(n,t);let s=t.length;e.forEach(Ru);for(let a=0;a<e.length;a++)i.push(s),s+=e[a].length,Pu(n,e[a]);const o=i0.triangulate(n,i);for(let a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function Ru(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Pu(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class ml extends Ue{constructor(e,n){super();this.type="ExtrudeGeometry",this.parameters={shapes:e,options:n},this.fromBufferGeometry(new qs(e,n)),this.mergeVertices()}toJSON(){const e=super.toJSON(),n=this.parameters.shapes,i=this.parameters.options;return vd(n,i,e)}}class qs extends xe{constructor(e,n){super();this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:n},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let a=0,c=e.length;a<c;a++){const l=e[a];o(l)}this.setAttribute("position",new ie(r,3)),this.setAttribute("uv",new ie(s,2)),this.computeVertexNormals();function o(a){const c=[],l=n.curveSegments!==void 0?n.curveSegments:12,h=n.steps!==void 0?n.steps:1;let u=n.depth!==void 0?n.depth:100,f=n.bevelEnabled!==void 0?n.bevelEnabled:!0,d=n.bevelThickness!==void 0?n.bevelThickness:6,m=n.bevelSize!==void 0?n.bevelSize:d-2,b=n.bevelOffset!==void 0?n.bevelOffset:0,w=n.bevelSegments!==void 0?n.bevelSegments:3;const v=n.extrudePath,p=n.UVGenerator!==void 0?n.UVGenerator:_0;n.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),u=n.amount);let E,A=!1,R,S,D,N;v&&(E=v.getSpacedPoints(h),A=!0,f=!1,R=v.computeFrenetFrames(h,!1),S=new C,D=new C,N=new C),f||(w=0,d=0,m=0,b=0);const U=a.extractPoints(l);let g=U.shape;const y=U.holes;if(!Pn.isClockWise(g)){g=g.reverse();for(let J=0,Q=y.length;J<Q;J++){const te=y[J];Pn.isClockWise(te)&&(y[J]=te.reverse())}}const M=Pn.triangulateShape(g,y),_=g;for(let J=0,Q=y.length;J<Q;J++){const te=y[J];g=g.concat(te)}function T(J,Q,te){return Q||console.error("THREE.ExtrudeGeometry: vec does not exist"),Q.clone().multiplyScalar(te).add(J)}const L=g.length,I=M.length;function z(J,Q,te){let ge,le,P;const F=J.x-Q.x,$=J.y-Q.y,K=te.x-J.x,G=te.y-J.y,ee=F*F+$*$,ae=F*G-$*K;if(Math.abs(ae)>Number.EPSILON){const ve=Math.sqrt(ee),re=Math.sqrt(K*K+G*G),B=Q.x-$/ve,ne=Q.y+F/ve,pe=te.x-G/re,se=te.y+K/re,_e=((pe-B)*G-(se-ne)*K)/(F*G-$*K);ge=B+F*_e-J.x,le=ne+$*_e-J.y;const He=ge*ge+le*le;if(He<=2)return new Y(ge,le);P=Math.sqrt(He/2)}else{let ve=!1;F>Number.EPSILON?K>Number.EPSILON&&(ve=!0):F<-Number.EPSILON?K<-Number.EPSILON&&(ve=!0):Math.sign($)===Math.sign(G)&&(ve=!0),ve?(ge=-$,le=F,P=Math.sqrt(ee)):(ge=F,le=$,P=Math.sqrt(ee/2))}return new Y(ge/P,le/P)}const V=[];for(let J=0,Q=_.length,te=Q-1,ge=J+1;J<Q;J++,te++,ge++)te===Q&&(te=0),ge===Q&&(ge=0),V[J]=z(_[J],_[te],_[ge]);const H=[];let k,Z=V.concat();for(let J=0,Q=y.length;J<Q;J++){const te=y[J];k=[];for(let ge=0,le=te.length,P=le-1,F=ge+1;ge<le;ge++,P++,F++)P===le&&(P=0),F===le&&(F=0),k[ge]=z(te[ge],te[P],te[F]);H.push(k),Z=Z.concat(k)}for(let J=0;J<w;J++){const Q=J/w,te=d*Math.cos(Q*Math.PI/2),ge=m*Math.sin(Q*Math.PI/2)+b;for(let le=0,P=_.length;le<P;le++){const F=T(_[le],V[le],ge);de(F.x,F.y,-te)}for(let le=0,P=y.length;le<P;le++){const F=y[le];k=H[le];for(let $=0,K=F.length;$<K;$++){const G=T(F[$],k[$],ge);de(G.x,G.y,-te)}}}const ce=m+b;for(let J=0;J<L;J++){const Q=f?T(g[J],Z[J],ce):g[J];A?(D.copy(R.normals[0]).multiplyScalar(Q.x),S.copy(R.binormals[0]).multiplyScalar(Q.y),N.copy(E[0]).add(D).add(S),de(N.x,N.y,N.z)):de(Q.x,Q.y,0)}for(let J=1;J<=h;J++)for(let Q=0;Q<L;Q++){const te=f?T(g[Q],Z[Q],ce):g[Q];A?(D.copy(R.normals[J]).multiplyScalar(te.x),S.copy(R.binormals[J]).multiplyScalar(te.y),N.copy(E[J]).add(D).add(S),de(N.x,N.y,N.z)):de(te.x,te.y,u/h*J)}for(let J=w-1;J>=0;J--){const Q=J/w,te=d*Math.cos(Q*Math.PI/2),ge=m*Math.sin(Q*Math.PI/2)+b;for(let le=0,P=_.length;le<P;le++){const F=T(_[le],V[le],ge);de(F.x,F.y,u+te)}for(let le=0,P=y.length;le<P;le++){const F=y[le];k=H[le];for(let $=0,K=F.length;$<K;$++){const G=T(F[$],k[$],ge);A?de(G.x,G.y+E[h-1].y,E[h-1].x+te):de(G.x,G.y,u+te)}}}Ee(),j();function Ee(){const J=r.length/3;if(f){let Q=0,te=L*Q;for(let ge=0;ge<I;ge++){const le=M[ge];Te(le[2]+te,le[1]+te,le[0]+te)}Q=h+w*2,te=L*Q;for(let ge=0;ge<I;ge++){const le=M[ge];Te(le[0]+te,le[1]+te,le[2]+te)}}else{for(let Q=0;Q<I;Q++){const te=M[Q];Te(te[2],te[1],te[0])}for(let Q=0;Q<I;Q++){const te=M[Q];Te(te[0]+L*h,te[1]+L*h,te[2]+L*h)}}i.addGroup(J,r.length/3-J,0)}function j(){const J=r.length/3;let Q=0;Pe(_,Q),Q+=_.length;for(let te=0,ge=y.length;te<ge;te++){const le=y[te];Pe(le,Q),Q+=le.length}i.addGroup(J,r.length/3-J,1)}function Pe(J,Q){let te=J.length;for(;--te>=0;){const ge=te;let le=te-1;le<0&&(le=J.length-1);for(let P=0,F=h+w*2;P<F;P++){const $=L*P,K=L*(P+1),G=Q+ge+$,ee=Q+le+$,ae=Q+le+K,ve=Q+ge+K;Me(G,ee,ae,ve)}}}function de(J,Q,te){c.push(J),c.push(Q),c.push(te)}function Te(J,Q,te){Ie(J),Ie(Q),Ie(te);const ge=r.length/3,le=p.generateTopUV(i,r,ge-3,ge-2,ge-1);Ae(le[0]),Ae(le[1]),Ae(le[2])}function Me(J,Q,te,ge){Ie(J),Ie(Q),Ie(ge),Ie(Q),Ie(te),Ie(ge);const le=r.length/3,P=p.generateSideWallUV(i,r,le-6,le-3,le-2,le-1);Ae(P[0]),Ae(P[1]),Ae(P[3]),Ae(P[1]),Ae(P[2]),Ae(P[3])}function Ie(J){r.push(c[J*3+0]),r.push(c[J*3+1]),r.push(c[J*3+2])}function Ae(J){s.push(J.x),s.push(J.y)}}}toJSON(){const e=xe.prototype.toJSON.call(this),n=this.parameters.shapes,i=this.parameters.options;return vd(n,i,e)}}const _0={generateTopUV:function(t,e,n,i,r){const s=e[n*3],o=e[n*3+1],a=e[i*3],c=e[i*3+1],l=e[r*3],h=e[r*3+1];return[new Y(s,o),new Y(a,c),new Y(l,h)]},generateSideWallUV:function(t,e,n,i,r,s){const o=e[n*3],a=e[n*3+1],c=e[n*3+2],l=e[i*3],h=e[i*3+1],u=e[i*3+2],f=e[r*3],d=e[r*3+1],m=e[r*3+2],b=e[s*3],w=e[s*3+1],v=e[s*3+2];return Math.abs(a-h)<.01?[new Y(o,1-c),new Y(l,1-u),new Y(f,1-m),new Y(b,1-v)]:[new Y(a,1-c),new Y(h,1-u),new Y(d,1-m),new Y(w,1-v)]}};function vd(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const s=t[i];n.shapes.push(s.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class yd extends Ue{constructor(e,n){super();this.type="TextGeometry",this.parameters={text:e,parameters:n},this.fromBufferGeometry(new gl(e,n)),this.mergeVertices()}}class gl extends qs{constructor(e,n){n=n||{};const i=n.font;if(!(i&&i.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Ue;const r=i.generateShapes(e,n.size);n.depth=n.height!==void 0?n.height:50,n.bevelThickness===void 0&&(n.bevelThickness=10),n.bevelSize===void 0&&(n.bevelSize=8),n.bevelEnabled===void 0&&(n.bevelEnabled=!1);super(r,n);this.type="TextBufferGeometry"}}class xd extends Ue{constructor(e,n,i,r,s,o,a){super();this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new Ma(e,n,i,r,s,o,a)),this.mergeVertices()}}class Ma extends xe{constructor(e,n,i,r,s,o,a){super();this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},e=e||1,n=Math.max(3,Math.floor(n)||8),i=Math.max(2,Math.floor(i)||6),r=r!==void 0?r:0,s=s!==void 0?s:Math.PI*2,o=o!==void 0?o:0,a=a!==void 0?a:Math.PI;const c=Math.min(o+a,Math.PI);let l=0;const h=[],u=new C,f=new C,d=[],m=[],b=[],w=[];for(let v=0;v<=i;v++){const p=[],E=v/i;let A=0;v==0&&o==0?A=.5/n:v==i&&c==Math.PI&&(A=-.5/n);for(let R=0;R<=n;R++){const S=R/n;u.x=-e*Math.cos(r+S*s)*Math.sin(o+E*a),u.y=e*Math.cos(o+E*a),u.z=e*Math.sin(r+S*s)*Math.sin(o+E*a),m.push(u.x,u.y,u.z),f.copy(u).normalize(),b.push(f.x,f.y,f.z),w.push(S+A,1-E),p.push(l++)}h.push(p)}for(let v=0;v<i;v++)for(let p=0;p<n;p++){const E=h[v][p+1],A=h[v][p],R=h[v+1][p],S=h[v+1][p+1];(v!==0||o>0)&&d.push(E,A,S),(v!==i-1||c<Math.PI)&&d.push(A,R,S)}this.setIndex(d),this.setAttribute("position",new ie(m,3)),this.setAttribute("normal",new ie(b,3)),this.setAttribute("uv",new ie(w,2))}}class _d extends Ue{constructor(e,n,i,r,s,o){super();this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:n,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new vl(e,n,i,r,s,o)),this.mergeVertices()}}class vl extends xe{constructor(e,n,i,r,s,o){super();this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:n,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:o},e=e||.5,n=n||1,s=s!==void 0?s:0,o=o!==void 0?o:Math.PI*2,i=i!==void 0?Math.max(3,i):8,r=r!==void 0?Math.max(1,r):1;const a=[],c=[],l=[],h=[];let u=e;const f=(n-e)/r,d=new C,m=new Y;for(let b=0;b<=r;b++){for(let w=0;w<=i;w++){const v=s+w/i*o;d.x=u*Math.cos(v),d.y=u*Math.sin(v),c.push(d.x,d.y,d.z),l.push(0,0,1),m.x=(d.x/n+1)/2,m.y=(d.y/n+1)/2,h.push(m.x,m.y)}u+=f}for(let b=0;b<r;b++){const w=b*(i+1);for(let v=0;v<i;v++){const p=v+w,E=p,A=p+i+1,R=p+i+2,S=p+1;a.push(E,A,S),a.push(A,R,S)}}this.setIndex(a),this.setAttribute("position",new ie(c,3)),this.setAttribute("normal",new ie(l,3)),this.setAttribute("uv",new ie(h,2))}}class bd extends Ue{constructor(e,n,i,r){super();this.type="LatheGeometry",this.parameters={points:e,segments:n,phiStart:i,phiLength:r},this.fromBufferGeometry(new yl(e,n,i,r)),this.mergeVertices()}}class yl extends xe{constructor(e,n,i,r){super();this.type="LatheBufferGeometry",this.parameters={points:e,segments:n,phiStart:i,phiLength:r},n=Math.floor(n)||12,i=i||0,r=r||Math.PI*2,r=be.clamp(r,0,Math.PI*2);const s=[],o=[],a=[],c=1/n,l=new C,h=new Y;for(let u=0;u<=n;u++){const f=i+u*c*r,d=Math.sin(f),m=Math.cos(f);for(let b=0;b<=e.length-1;b++)l.x=e[b].x*d,l.y=e[b].y,l.z=e[b].x*m,o.push(l.x,l.y,l.z),h.x=u/n,h.y=b/(e.length-1),a.push(h.x,h.y)}for(let u=0;u<n;u++)for(let f=0;f<e.length-1;f++){const d=f+u*e.length,m=d,b=d+e.length,w=d+e.length+1,v=d+1;s.push(m,b,v),s.push(b,w,v)}if(this.setIndex(s),this.setAttribute("position",new ie(o,3)),this.setAttribute("uv",new ie(a,2)),this.computeVertexNormals(),r===Math.PI*2){const u=this.attributes.normal.array,f=new C,d=new C,m=new C,b=n*e.length*3;for(let w=0,v=0;w<e.length;w++,v+=3)f.x=u[v+0],f.y=u[v+1],f.z=u[v+2],d.x=u[b+v+0],d.y=u[b+v+1],d.z=u[b+v+2],m.addVectors(f,d).normalize(),u[v+0]=u[b+v+0]=m.x,u[v+1]=u[b+v+1]=m.y,u[v+2]=u[b+v+2]=m.z}}}class xl extends Ue{constructor(e,n){super();this.type="ShapeGeometry",typeof n=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),n=n.curveSegments),this.parameters={shapes:e,curveSegments:n},this.fromBufferGeometry(new _l(e,n)),this.mergeVertices()}toJSON(){const e=Ue.prototype.toJSON.call(this),n=this.parameters.shapes;return wd(n,e)}}class _l extends xe{constructor(e,n){super();this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:n},n=n||12;const i=[],r=[],s=[],o=[];let a=0,c=0;if(Array.isArray(e)===!1)l(e);else for(let h=0;h<e.length;h++)l(e[h]),this.addGroup(a,c,h),a+=c,c=0;this.setIndex(i),this.setAttribute("position",new ie(r,3)),this.setAttribute("normal",new ie(s,3)),this.setAttribute("uv",new ie(o,2));function l(h){const u=r.length/3,f=h.extractPoints(n);let d=f.shape;const m=f.holes;Pn.isClockWise(d)===!1&&(d=d.reverse());for(let w=0,v=m.length;w<v;w++){const p=m[w];Pn.isClockWise(p)===!0&&(m[w]=p.reverse())}const b=Pn.triangulateShape(d,m);for(let w=0,v=m.length;w<v;w++){const p=m[w];d=d.concat(p)}for(let w=0,v=d.length;w<v;w++){const p=d[w];r.push(p.x,p.y,0),s.push(0,0,1),o.push(p.x,p.y)}for(let w=0,v=b.length;w<v;w++){const p=b[w],E=p[0]+u,A=p[1]+u,R=p[2]+u;i.push(E,A,R),c+=3}}}toJSON(){const e=xe.prototype.toJSON.call(this),n=this.parameters.shapes;return wd(n,e)}}function wd(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}class bl extends xe{constructor(e,n){super();this.type="EdgesGeometry",this.parameters={thresholdAngle:n},n=n!==void 0?n:1;const i=[],r=Math.cos(be.DEG2RAD*n),s=[0,0],o={};let a,c,l;const h=["a","b","c"];let u;e.isBufferGeometry?(u=new Ue,u.fromBufferGeometry(e)):u=e.clone(),u.mergeVertices(),u.computeFaceNormals();const f=u.vertices,d=u.faces;for(let m=0,b=d.length;m<b;m++){const w=d[m];for(let v=0;v<3;v++)a=w[h[v]],c=w[h[(v+1)%3]],s[0]=Math.min(a,c),s[1]=Math.max(a,c),l=s[0]+","+s[1],o[l]===void 0?o[l]={index1:s[0],index2:s[1],face1:m,face2:void 0}:o[l].face2=m}for(l in o){const m=o[l];if(m.face2===void 0||d[m.face1].normal.dot(d[m.face2].normal)<=r){let b=f[m.index1];i.push(b.x,b.y,b.z),b=f[m.index2],i.push(b.x,b.y,b.z)}}this.setAttribute("position",new ie(i,3))}}class wl extends Ue{constructor(e,n,i,r,s,o,a,c){super();this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:n,height:i,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:c},this.fromBufferGeometry(new Xs(e,n,i,r,s,o,a,c)),this.mergeVertices()}}class Xs extends xe{constructor(e,n,i,r,s,o,a,c){super();this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:n,height:i,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:c};const l=this;e=e!==void 0?e:1,n=n!==void 0?n:1,i=i||1,r=Math.floor(r)||8,s=Math.floor(s)||1,o=o!==void 0?o:!1,a=a!==void 0?a:0,c=c!==void 0?c:Math.PI*2;const h=[],u=[],f=[],d=[];let m=0;const b=[],w=i/2;let v=0;p(),o===!1&&(e>0&&E(!0),n>0&&E(!1)),this.setIndex(h),this.setAttribute("position",new ie(u,3)),this.setAttribute("normal",new ie(f,3)),this.setAttribute("uv",new ie(d,2));function p(){const A=new C,R=new C;let S=0;const D=(n-e)/i;for(let N=0;N<=s;N++){const U=[],g=N/s,y=g*(n-e)+e;for(let x=0;x<=r;x++){const M=x/r,_=M*c+a,T=Math.sin(_),L=Math.cos(_);R.x=y*T,R.y=-g*i+w,R.z=y*L,u.push(R.x,R.y,R.z),A.set(T,D,L).normalize(),f.push(A.x,A.y,A.z),d.push(M,1-g),U.push(m++)}b.push(U)}for(let N=0;N<r;N++)for(let U=0;U<s;U++){const g=b[U][N],y=b[U+1][N],x=b[U+1][N+1],M=b[U][N+1];h.push(g,y,M),h.push(y,x,M),S+=6}l.addGroup(v,S,0),v+=S}function E(A){const R=m,S=new Y,D=new C;let N=0;const U=A===!0?e:n,g=A===!0?1:-1;for(let x=1;x<=r;x++)u.push(0,w*g,0),f.push(0,g,0),d.push(.5,.5),m++;const y=m;for(let x=0;x<=r;x++){const _=x/r*c+a,T=Math.cos(_),L=Math.sin(_);D.x=U*L,D.y=w*g,D.z=U*T,u.push(D.x,D.y,D.z),f.push(0,g,0),S.x=T*.5+.5,S.y=L*.5*g+.5,d.push(S.x,S.y),m++}for(let x=0;x<r;x++){const M=R+x,_=y+x;A===!0?h.push(_,_+1,M):h.push(_+1,_,M),N+=3}l.addGroup(v,N,A===!0?1:2),v+=N}}}class Md extends wl{constructor(e,n,i,r,s,o,a){super(0,e,n,i,r,s,o,a);this.type="ConeGeometry",this.parameters={radius:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}}class Sd extends Xs{constructor(e,n,i,r,s,o,a){super(0,e,n,i,r,s,o,a);this.type="ConeBufferGeometry",this.parameters={radius:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}}class Td extends Ue{constructor(e,n,i,r){super();this.type="CircleGeometry",this.parameters={radius:e,segments:n,thetaStart:i,thetaLength:r},this.fromBufferGeometry(new Ml(e,n,i,r)),this.mergeVertices()}}class Ml extends xe{constructor(e,n,i,r){super();this.type="CircleBufferGeometry",this.parameters={radius:e,segments:n,thetaStart:i,thetaLength:r},e=e||1,n=n!==void 0?Math.max(3,n):8,i=i!==void 0?i:0,r=r!==void 0?r:Math.PI*2;const s=[],o=[],a=[],c=[],l=new C,h=new Y;o.push(0,0,0),a.push(0,0,1),c.push(.5,.5);for(let u=0,f=3;u<=n;u++,f+=3){const d=i+u/n*r;l.x=e*Math.cos(d),l.y=e*Math.sin(d),o.push(l.x,l.y,l.z),a.push(0,0,1),h.x=(o[f]/e+1)/2,h.y=(o[f+1]/e+1)/2,c.push(h.x,h.y)}for(let u=1;u<=n;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new ie(o,3)),this.setAttribute("normal",new ie(a,3)),this.setAttribute("uv",new ie(c,2))}}var _t=Object.freeze({__proto__:null,WireframeGeometry:cl,ParametricGeometry:Rs,ParametricBufferGeometry:Cr,TetrahedronGeometry:ad,TetrahedronBufferGeometry:ll,OctahedronGeometry:cd,OctahedronBufferGeometry:ba,IcosahedronGeometry:ld,IcosahedronBufferGeometry:ul,DodecahedronGeometry:ud,DodecahedronBufferGeometry:hl,PolyhedronGeometry:od,PolyhedronBufferGeometry:Ui,TubeGeometry:hd,TubeBufferGeometry:fl,TorusKnotGeometry:fd,TorusKnotBufferGeometry:dl,TorusGeometry:dd,TorusBufferGeometry:pl,TextGeometry:yd,TextBufferGeometry:gl,SphereGeometry:xd,SphereBufferGeometry:Ma,RingGeometry:_d,RingBufferGeometry:vl,PlaneGeometry:Yf,PlaneBufferGeometry:va,LatheGeometry:bd,LatheBufferGeometry:yl,ShapeGeometry:xl,ShapeBufferGeometry:_l,ExtrudeGeometry:ml,ExtrudeBufferGeometry:qs,EdgesGeometry:bl,ConeGeometry:Md,ConeBufferGeometry:Sd,CylinderGeometry:wl,CylinderBufferGeometry:Xs,CircleGeometry:Td,CircleBufferGeometry:Ml,BoxGeometry:Lc,BoxBufferGeometry:Ws});function Ti(t){Se.call(this),this.type="ShadowMaterial",this.color=new oe(0),this.transparent=!0,this.setValues(t)}Ti.prototype=Object.create(Se.prototype);Ti.prototype.constructor=Ti;Ti.prototype.isShadowMaterial=!0;Ti.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.color.copy(t.color),this};function Dn(t){wt.call(this,t),this.type="RawShaderMaterial"}Dn.prototype=Object.create(wt.prototype);Dn.prototype.constructor=Dn;Dn.prototype.isRawShaderMaterial=!0;function dn(t){Se.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new oe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ni,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}dn.prototype=Object.create(Se.prototype);dn.prototype.constructor=dn;dn.prototype.isMeshStandardMaterial=!0;dn.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this};function On(t){dn.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Y(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}On.prototype=Object.create(dn.prototype);On.prototype.constructor=On;On.prototype.isMeshPhysicalMaterial=!0;On.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new oe).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};function Ot(t){Se.call(this),this.type="MeshPhongMaterial",this.color=new oe(16777215),this.specular=new oe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ni,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Br,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Ot.prototype=Object.create(Se.prototype);Ot.prototype.constructor=Ot;Ot.prototype.isMeshPhongMaterial=!0;Ot.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Ei(t){Se.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new oe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ni,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Ei.prototype=Object.create(Se.prototype);Ei.prototype.constructor=Ei;Ei.prototype.isMeshToonMaterial=!0;Ei.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Ai(t){Se.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ni,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Ai.prototype=Object.create(Se.prototype);Ai.prototype.constructor=Ai;Ai.prototype.isMeshNormalMaterial=!0;Ai.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Fn(t){Se.call(this),this.type="MeshLambertMaterial",this.color=new oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Br,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Fn.prototype=Object.create(Se.prototype);Fn.prototype.constructor=Fn;Fn.prototype.isMeshLambertMaterial=!0;Fn.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Li(t){Se.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new oe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ni,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Li.prototype=Object.create(Se.prototype);Li.prototype.constructor=Li;Li.prototype.isMeshMatcapMaterial=!0;Li.prototype.copy=function(t){return Se.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Ci(t){Je.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Ci.prototype=Object.create(Je.prototype);Ci.prototype.constructor=Ci;Ci.prototype.isLineDashedMaterial=!0;Ci.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var b0=Object.freeze({__proto__:null,ShadowMaterial:Ti,SpriteMaterial:ti,RawShaderMaterial:Dn,ShaderMaterial:wt,PointsMaterial:Qt,MeshPhysicalMaterial:On,MeshStandardMaterial:dn,MeshPhongMaterial:Ot,MeshToonMaterial:Ei,MeshNormalMaterial:Ai,MeshLambertMaterial:Fn,MeshDepthMaterial:$n,MeshDistanceMaterial:Qn,MeshBasicMaterial:kt,MeshMatcapMaterial:Li,LineDashedMaterial:Ci,LineBasicMaterial:Je,Material:Se});const Ye={arraySlice:function(t,e,n){return Ye.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(r,s){return t[r]-t[s]}const n=t.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(e),i},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,o=0;o!==i;++s){const a=n[s]*e;for(let c=0;c!==e;++c)r[o++]=t[a+c]}return r},flattenJSON:function(t,e,n,i){let r=1,s=t[0];for(;s!==void 0&&s[i]===void 0;)s=t[r++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(e.push(s.time),n.push.apply(n,o)),s=t[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(e.push(s.time),o.toArray(n,n.length)),s=t[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(e.push(s.time),n.push(o)),s=t[r++];while(s!==void 0)},subclip:function(t,e,n,i,r){r=r||30;const s=t.clone();s.name=e;const o=[];for(let c=0;c<s.tracks.length;++c){const l=s.tracks[c],h=l.getValueSize(),u=[],f=[];for(let d=0;d<l.times.length;++d){const m=l.times[d]*r;if(!(m<n||m>=i)){u.push(l.times[d]);for(let b=0;b<h;++b)f.push(l.values[d*h+b])}}u.length!==0&&(l.times=Ye.convertArray(u,l.times.constructor),l.values=Ye.convertArray(f,l.values.constructor),o.push(l))}s.tracks=o;let a=1/0;for(let c=0;c<s.tracks.length;++c)a>s.tracks[c].times[0]&&(a=s.tracks[c].times[0]);for(let c=0;c<s.tracks.length;++c)s.tracks[c].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(t,e,n,i){e===void 0&&(e=0),n===void 0&&(n=t),(i===void 0||i<=0)&&(i=30);const r=t.tracks.length,s=e/i;for(let o=0;o<r;++o){const a=n.tracks[o],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const l=t.tracks.find(function(v){return v.name===a.name&&v.ValueTypeName===c});if(l===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let f=0;const d=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const m=a.times.length-1;let b;if(s<=a.times[0]){const v=h,p=u-h;b=Ye.arraySlice(a.values,v,p)}else if(s>=a.times[m]){const v=m*u+h,p=v+u-h;b=Ye.arraySlice(a.values,v,p)}else{const v=a.createInterpolant(),p=h,E=u-h;v.evaluate(s),b=Ye.arraySlice(v.resultBuffer,p,E)}c==="quaternion"&&new st().fromArray(b).normalize().conjugate().toArray(b);const w=l.times.length;for(let v=0;v<w;++v){const p=v*d+f;if(c==="quaternion")st.multiplyQuaternionsFlat(l.values,p,b,0,l.values,p);else{const E=d-f*2;for(let A=0;A<E;++A)l.values[p+A]-=b[A]}}}return t.blendMode=il,t}};function Ft(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}Object.assign(Ft.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];e:{t:{let s;n:{i:if(!(t<i)){for(let o=n+2;;){if(i===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===o)break;if(r=i,i=e[++n],t<i)break t}s=e.length;break n}if(!(t>=r)){const o=e[1];t<o&&(n=2,r=o);for(let a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===a)break;if(i=r,r=e[--n-1],t>=r)break t}s=n,n=0;break n}break e}for(;n<s;){const o=n+s>>>1;t<e[o]?s=o:n=o+1}if(i=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(i===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let s=0;s!==i;++s)e[s]=n[r+s];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(Ft.prototype,{beforeStart_:Ft.prototype.copySampleValue_,afterEnd_:Ft.prototype.copySampleValue_});function Zo(t,e,n,i){Ft.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}Zo.prototype=Object.assign(Object.create(Ft.prototype),{constructor:Zo,DefaultSettings_:{endingStart:vi,endingEnd:vi},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let r=t-2,s=t+1,o=i[r],a=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case yi:r=t,o=2*e-n;break;case ms:r=i.length-2,o=e+i[r]-i[r+1];break;default:r=t,o=n}if(a===void 0)switch(this.getSettings_().endingEnd){case yi:s=t,a=2*n-e;break;case ms:s=1,a=n+i[1]-i[0];break;default:s=t-1,a=e}const c=(n-e)*.5,l=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(a-n),this._offsetPrev=r*l,this._offsetNext=s*l},interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,c=a-o,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,f=this._weightNext,d=(n-e)/(i-e),m=d*d,b=m*d,w=-u*b+2*u*m-u*d,v=(1+u)*b+(-1.5-2*u)*m+(-.5+u)*d+1,p=(-1-f)*b+(1.5+f)*m+.5*d,E=f*b-f*m;for(let A=0;A!==o;++A)r[A]=w*s[l+A]+v*s[c+A]+p*s[a+A]+E*s[h+A];return r}});function Os(t,e,n,i){Ft.call(this,t,e,n,i)}Os.prototype=Object.assign(Object.create(Ft.prototype),{constructor:Os,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,c=a-o,l=(n-e)/(i-e),h=1-l;for(let u=0;u!==o;++u)r[u]=s[c+u]*h+s[a+u]*l;return r}});function Jo(t,e,n,i){Ft.call(this,t,e,n,i)}Jo.prototype=Object.assign(Object.create(Ft.prototype),{constructor:Jo,interpolate_:function(t){return this.copySampleValue_(t-1)}});function mt(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Ye.convertArray(e,this.TimeBufferType),this.values=Ye.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(mt,{toJSON:function(t){const e=t.constructor;let n;if(e.toJSON!==void 0)n=e.toJSON(t);else{n={name:t.name,times:Ye.convertArray(t.times,Array),values:Ye.convertArray(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}});Object.assign(mt.prototype,{constructor:mt,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:rs,InterpolantFactoryMethodDiscrete:function(t){return new Jo(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new Os(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Zo(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case ps:e=this.InterpolantFactoryMethodDiscrete;break;case rs:e=this.InterpolantFactoryMethodLinear;break;case Go:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ps;case this.InterpolantFactoryMethodLinear:return rs;case this.InterpolantFactoryMethodSmooth:return Go}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this},scale:function(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this},trim:function(t,e){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<t;)++r;for(;s!==-1&&n[s]>e;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const o=this.getValueSize();this.times=Ye.arraySlice(n,r,s),this.values=Ye.arraySlice(this.values,r*o,s*o)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let o=0;o!==r;o++){const a=n[o];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,a),t=!1;break}if(s!==null&&s>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,a,s),t=!1;break}s=a}if(i!==void 0&&Ye.isTypedArray(i))for(let o=0,a=i.length;o!==a;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),t=!1;break}}return t},optimize:function(){const t=Ye.arraySlice(this.times),e=Ye.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===Go,r=t.length-1;let s=1;for(let o=1;o<r;++o){let a=!1;const c=t[o],l=t[o+1];if(c!==l&&(o!==1||c!==c[0]))if(i)a=!0;else{const h=o*n,u=h-n,f=h+n;for(let d=0;d!==n;++d){const m=e[h+d];if(m!==e[u+d]||m!==e[f+d]){a=!0;break}}}if(a){if(o!==s){t[s]=t[o];const h=o*n,u=s*n;for(let f=0;f!==n;++f)e[u+f]=e[h+f]}++s}}if(r>0){t[s]=t[r];for(let o=r*n,a=s*n,c=0;c!==n;++c)e[a+c]=e[o+c];++s}return s!==t.length?(this.times=Ye.arraySlice(t,0,s),this.values=Ye.arraySlice(e,0,s*n)):(this.times=t,this.values=e),this},clone:function(){const t=Ye.arraySlice(this.times,0),e=Ye.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}});function Ko(t,e,n){mt.call(this,t,e,n)}Ko.prototype=Object.assign(Object.create(mt.prototype),{constructor:Ko,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:ps,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function $o(t,e,n,i){mt.call(this,t,e,n,i)}$o.prototype=Object.assign(Object.create(mt.prototype),{constructor:$o,ValueTypeName:"color"});function Ri(t,e,n,i){mt.call(this,t,e,n,i)}Ri.prototype=Object.assign(Object.create(mt.prototype),{constructor:Ri,ValueTypeName:"number"});function Qo(t,e,n,i){Ft.call(this,t,e,n,i)}Qo.prototype=Object.assign(Object.create(Ft.prototype),{constructor:Qo,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-e)/(i-e);let c=t*o;for(let l=c+o;c!==l;c+=4)st.slerpFlat(r,0,s,c-o,s,c,a);return r}});function Rr(t,e,n,i){mt.call(this,t,e,n,i)}Rr.prototype=Object.assign(Object.create(mt.prototype),{constructor:Rr,ValueTypeName:"quaternion",DefaultInterpolation:rs,InterpolantFactoryMethodLinear:function(t){return new Qo(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0});function ea(t,e,n,i){mt.call(this,t,e,n,i)}ea.prototype=Object.assign(Object.create(mt.prototype),{constructor:ea,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:ps,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Pi(t,e,n,i){mt.call(this,t,e,n,i)}Pi.prototype=Object.assign(Object.create(mt.prototype),{constructor:Pi,ValueTypeName:"vector"});function Rt(t,e,n,i){this.name=t,this.tracks=n,this.duration=e!==void 0?e:-1,this.blendMode=i!==void 0?i:pa,this.uuid=be.generateUUID(),this.duration<0&&this.resetDuration()}function w0(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ri;case"vector":case"vector2":case"vector3":case"vector4":return Pi;case"color":return $o;case"quaternion":return Rr;case"bool":case"boolean":return Ko;case"string":return ea}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function M0(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=w0(t.type);if(t.times===void 0){const n=[],i=[];Ye.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Rt,{parse:function(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let r=0,s=n.length;r!==s;++r)e.push(M0(n[r]).scale(i));return new Rt(t.name,t.duration,e,t.blendMode)},toJSON:function(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let r=0,s=n.length;r!==s;++r)e.push(mt.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){const r=e.length,s=[];for(let o=0;o<r;o++){let a=[],c=[];a.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);const l=Ye.getKeyframeOrder(a);a=Ye.sortedArray(a,1,l),c=Ye.sortedArray(c,1,l),!i&&a[0]===0&&(a.push(r),c.push(c[0])),s.push(new Ri(".morphTargetInfluences["+e[o].name+"]",a,c).scale(1/n))}return new Rt(t,-1,s)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,a=t.length;o<a;o++){const c=t[o],l=c.name.match(r);if(l&&l.length>1){const h=l[1];let u=i[h];u||(i[h]=u=[]),u.push(c)}}const s=[];for(const o in i)s.push(Rt.CreateFromMorphTargetSequence(o,i[o],e,n));return s},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,u,f,d,m){if(f.length!==0){const b=[],w=[];Ye.flattenJSON(f,b,w,d),b.length!==0&&m.push(new h(u,b,w))}},i=[],r=t.name||"default",s=t.fps||30,o=t.blendMode;let a=t.length||-1;const c=t.hierarchy||[];for(let h=0;h<c.length;h++){const u=c[h].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const f={};let d;for(d=0;d<u.length;d++)if(u[d].morphTargets)for(let m=0;m<u[d].morphTargets.length;m++)f[u[d].morphTargets[m]]=-1;for(const m in f){const b=[],w=[];for(let v=0;v!==u[d].morphTargets.length;++v){const p=u[d];b.push(p.time),w.push(p.morphTarget===m?1:0)}i.push(new Ri(".morphTargetInfluence["+m+"]",b,w))}a=f.length*(s||1)}else{const f=".bones["+e[h].name+"]";n(Pi,f+".position",u,"pos",i),n(Rr,f+".quaternion",u,"rot",i),n(Pi,f+".scale",u,"scl",i)}}return i.length===0?null:new Rt(r,a,i,o)}});Object.assign(Rt.prototype,{resetDuration:function(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new Rt(this.name,this.duration,t,this.blendMode)}});const Ii={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Sa(t,e,n){const i=this;let r=!1,s=0,o=0,a;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(l){o++,r===!1&&i.onStart!==void 0&&i.onStart(l,s,o),r=!0},this.itemEnd=function(l){s++,i.onProgress!==void 0&&i.onProgress(l,s,o),s===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)},this.resolveURL=function(l){return a?a(l):l},this.setURLModifier=function(l){return a=l,this},this.addHandler=function(l,h){return c.push(l,h),this},this.removeHandler=function(l){const h=c.indexOf(l);return h!==-1&&c.splice(h,2),this},this.getHandler=function(l){for(let h=0,u=c.length;h<u;h+=2){const f=c[h],d=c[h+1];if(f.global&&(f.lastIndex=0),f.test(l))return d}return null}}const Ed=new Sa;function Ne(t){this.manager=t!==void 0?t:Ed,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Ne.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Yt={};function Ut(t){Ne.call(this,t)}Ut.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Ut,load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Ii.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;if(Yt[t]!==void 0){Yt[t].push({onLoad:e,onProgress:n,onError:i});return}const o=/^data:(.*?)(;base64)?,(.*)$/,a=t.match(o);let c;if(a){const l=a[1],h=!!a[2];let u=a[3];u=decodeURIComponent(u),h&&(u=atob(u));try{let f;const d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":const m=new Uint8Array(u.length);for(let w=0;w<u.length;w++)m[w]=u.charCodeAt(w);d==="blob"?f=new Blob([m.buffer],{type:l}):f=m.buffer;break;case"document":f=new DOMParser().parseFromString(u,l);break;case"json":f=JSON.parse(u);break;default:f=u;break}setTimeout(function(){e&&e(f),r.manager.itemEnd(t)},0)}catch(f){setTimeout(function(){i&&i(f),r.manager.itemError(t),r.manager.itemEnd(t)},0)}}else{Yt[t]=[],Yt[t].push({onLoad:e,onProgress:n,onError:i}),c=new XMLHttpRequest,c.open("GET",t,!0),c.addEventListener("load",function(l){const h=this.response,u=Yt[t];if(delete Yt[t],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ii.add(t,h);for(let f=0,d=u.length;f<d;f++){const m=u[f];m.onLoad&&m.onLoad(h)}r.manager.itemEnd(t)}else{for(let f=0,d=u.length;f<d;f++){const m=u[f];m.onError&&m.onError(l)}r.manager.itemError(t),r.manager.itemEnd(t)}},!1),c.addEventListener("progress",function(l){const h=Yt[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onProgress&&d.onProgress(l)}},!1),c.addEventListener("error",function(l){const h=Yt[t];delete Yt[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),c.addEventListener("abort",function(l){const h=Yt[t];delete Yt[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),this.responseType!==void 0&&(c.responseType=this.responseType),this.withCredentials!==void 0&&(c.withCredentials=this.withCredentials),c.overrideMimeType&&c.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const l in this.requestHeader)c.setRequestHeader(l,this.requestHeader[l]);c.send(null)}return r.manager.itemStart(t),c},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this}});function Fc(t){Ne.call(this,t)}Fc.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Fc,load:function(t,e,n,i){const r=this,s=new Ut(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)},parse:function(t){const e=[];for(let n=0;n<t.length;n++){const i=Rt.parse(t[n]);e.push(i)}return e}});function Bc(t){Ne.call(this,t)}Bc.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Bc,load:function(t,e,n,i){const r=this,s=[],o=new Lr;o.image=s;const a=new Ut(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader);let c=0;function l(h){a.load(t[h],function(u){const f=r.parse(u,!0);s[h]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(o.minFilter=rt),o.format=f.format,o.needsUpdate=!0,e&&e(o))},n,i)}if(Array.isArray(t))for(let h=0,u=t.length;h<u;++h)l(h);else a.load(t,function(h){const u=r.parse(h,!0);if(u.isCubemap){const f=u.mipmaps.length/u.mipmapCount;for(let d=0;d<f;d++){s[d]={mipmaps:[]};for(let m=0;m<u.mipmapCount;m++)s[d].mipmaps.push(u.mipmaps[d*u.mipmapCount+m]),s[d].format=u.format,s[d].width=u.width,s[d].height=u.height}}else o.image.width=u.width,o.image.height=u.height,o.mipmaps=u.mipmaps;u.mipmapCount===1&&(o.minFilter=rt),o.format=u.format,o.needsUpdate=!0,e&&e(o)},n,i);return o}});function Pr(t){Ne.call(this,t)}Pr.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Pr,load:function(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Ii.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),Ii.add(t,this),e&&e(this),r.manager.itemEnd(t)}function c(l){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),i&&i(l),r.manager.itemError(t),r.manager.itemEnd(t)}return o.addEventListener("load",a,!1),o.addEventListener("error",c,!1),t.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o}});function ta(t){Ne.call(this,t)}ta.prototype=Object.assign(Object.create(Ne.prototype),{constructor:ta,load:function(t,e,n,i){const r=new In,s=new Pr(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(c){s.load(t[c],function(l){r.images[c]=l,o++,o===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let c=0;c<t.length;++c)a(c);return r}});function na(t){Ne.call(this,t)}na.prototype=Object.assign(Object.create(Ne.prototype),{constructor:na,load:function(t,e,n,i){const r=this,s=new Si,o=new Ut(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.load(t,function(a){const c=r.parse(a);!c||(c.image!==void 0?s.image=c.image:c.data!==void 0&&(s.image.width=c.width,s.image.height=c.height,s.image.data=c.data),s.wrapS=c.wrapS!==void 0?c.wrapS:pt,s.wrapT=c.wrapT!==void 0?c.wrapT:pt,s.magFilter=c.magFilter!==void 0?c.magFilter:rt,s.minFilter=c.minFilter!==void 0?c.minFilter:rt,s.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.format!==void 0&&(s.format=c.format),c.type!==void 0&&(s.type=c.type),c.mipmaps!==void 0&&(s.mipmaps=c.mipmaps,s.minFilter=Ur),c.mipmapCount===1&&(s.minFilter=rt),s.needsUpdate=!0,e&&e(s,c))},n,i),s}});function Ir(t){Ne.call(this,t)}Ir.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Ir,load:function(t,e,n,i){const r=new Ge,s=new Pr(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,function(o){r.image=o;const a=t.search(/\.jpe?g($|\?)/i)>0||t.search(/^data\:image\/jpeg/)===0;r.format=a?jn:It,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r}});function ye(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(ye.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t){t===void 0&&(t=5);const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t){t===void 0&&(t=5);const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(t===void 0&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const r=n.length;let s;e?s=e:s=t*n[r-1];let o=0,a=r-1,c;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),c=n[i]-s,c<0)o=i+1;else if(c>0)a=i-1;else{a=i;break}if(i=a,n[i]===s)return i/(r-1);const l=n[i],u=n[i+1]-l,f=(s-l)/u;return(i+f)/(r-1)},getTangent:function(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),o=this.getPoint(r),a=e||(s.isVector2?new Y:new C);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new C,i=[],r=[],s=[],o=new C,a=new fe;for(let f=0;f<=t;f++){const d=f/t;i[f]=this.getTangentAt(d,new C),i[f].normalize()}r[0]=new C,s[0]=new C;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let f=1;f<=t;f++){if(r[f]=r[f-1].clone(),s[f]=s[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const d=Math.acos(be.clamp(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(a.makeRotationAxis(o,d))}s[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(be.clamp(r[0].dot(r[t]),-1,1));f/=t,i[0].dot(o.crossVectors(r[0],r[t]))>0&&(f=-f);for(let d=1;d<=t;d++)r[d].applyMatrix4(a.makeRotationAxis(i[d],f*d)),s[d].crossVectors(i[d],r[d])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});function Gt(t,e,n,i,r,s,o,a){ye.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}Gt.prototype=Object.create(ye.prototype);Gt.prototype.constructor=Gt;Gt.prototype.isEllipseCurve=!0;Gt.prototype.getPoint=function(t,e){const n=e||new Y,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+t*r;let a=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=a-this.aX,f=c-this.aY;a=u*l-f*h+this.aX,c=u*h+f*l+this.aY}return n.set(a,c)};Gt.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};Gt.prototype.toJSON=function(){const t=ye.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t};Gt.prototype.fromJSON=function(t){return ye.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};function Dr(t,e,n,i,r,s){Gt.call(this,t,e,n,n,i,r,s),this.type="ArcCurve"}Dr.prototype=Object.create(Gt.prototype);Dr.prototype.constructor=Dr;Dr.prototype.isArcCurve=!0;function Sl(){let t=0,e=0,n=0,i=0;function r(s,o,a,c){t=s,e=a,n=-3*s+3*o-2*a-c,i=2*s-2*o+a+c}return{initCatmullRom:function(s,o,a,c,l){r(o,a,l*(a-s),l*(c-o))},initNonuniformCatmullRom:function(s,o,a,c,l,h,u){let f=(o-s)/l-(a-s)/(l+h)+(a-o)/h,d=(a-o)/h-(c-o)/(h+u)+(c-a)/u;f*=h,d*=h,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return t+e*s+n*o+i*a}}}const To=new C,tc=new Sl,nc=new Sl,ic=new Sl;function xt(t,e,n,i){ye.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=n||"centripetal",this.tension=i!==void 0?i:.5}xt.prototype=Object.create(ye.prototype);xt.prototype.constructor=xt;xt.prototype.isCatmullRomCurve3=!0;xt.prototype.getPoint=function(t,e){const n=e||new C,i=this.points,r=i.length,s=(r-(this.closed?0:1))*t;let o=Math.floor(s),a=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:a===0&&o===r-1&&(o=r-2,a=1);let c,l;this.closed||o>0?c=i[(o-1)%r]:(To.subVectors(i[0],i[1]).add(i[0]),c=To);const h=i[o%r],u=i[(o+1)%r];if(this.closed||o+2<r?l=i[(o+2)%r]:(To.subVectors(i[r-1],i[r-2]).add(i[r-1]),l=To),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let d=Math.pow(c.distanceToSquared(h),f),m=Math.pow(h.distanceToSquared(u),f),b=Math.pow(u.distanceToSquared(l),f);m<1e-4&&(m=1),d<1e-4&&(d=m),b<1e-4&&(b=m),tc.initNonuniformCatmullRom(c.x,h.x,u.x,l.x,d,m,b),nc.initNonuniformCatmullRom(c.y,h.y,u.y,l.y,d,m,b),ic.initNonuniformCatmullRom(c.z,h.z,u.z,l.z,d,m,b)}else this.curveType==="catmullrom"&&(tc.initCatmullRom(c.x,h.x,u.x,l.x,this.tension),nc.initCatmullRom(c.y,h.y,u.y,l.y,this.tension),ic.initCatmullRom(c.z,h.z,u.z,l.z,this.tension));return n.set(tc.calc(a),nc.calc(a),ic.calc(a)),n};xt.prototype.copy=function(t){ye.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};xt.prototype.toJSON=function(){const t=ye.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t};xt.prototype.fromJSON=function(t){ye.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new C().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};function Iu(t,e,n,i,r){const s=(i-e)*.5,o=(r-n)*.5,a=t*t,c=t*a;return(2*n-2*i+s+o)*c+(-3*n+3*i-2*s-o)*a+s*t+n}function S0(t,e){const n=1-t;return n*n*e}function T0(t,e){return 2*(1-t)*t*e}function E0(t,e){return t*t*e}function as(t,e,n,i){return S0(t,e)+T0(t,n)+E0(t,i)}function A0(t,e){const n=1-t;return n*n*n*e}function L0(t,e){const n=1-t;return 3*n*n*t*e}function C0(t,e){return 3*(1-t)*t*t*e}function R0(t,e){return t*t*t*e}function cs(t,e,n,i,r){return A0(t,e)+L0(t,n)+C0(t,i)+R0(t,r)}function en(t,e,n,i){ye.call(this),this.type="CubicBezierCurve",this.v0=t||new Y,this.v1=e||new Y,this.v2=n||new Y,this.v3=i||new Y}en.prototype=Object.create(ye.prototype);en.prototype.constructor=en;en.prototype.isCubicBezierCurve=!0;en.prototype.getPoint=function(t,e){const n=e||new Y,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(cs(t,i.x,r.x,s.x,o.x),cs(t,i.y,r.y,s.y,o.y)),n};en.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};en.prototype.toJSON=function(){const t=ye.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};en.prototype.fromJSON=function(t){return ye.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function pn(t,e,n,i){ye.call(this),this.type="CubicBezierCurve3",this.v0=t||new C,this.v1=e||new C,this.v2=n||new C,this.v3=i||new C}pn.prototype=Object.create(ye.prototype);pn.prototype.constructor=pn;pn.prototype.isCubicBezierCurve3=!0;pn.prototype.getPoint=function(t,e){const n=e||new C,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(cs(t,i.x,r.x,s.x,o.x),cs(t,i.y,r.y,s.y,o.y),cs(t,i.z,r.z,s.z,o.z)),n};pn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};pn.prototype.toJSON=function(){const t=ye.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};pn.prototype.fromJSON=function(t){return ye.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function Tt(t,e){ye.call(this),this.type="LineCurve",this.v1=t||new Y,this.v2=e||new Y}Tt.prototype=Object.create(ye.prototype);Tt.prototype.constructor=Tt;Tt.prototype.isLineCurve=!0;Tt.prototype.getPoint=function(t,e){const n=e||new Y;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};Tt.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};Tt.prototype.getTangent=function(t,e){const n=e||new Y;return n.copy(this.v2).sub(this.v1).normalize(),n};Tt.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};Tt.prototype.toJSON=function(){const t=ye.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};Tt.prototype.fromJSON=function(t){return ye.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function tn(t,e){ye.call(this),this.type="LineCurve3",this.v1=t||new C,this.v2=e||new C}tn.prototype=Object.create(ye.prototype);tn.prototype.constructor=tn;tn.prototype.isLineCurve3=!0;tn.prototype.getPoint=function(t,e){const n=e||new C;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};tn.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};tn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};tn.prototype.toJSON=function(){const t=ye.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};tn.prototype.fromJSON=function(t){return ye.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function nn(t,e,n){ye.call(this),this.type="QuadraticBezierCurve",this.v0=t||new Y,this.v1=e||new Y,this.v2=n||new Y}nn.prototype=Object.create(ye.prototype);nn.prototype.constructor=nn;nn.prototype.isQuadraticBezierCurve=!0;nn.prototype.getPoint=function(t,e){const n=e||new Y,i=this.v0,r=this.v1,s=this.v2;return n.set(as(t,i.x,r.x,s.x),as(t,i.y,r.y,s.y)),n};nn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};nn.prototype.toJSON=function(){const t=ye.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};nn.prototype.fromJSON=function(t){return ye.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function mn(t,e,n){ye.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new C,this.v1=e||new C,this.v2=n||new C}mn.prototype=Object.create(ye.prototype);mn.prototype.constructor=mn;mn.prototype.isQuadraticBezierCurve3=!0;mn.prototype.getPoint=function(t,e){const n=e||new C,i=this.v0,r=this.v1,s=this.v2;return n.set(as(t,i.x,r.x,s.x),as(t,i.y,r.y,s.y),as(t,i.z,r.z,s.z)),n};mn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};mn.prototype.toJSON=function(){const t=ye.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};mn.prototype.fromJSON=function(t){return ye.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function rn(t){ye.call(this),this.type="SplineCurve",this.points=t||[]}rn.prototype=Object.create(ye.prototype);rn.prototype.constructor=rn;rn.prototype.isSplineCurve=!0;rn.prototype.getPoint=function(t,e){const n=e||new Y,i=this.points,r=(i.length-1)*t,s=Math.floor(r),o=r-s,a=i[s===0?s:s-1],c=i[s],l=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(Iu(o,a.x,c.x,l.x,h.x),Iu(o,a.y,c.y,l.y,h.y)),n};rn.prototype.copy=function(t){ye.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this};rn.prototype.toJSON=function(){const t=ye.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t};rn.prototype.fromJSON=function(t){ye.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new Y().fromArray(i))}return this};var Nc=Object.freeze({__proto__:null,ArcCurve:Dr,CatmullRomCurve3:xt,CubicBezierCurve:en,CubicBezierCurve3:pn,EllipseCurve:Gt,LineCurve:Tt,LineCurve3:tn,QuadraticBezierCurve:nn,QuadraticBezierCurve3:mn,SplineCurve:rn});function Cn(){ye.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}Cn.prototype=Object.assign(Object.create(ye.prototype),{constructor:Cn,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Tt(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const r=n[i]-e,s=this.curves[i],o=s.getLength(),a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){t===void 0&&(t=40);const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?t*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?t*s.points.length:t,a=s.getPoints(o);for(let c=0;c<a.length;c++){const l=a[c];n&&n.equals(l)||(e.push(l),n=l)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){ye.prototype.copy.call(this,t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){const t=ye.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t},fromJSON:function(t){ye.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Nc[i.type]().fromJSON(i))}return this}});function Kt(t){Cn.call(this),this.type="Path",this.currentPoint=new Y,t&&this.setFromPoints(t)}Kt.prototype=Object.assign(Object.create(Cn.prototype),{constructor:Kt,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new Tt(this.currentPoint.clone(),new Y(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,i){const r=new nn(this.currentPoint.clone(),new Y(t,e),new Y(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(t,e,n,i,r,s){const o=new en(this.currentPoint.clone(),new Y(t,e),new Y(n,i),new Y(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(t){const e=[this.currentPoint.clone()].concat(t),n=new rn(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+o,e+a,n,i,r,s),this},absarc:function(t,e,n,i,r,s){return this.absellipse(t,e,n,n,i,r,s),this},ellipse:function(t,e,n,i,r,s,o,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,i,r,s,o,a),this},absellipse:function(t,e,n,i,r,s,o,a){const c=new Gt(t,e,n,i,r,s,o,a);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this},copy:function(t){return Cn.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=Cn.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Cn.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}});function Xn(t){Kt.call(this,t),this.uuid=be.generateUUID(),this.type="Shape",this.holes=[]}Xn.prototype=Object.assign(Object.create(Kt.prototype),{constructor:Xn,getPointsHoles:function(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Kt.prototype.copy.call(this,t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){const t=Kt.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t},fromJSON:function(t){Kt.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Kt().fromJSON(i))}return this}});function qe(t,e){me.call(this),this.type="Light",this.color=new oe(t),this.intensity=e!==void 0?e:1,this.receiveShadow=void 0}qe.prototype=Object.assign(Object.create(me.prototype),{constructor:qe,isLight:!0,copy:function(t){return me.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=me.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function ia(t,e,n){qe.call(this,t,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(me.DefaultUp),this.updateMatrix(),this.groundColor=new oe(e)}ia.prototype=Object.assign(Object.create(qe.prototype),{constructor:ia,isHemisphereLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}});function gn(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Y(512,512),this.map=null,this.mapPass=null,this.matrix=new fe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new js,this._frameExtents=new Y(1,1),this._viewportCount=1,this._viewports=[new Be(0,0,1,1)]}Object.assign(gn.prototype,{_projScreenMatrix:new fe,_lightPositionWorld:new C,_lookTarget:new C,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(t.matrixWorld),e.position.copy(s),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}});function Uc(){gn.call(this,new Qe(50,1,.5,500))}Uc.prototype=Object.assign(Object.create(gn.prototype),{constructor:Uc,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=be.RAD2DEG*2*t.angle,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),gn.prototype.updateMatrices.call(this,t)}});function Fs(t,e,n,i,r,s){qe.call(this,t,e),this.type="SpotLight",this.position.copy(me.DefaultUp),this.updateMatrix(),this.target=new me,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new Uc}Fs.prototype=Object.assign(Object.create(qe.prototype),{constructor:Fs,isSpotLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function Gc(){gn.call(this,new Qe(90,1,.5,500)),this._frameExtents=new Y(4,2),this._viewportCount=6,this._viewports=[new Be(2,1,1,1),new Be(0,1,1,1),new Be(3,1,1,1),new Be(1,1,1,1),new Be(3,0,1,1),new Be(1,0,1,1)],this._cubeDirections=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],this._cubeUps=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)]}Gc.prototype=Object.assign(Object.create(gn.prototype),{constructor:Gc,isPointLightShadow:!0,updateMatrices:function(t,e){e===void 0&&(e=0);const n=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(t.matrixWorld),n.position.copy(r),s.copy(n.position),s.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(s),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function Or(t,e,n,i){qe.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new Gc}Or.prototype=Object.assign(Object.create(qe.prototype),{constructor:Or,isPointLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}});function Di(t,e,n,i,r,s){fn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t!==void 0?t:-1,this.right=e!==void 0?e:1,this.top=n!==void 0?n:1,this.bottom=i!==void 0?i:-1,this.near=r!==void 0?r:.1,this.far=s!==void 0?s:2e3,this.updateProjectionMatrix()}Di.prototype=Object.assign(Object.create(fn.prototype),{constructor:Di,isOrthographicCamera:!0,copy:function(t,e){return fn.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,s=n+t,o=i+e,a=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,s=r+c*this.view.width,o-=l*this.view.offsetY,a=o-l*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=me.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function zc(){gn.call(this,new Di(-5,5,5,-5,.5,500))}zc.prototype=Object.assign(Object.create(gn.prototype),{constructor:zc,isDirectionalLightShadow:!0,updateMatrices:function(t){gn.prototype.updateMatrices.call(this,t)}});function Fr(t,e){qe.call(this,t,e),this.type="DirectionalLight",this.position.copy(me.DefaultUp),this.updateMatrix(),this.target=new me,this.shadow=new zc}Fr.prototype=Object.assign(Object.create(qe.prototype),{constructor:Fr,isDirectionalLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function Oi(t,e){qe.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}Oi.prototype=Object.assign(Object.create(qe.prototype),{constructor:Oi,isAmbientLight:!0});function ra(t,e,n,i){qe.call(this,t,e),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}ra.prototype=Object.assign(Object.create(qe.prototype),{constructor:ra,isRectAreaLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=qe.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});class Ad{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new C)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.282095),n.addScaledVector(o[1],.488603*r),n.addScaledVector(o[2],.488603*s),n.addScaledVector(o[3],.488603*i),n.addScaledVector(o[4],1.092548*(i*r)),n.addScaledVector(o[5],1.092548*(r*s)),n.addScaledVector(o[6],.315392*(3*s*s-1)),n.addScaledVector(o[7],1.092548*(i*s)),n.addScaledVector(o[8],.546274*(i*i-r*r)),n}getIrradianceAt(e,n){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.886227),n.addScaledVector(o[1],2*.511664*r),n.addScaledVector(o[2],2*.511664*s),n.addScaledVector(o[3],2*.511664*i),n.addScaledVector(o[4],2*.429043*i*r),n.addScaledVector(o[5],2*.429043*r*s),n.addScaledVector(o[6],.743125*s*s-.247708),n.addScaledVector(o[7],2*.429043*i*s),n.addScaledVector(o[8],.429043*(i*i-r*r)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n){n===void 0&&(n=0);const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,n+r*3);return this}toArray(e,n){e===void 0&&(e=[]),n===void 0&&(n=0);const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,n+r*3);return e}static getBasisAt(e,n){const i=e.x,r=e.y,s=e.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*s,n[3]=.488603*i,n[4]=1.092548*i*r,n[5]=1.092548*r*s,n[6]=.315392*(3*s*s-1),n[7]=1.092548*i*s,n[8]=.546274*(i*i-r*r)}}function Vt(t,e){qe.call(this,void 0,e),this.type="LightProbe",this.sh=t!==void 0?t:new Ad}Vt.prototype=Object.assign(Object.create(qe.prototype),{constructor:Vt,isLightProbe:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=qe.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}});function sa(t){Ne.call(this,t),this.textures={}}sa.prototype=Object.assign(Object.create(Ne.prototype),{constructor:sa,load:function(t,e,n,i){const r=this,s=new Ut(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)},parse:function(t){const e=this.textures;function n(r){return e[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),e[r]}const i=new b0[t.type];if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=new oe().setHex(t.sheen)),t.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular.setHex(t.specular),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==1&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.skinning!==void 0&&(i.skinning=t.skinning),t.morphTargets!==void 0&&(i.morphTargets=t.morphTargets),t.morphNormals!==void 0&&(i.morphNormals=t.morphNormals),t.dithering!==void 0&&(i.dithering=t.dithering),t.vertexTangents!==void 0&&(i.vertexTangents=t.vertexTangents),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const r in t.uniforms){const s=t.uniforms[r];switch(i.uniforms[r]={},s.type){case"t":i.uniforms[r].value=n(s.value);break;case"c":i.uniforms[r].value=new oe().setHex(s.value);break;case"v2":i.uniforms[r].value=new Y().fromArray(s.value);break;case"v3":i.uniforms[r].value=new C().fromArray(s.value);break;case"v4":i.uniforms[r].value=new Be().fromArray(s.value);break;case"m3":i.uniforms[r].value=new yt().fromArray(s.value);break;case"m4":i.uniforms[r].value=new fe().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.extensions!==void 0)for(const r in t.extensions)i.extensions[r]=t.extensions[r];if(t.shading!==void 0&&(i.flatShading=t.shading===1),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let r=t.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new Y().fromArray(r)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new Y().fromArray(t.clearcoatNormalScale)),t.transmission!==void 0&&(i.transmission=t.transmission),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),i},setTextures:function(t){return this.textures=t,this}});const yr={decodeText:function(t){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}},extractUrlBase:function(t){const e=t.lastIndexOf("/");return e===-1?"./":t.substr(0,e+1)}};function Bs(){xe.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}Bs.prototype=Object.assign(Object.create(xe.prototype),{constructor:Bs,isInstancedBufferGeometry:!0,copy:function(t){return xe.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const t=xe.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}});function oa(t,e,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),we.call(this,t,e,n),this.meshPerAttribute=i||1}oa.prototype=Object.assign(Object.create(we.prototype),{constructor:oa,isInstancedBufferAttribute:!0,copy:function(t){return we.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=we.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}});function aa(t){Ne.call(this,t)}aa.prototype=Object.assign(Object.create(Ne.prototype),{constructor:aa,load:function(t,e,n,i){const r=this,s=new Ut(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)},parse:function(t){const e={},n={};function i(f,d){if(e[d]!==void 0)return e[d];const b=f.interleavedBuffers[d],w=r(f,b.buffer),v=new Eo[b.type](w),p=new Pt(v,b.stride);return p.uuid=b.uuid,e[d]=p,p}function r(f,d){if(n[d]!==void 0)return n[d];const b=f.arrayBuffers[d],w=new Uint32Array(b).buffer;return n[d]=w,w}const s=t.isInstancedBufferGeometry?new Bs:new xe,o=t.data.index;if(o!==void 0){const f=new Eo[o.type](o.array);s.setIndex(new we(f,1))}const a=t.data.attributes;for(const f in a){const d=a[f];let m;if(d.isInterleavedBufferAttribute){const b=i(t.data,d.data);m=new ei(b,d.itemSize,d.offset,d.normalized)}else{const b=new Eo[d.type](d.array),w=d.isInstancedBufferAttribute?oa:we;m=new w(b,d.itemSize,d.normalized)}d.name!==void 0&&(m.name=d.name),s.setAttribute(f,m)}const c=t.data.morphAttributes;if(c)for(const f in c){const d=c[f],m=[];for(let b=0,w=d.length;b<w;b++){const v=d[b];let p;if(v.isInterleavedBufferAttribute){const E=i(t.data,v.data);p=new ei(E,v.itemSize,v.offset,v.normalized)}else{const E=new Eo[v.type](v.array);p=new we(E,v.itemSize,v.normalized)}v.name!==void 0&&(p.name=v.name),m.push(p)}s.morphAttributes[f]=m}t.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const h=t.data.groups||t.data.drawcalls||t.data.offsets;if(h!==void 0)for(let f=0,d=h.length;f!==d;++f){const m=h[f];s.addGroup(m.start,m.count,m.materialIndex)}const u=t.data.boundingSphere;if(u!==void 0){const f=new C;u.center!==void 0&&f.fromArray(u.center),s.boundingSphere=new Bn(f,u.radius)}return t.name&&(s.name=t.name),t.userData&&(s.userData=t.userData),s}});const Eo={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!="undefined"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ca(t){Ne.call(this,t)}ca.prototype=Object.assign(Object.create(Ne.prototype),{constructor:ca,load:function(t,e,n,i){const r=this,s=this.path===""?yr.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const o=new Ut(r.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.load(t,function(a){let c=null;try{c=JSON.parse(a)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+t+".",h.message);return}const l=c.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+t);return}r.parse(c,e)},n,i)},parse:function(t,e){const n=this.parseShape(t.shapes),i=this.parseGeometries(t.geometries,n),r=this.parseImages(t.images,function(){e!==void 0&&e(a)}),s=this.parseTextures(t.textures,r),o=this.parseMaterials(t.materials,s),a=this.parseObject(t.object,i,o);return t.animations&&(a.animations=this.parseAnimations(t.animations)),(t.images===void 0||t.images.length===0)&&e!==void 0&&e(a),a},parseShape:function(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const r=new Xn().fromJSON(t[n]);e[r.uuid]=r}return e},parseGeometries:function(t,e){const n={};let i;if(t!==void 0){const r=new aa;for(let s=0,o=t.length;s<o;s++){let a;const c=t[s];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new _t[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new _t[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new _t[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new _t[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":a=new _t[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new _t[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":a=new _t[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new _t[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new _t[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new _t[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":a=new _t[c.type](new Nc[c.path.type]().fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":a=new _t[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":a=new _t[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":i=[];for(let h=0,u=c.shapes.length;h<u;h++){const f=e[c.shapes[h]];i.push(f)}a=new _t[c.type](i,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":i=[];for(let h=0,u=c.shapes.length;h<u;h++){const f=e[c.shapes[h]];i.push(f)}const l=c.options.extrudePath;l!==void 0&&(c.options.extrudePath=new Nc[l.type]().fromJSON(l)),a=new _t[c.type](i,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":a=r.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}a.uuid=c.uuid,c.name!==void 0&&(a.name=c.name),a.isBufferGeometry===!0&&c.userData!==void 0&&(a.userData=c.userData),n[c.uuid]=a}}return n},parseMaterials:function(t,e){const n={},i={};if(t!==void 0){const r=new sa;r.setTextures(e);for(let s=0,o=t.length;s<o;s++){const a=t[s];if(a.type==="MultiMaterial"){const c=[];for(let l=0;l<a.materials.length;l++){const h=a.materials[l];n[h.uuid]===void 0&&(n[h.uuid]=r.parse(h)),c.push(n[h.uuid])}i[a.uuid]=c}else n[a.uuid]===void 0&&(n[a.uuid]=r.parse(a)),i[a.uuid]=n[a.uuid]}}return i},parseAnimations:function(t){const e=[];for(let n=0;n<t.length;n++){const i=t[n],r=Rt.parse(i);i.uuid!==void 0&&(r.uuid=i.uuid),e.push(r)}return e},parseImages:function(t,e){const n=this,i={};let r;function s(o){return n.manager.itemStart(o),r.load(o,function(){n.manager.itemEnd(o)},void 0,function(){n.manager.itemError(o),n.manager.itemEnd(o)})}if(t!==void 0&&t.length>0){const o=new Sa(e);r=new Pr(o),r.setCrossOrigin(this.crossOrigin);for(let a=0,c=t.length;a<c;a++){const l=t[a],h=l.url;if(Array.isArray(h)){i[l.uuid]=[];for(let u=0,f=h.length;u<f;u++){const d=h[u],m=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:n.resourcePath+d;i[l.uuid].push(s(m))}}else{const u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)?l.url:n.resourcePath+l.url;i[l.uuid]=s(u)}}}return i},parseTextures:function(t,e){function n(r,s){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),s[r])}const i={};if(t!==void 0)for(let r=0,s=t.length;r<s;r++){const o=t[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),e[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);let a;Array.isArray(e[o.image])?a=new In(e[o.image]):a=new Ge(e[o.image]),a.needsUpdate=!0,a.uuid=o.uuid,o.name!==void 0&&(a.name=o.name),o.mapping!==void 0&&(a.mapping=n(o.mapping,P0)),o.offset!==void 0&&a.offset.fromArray(o.offset),o.repeat!==void 0&&a.repeat.fromArray(o.repeat),o.center!==void 0&&a.center.fromArray(o.center),o.rotation!==void 0&&(a.rotation=o.rotation),o.wrap!==void 0&&(a.wrapS=n(o.wrap[0],Du),a.wrapT=n(o.wrap[1],Du)),o.format!==void 0&&(a.format=o.format),o.type!==void 0&&(a.type=o.type),o.encoding!==void 0&&(a.encoding=o.encoding),o.minFilter!==void 0&&(a.minFilter=n(o.minFilter,Ou)),o.magFilter!==void 0&&(a.magFilter=n(o.magFilter,Ou)),o.anisotropy!==void 0&&(a.anisotropy=o.anisotropy),o.flipY!==void 0&&(a.flipY=o.flipY),o.premultiplyAlpha!==void 0&&(a.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(a.unpackAlignment=o.unpackAlignment),i[o.uuid]=a}return i},parseObject:function(t,e,n){let i;function r(c){return e[c]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",c),e[c]}function s(c){if(c!==void 0){if(Array.isArray(c)){const l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h];n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),l.push(n[f])}return l}return n[c]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",c),n[c]}}let o,a;switch(t.type){case"Scene":i=new _a,t.background!==void 0&&Number.isInteger(t.background)&&(i.background=new oe(t.background)),t.fog!==void 0&&(t.fog.type==="Fog"?i.fog=new xa(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(i.fog=new ya(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":i=new Qe(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(i.focus=t.focus),t.zoom!==void 0&&(i.zoom=t.zoom),t.filmGauge!==void 0&&(i.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(i.filmOffset=t.filmOffset),t.view!==void 0&&(i.view=Object.assign({},t.view));break;case"OrthographicCamera":i=new Di(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(i.zoom=t.zoom),t.view!==void 0&&(i.view=Object.assign({},t.view));break;case"AmbientLight":i=new Oi(t.color,t.intensity);break;case"DirectionalLight":i=new Fr(t.color,t.intensity);break;case"PointLight":i=new Or(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":i=new ra(t.color,t.intensity,t.width,t.height);break;case"SpotLight":i=new Fs(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":i=new ia(t.color,t.groundColor,t.intensity);break;case"LightProbe":i=new Vt().fromJSON(t);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":o=r(t.geometry),a=s(t.material),i=new je(o,a);break;case"InstancedMesh":o=r(t.geometry),a=s(t.material);const c=t.count,l=t.instanceMatrix;i=new Xo(o,a,c),i.instanceMatrix=new we(new Float32Array(l.array),16);break;case"LOD":i=new Ss;break;case"Line":i=new Nt(r(t.geometry),s(t.material),t.mode);break;case"LineLoop":i=new Yo(r(t.geometry),s(t.material));break;case"LineSegments":i=new Mt(r(t.geometry),s(t.material));break;case"PointCloud":case"Points":i=new Ar(r(t.geometry),s(t.material));break;case"Sprite":i=new Ms(s(t.material));break;case"Group":i=new $t;break;default:i=new me}if(i.uuid=t.uuid,t.name!==void 0&&(i.name=t.name),t.matrix!==void 0?(i.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(i.matrixAutoUpdate=t.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(t.position!==void 0&&i.position.fromArray(t.position),t.rotation!==void 0&&i.rotation.fromArray(t.rotation),t.quaternion!==void 0&&i.quaternion.fromArray(t.quaternion),t.scale!==void 0&&i.scale.fromArray(t.scale)),t.castShadow!==void 0&&(i.castShadow=t.castShadow),t.receiveShadow!==void 0&&(i.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.bias!==void 0&&(i.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(i.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(i.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&i.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(i.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(i.visible=t.visible),t.frustumCulled!==void 0&&(i.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(i.renderOrder=t.renderOrder),t.userData!==void 0&&(i.userData=t.userData),t.layers!==void 0&&(i.layers.mask=t.layers),t.children!==void 0){const c=t.children;for(let l=0;l<c.length;l++)i.add(this.parseObject(c[l],e,n))}if(t.type==="LOD"){t.autoUpdate!==void 0&&(i.autoUpdate=t.autoUpdate);const c=t.levels;for(let l=0;l<c.length;l++){const h=c[l],u=i.getObjectByProperty("uuid",h.object);u!==void 0&&i.addLevel(u,h.distance)}}return i}});const P0={UVMapping:da,CubeReflectionMapping:zs,CubeRefractionMapping:Hs,EquirectangularReflectionMapping:br,EquirectangularRefractionMapping:ko,CubeUVReflectionMapping:Nr,CubeUVRefractionMapping:Vs},Du={RepeatWrapping:bi,ClampToEdgeWrapping:pt,MirroredRepeatWrapping:hs},Ou={NearestFilter:ut,NearestMipmapNearestFilter:Wo,NearestMipmapLinearFilter:jo,LinearFilter:rt,LinearMipmapNearestFilter:nl,LinearMipmapLinearFilter:Ur};function Hc(t){typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Ne.call(this,t),this.options={premultiplyAlpha:"none"}}Hc.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Hc,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Ii.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;fetch(t).then(function(o){return o.blob()}).then(function(o){return createImageBitmap(o,r.options)}).then(function(o){Ii.add(t,o),e&&e(o),r.manager.itemEnd(t)}).catch(function(o){i&&i(o),r.manager.itemError(t),r.manager.itemEnd(t)}),r.manager.itemStart(t)}});function Tl(){this.type="ShapePath",this.color=new oe,this.subPaths=[],this.currentPath=null}Object.assign(Tl.prototype,{moveTo:function(t,e){return this.currentPath=new Kt,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this},bezierCurveTo:function(t,e,n,i,r,s){return this.currentPath.bezierCurveTo(t,e,n,i,r,s),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(v){const p=[];for(let E=0,A=v.length;E<A;E++){const R=v[E],S=new Xn;S.curves=R.curves,p.push(S)}return p}function i(v,p){const E=p.length;let A=!1;for(let R=E-1,S=0;S<E;R=S++){let D=p[R],N=p[S],U=N.x-D.x,g=N.y-D.y;if(Math.abs(g)>Number.EPSILON){if(g<0&&(D=p[S],U=-U,N=p[R],g=-g),v.y<D.y||v.y>N.y)continue;if(v.y===D.y){if(v.x===D.x)return!0}else{const y=g*(v.x-D.x)-U*(v.y-D.y);if(y===0)return!0;if(y<0)continue;A=!A}}else{if(v.y!==D.y)continue;if(N.x<=v.x&&v.x<=D.x||D.x<=v.x&&v.x<=N.x)return!0}}return A}const r=Pn.isClockWise,s=this.subPaths;if(s.length===0)return[];if(e===!0)return n(s);let o,a,c;const l=[];if(s.length===1)return a=s[0],c=new Xn,c.curves=a.curves,l.push(c),l;let h=!r(s[0].getPoints());h=t?!h:h;const u=[],f=[];let d=[],m=0,b;f[m]=void 0,d[m]=[];for(let v=0,p=s.length;v<p;v++)a=s[v],b=a.getPoints(),o=r(b),o=t?!o:o,o?(!h&&f[m]&&m++,f[m]={s:new Xn,p:b},f[m].s.curves=a.curves,h&&m++,d[m]=[]):d[m].push({h:a,p:b[0]});if(!f[0])return n(s);if(f.length>1){let v=!1;const p=[];for(let E=0,A=f.length;E<A;E++)u[E]=[];for(let E=0,A=f.length;E<A;E++){const R=d[E];for(let S=0;S<R.length;S++){const D=R[S];let N=!0;for(let U=0;U<f.length;U++)i(D.p,f[U].p)&&(E!==U&&p.push({froms:E,tos:U,hole:S}),N?(N=!1,u[U].push(D)):v=!0);N&&u[E].push(D)}}p.length>0&&(v||(d=u))}let w;for(let v=0,p=f.length;v<p;v++){c=f[v].s,l.push(c),w=d[v];for(let E=0,A=w.length;E<A;E++)c.holes.push(w[E].h)}return l}});function El(t){this.type="Font",this.data=t}Object.assign(El.prototype,{isFont:!0,generateShapes:function(t,e){e===void 0&&(e=100);const n=[],i=I0(t,e,this.data);for(let r=0,s=i.length;r<s;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}});function I0(t,e,n){const i=Array.from?Array.from(t):String(t).split(""),r=e/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=[];let a=0,c=0;for(let l=0;l<i.length;l++){const h=i[l];if(h===`
`)a=0,c-=s;else{const u=D0(h,r,a,c,n);a+=u.offsetX,o.push(u.path)}}return o}function D0(t,e,n,i,r){const s=r.glyphs[t]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");return}const o=new Tl;let a,c,l,h,u,f,d,m;if(s.o){const b=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let w=0,v=b.length;w<v;)switch(b[w++]){case"m":a=b[w++]*e+n,c=b[w++]*e+i,o.moveTo(a,c);break;case"l":a=b[w++]*e+n,c=b[w++]*e+i,o.lineTo(a,c);break;case"q":l=b[w++]*e+n,h=b[w++]*e+i,u=b[w++]*e+n,f=b[w++]*e+i,o.quadraticCurveTo(u,f,l,h);break;case"b":l=b[w++]*e+n,h=b[w++]*e+i,u=b[w++]*e+n,f=b[w++]*e+i,d=b[w++]*e+n,m=b[w++]*e+i,o.bezierCurveTo(u,f,d,m,l,h);break}}return{offsetX:s.ha*e,path:o}}function Vc(t){Ne.call(this,t)}Vc.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Vc,load:function(t,e,n,i){const r=this,s=new Ut(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.load(t,function(o){let a;try{a=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(o.substring(65,o.length-2))}const c=r.parse(a);e&&e(c)},n,i)},parse:function(t){return new El(t)}});let Ao;const Al={getContext:function(){return Ao===void 0&&(Ao=new(window.AudioContext||window.webkitAudioContext)),Ao},setContext:function(t){Ao=t}};function la(t){Ne.call(this,t)}la.prototype=Object.assign(Object.create(Ne.prototype),{constructor:la,load:function(t,e,n,i){const r=this,s=new Ut(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(t,function(o){try{const a=o.slice(0);Al.getContext().decodeAudioData(a,function(l){e(l)})}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)}});function kc(t,e,n){Vt.call(this,void 0,n);const i=new oe().set(t),r=new oe().set(e),s=new C(i.r,i.g,i.b),o=new C(r.r,r.g,r.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(c)}kc.prototype=Object.assign(Object.create(Vt.prototype),{constructor:kc,isHemisphereLightProbe:!0,copy:function(t){return Vt.prototype.copy.call(this,t),this},toJSON:function(t){return Vt.prototype.toJSON.call(this,t)}});function Wc(t,e){Vt.call(this,void 0,e);const n=new oe().set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}Wc.prototype=Object.assign(Object.create(Vt.prototype),{constructor:Wc,isAmbientLightProbe:!0,copy:function(t){return Vt.prototype.copy.call(this,t),this},toJSON:function(t){return Vt.prototype.toJSON.call(this,t)}});const Fu=new fe,Bu=new fe;function Ld(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Qe,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Qe,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(Ld.prototype,{update:function(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const i=t.projectionMatrix.clone(),r=e.eyeSep/2,s=r*e.near/e.focus,o=e.near*Math.tan(be.DEG2RAD*e.fov*.5)/e.zoom;let a,c;Bu.elements[12]=-r,Fu.elements[12]=r,a=-o*e.aspect+s,c=o*e.aspect+s,i.elements[0]=2*e.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraL.projectionMatrix.copy(i),a=-o*e.aspect-s,c=o*e.aspect-s,i.elements[0]=2*e.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Bu),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Fu)}});class Cd{constructor(e){this.autoStart=e!==void 0?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=(typeof performance=="undefined"?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const n=(typeof performance=="undefined"?Date:performance).now();e=(n-this.oldTime)/1e3,this.oldTime=n,this.elapsedTime+=e}return e}}const li=new C,Nu=new st,O0=new C,ui=new C;class F0 extends me{constructor(){super();this.type="AudioListener",this.context=Al.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Cd}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const n=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(li,Nu,O0),ui.set(0,0,-1).applyQuaternion(Nu),n.positionX){const r=this.context.currentTime+this.timeDelta;n.positionX.linearRampToValueAtTime(li.x,r),n.positionY.linearRampToValueAtTime(li.y,r),n.positionZ.linearRampToValueAtTime(li.z,r),n.forwardX.linearRampToValueAtTime(ui.x,r),n.forwardY.linearRampToValueAtTime(ui.y,r),n.forwardZ.linearRampToValueAtTime(ui.z,r),n.upX.linearRampToValueAtTime(i.x,r),n.upY.linearRampToValueAtTime(i.y,r),n.upZ.linearRampToValueAtTime(i.z,r)}else n.setPosition(li.x,li.y,li.z),n.setOrientation(ui.x,ui.y,ui.z,i.x,i.y,i.z)}}class Ll extends me{constructor(e){super();this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e){if(e===void 0&&(e=0),this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const n=this.context.createBufferSource();return n.buffer=this.buffer,n.loop=this.loop,n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.onended=this.onEnded.bind(this),n.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=n,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const hi=new C,Uu=new st,B0=new C,fi=new C;class N0 extends Ll{constructor(e){super(e);this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,n,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=n,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(hi,Uu,B0),fi.set(0,0,1).applyQuaternion(Uu);const n=this.panner;if(n.positionX){const i=this.context.currentTime+this.listener.timeDelta;n.positionX.linearRampToValueAtTime(hi.x,i),n.positionY.linearRampToValueAtTime(hi.y,i),n.positionZ.linearRampToValueAtTime(hi.z,i),n.orientationX.linearRampToValueAtTime(fi.x,i),n.orientationY.linearRampToValueAtTime(fi.y,i),n.orientationZ.linearRampToValueAtTime(fi.z,i)}else n.setPosition(hi.x,hi.y,hi.z),n.setOrientation(fi.x,fi.y,fi.z)}}class Rd{constructor(e,n){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=n!==void 0?n:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const n=this.getFrequencyData();for(let i=0;i<n.length;i++)e+=n[i];return e/n.length}}function Cl(t,e,n){this.binding=t,this.valueSize=n;let i,r,s;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Cl.prototype,{accumulate:function(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)n[r+o]=n[o];s=e}else{s+=e;const o=e/s;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=s},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=e*this._origIndex;this._mixBufferRegion(n,i,a,1-r,e)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let a=e,c=e+e;a!==c;++a)if(n[a]!==n[a+e]){o.setValue(n,i);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let r=n,s=i;r!==s;++r)e[r]=e[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]},_select:function(t,e,n,i,r){if(i>=.5)for(let s=0;s!==r;++s)t[e+s]=t[n+s]},_slerp:function(t,e,n,i){st.slerpFlat(t,e,t,e,t,n,i)},_slerpAdditive:function(t,e,n,i,r){const s=this._workIndex*r;st.multiplyQuaternionsFlat(t,s,t,e,t,n),st.slerpFlat(t,e,t,e,t,s,i)},_lerp:function(t,e,n,i,r){const s=1-i;for(let o=0;o!==r;++o){const a=e+o;t[a]=t[a]*s+t[n+o]*i}},_lerpAdditive:function(t,e,n,i,r){for(let s=0;s!==r;++s){const o=e+s;t[o]=t[o]+t[n+s]*i}}});const Rl="\\[\\]\\.:\\/",U0=new RegExp("["+Rl+"]","g"),Pl="[^"+Rl+"]",G0="[^"+Rl.replace("\\.","")+"]",z0=/((?:WC+[\/:])*)/.source.replace("WC",Pl),H0=/(WCOD+)?/.source.replace("WCOD",G0),V0=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Pl),k0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Pl),W0=new RegExp("^"+z0+H0+V0+k0+"$"),j0=["material","materials","bones"];function Pd(t,e,n){const i=n||ot.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}Object.assign(Pd.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}});function ot(t,e,n){this.path=e,this.parsedPath=n||ot.parseTrackName(e),this.node=ot.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(ot,{Composite:Pd,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new ot.Composite(t,e,n):new ot(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(U0,"")},parseTrackName:function(t){const e=W0.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);j0.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(r){for(let s=0;s<r.length;s++){const o=r[s];if(o.name===e||o.uuid===e)return o;const a=n(o.children);if(a)return a}return null},i=n(t.children);if(i)return i}return null}});Object.assign(ot.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,n){e[n]=this.node[this.propertyName]},function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[n++]=i[r]},function(e,n){e[n]=this.resolvedProperty[this.propertyIndex]},function(e,n){this.resolvedProperty.toArray(e,n)}],SetterByBindingTypeAndVersioning:[[function(e,n){this.targetObject[this.propertyName]=e[n]},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++]},function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0},function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty[this.propertyIndex]=e[n]},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty.fromArray(e,n)},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,n){this.bind(),this.getValue(e,n)},setValue:function(e,n){this.bind(),this.setValue(e,n)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=ot.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let l=0;l<t.length;l++)if(t[l].name===c){c=l;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(c!==void 0){if(t[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[c]}}const s=t[i];if(s===void 0){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",t);return}let o=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[r]!==void 0&&(r=t.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(ot.prototype,{_getValue_unbound:ot.prototype.getValue,_setValue_unbound:ot.prototype.setValue});function Id(){this.uuid=be.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}Object.assign(Id.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o,a=t.length,c=this.nCachedObjects_;for(let l=0,h=arguments.length;l!==h;++l){const u=arguments[l],f=u.uuid;let d=e[f];if(d===void 0){d=a++,e[f]=d,t.push(u);for(let m=0,b=s;m!==b;++m)r[m].push(new ot(u,n[m],i[m]))}else if(d<c){o=t[d];const m=--c,b=t[m];e[b.uuid]=d,t[d]=b,e[f]=m,t[m]=u;for(let w=0,v=s;w!==v;++w){const p=r[w],E=p[m];let A=p[d];p[d]=E,A===void 0&&(A=new ot(u,n[w],i[w])),p[m]=A}}else t[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const a=arguments[s],c=a.uuid,l=e[c];if(l!==void 0&&l>=r){const h=r++,u=t[h];e[u.uuid]=l,t[l]=u,e[c]=h,t[h]=a;for(let f=0,d=i;f!==d;++f){const m=n[f],b=m[h],w=m[l];m[l]=b,m[h]=w}}}this.nCachedObjects_=r},uncache:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=t.length;for(let o=0,a=arguments.length;o!==a;++o){const c=arguments[o],l=c.uuid,h=e[l];if(h!==void 0)if(delete e[l],h<r){const u=--r,f=t[u],d=--s,m=t[d];e[f.uuid]=h,t[h]=f,e[m.uuid]=u,t[u]=m,t.pop();for(let b=0,w=i;b!==w;++b){const v=n[b],p=v[u],E=v[d];v[h]=p,v[u]=E,v.pop()}}else{const u=--s,f=t[u];e[f.uuid]=h,t[h]=f,t.pop();for(let d=0,m=i;d!==m;++d){const b=n[d];b[h]=b[u],b.pop()}}}this.nCachedObjects_=r},subscribe_:function(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,h=new Array(c);i=r.length,n[t]=i,s.push(t),o.push(e),r.push(h);for(let u=l,f=a.length;u!==f;++u){const d=a[u];h[u]=new ot(d,t,e)}return h},unsubscribe_:function(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],c=t[o];e[c]=n,s[n]=a,s.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}});class q0{constructor(e,n,i,r){this._mixer=e,this._clip=n,this._localRoot=i||null,this.blendMode=r||n.blendMode;const s=n.tracks,o=s.length,a=new Array(o),c={endingStart:vi,endingEnd:vi};for(let l=0;l!==o;++l){const h=s[l].createInterpolant(null);a[l]=h,h.settings=c}this._interpolantSettings=c,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Ff,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,n){return this.loop=e,this.repetitions=n,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,n,i){if(e.fadeOut(n),this.fadeIn(n),i){const r=this._clip.duration,s=e._clip.duration,o=s/r,a=r/s;e.warp(1,o,n),this.warp(a,1,n)}return this}crossFadeTo(e,n,i){return e.crossFadeFrom(this,n,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,n,i){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const c=a.parameterPositions,l=a.sampleValues;return c[0]=s,c[1]=s+i,l[0]=e/o,l[1]=n/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,n,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const c=(e-s)*i;if(c<0||i===0)return;this._startTime=null,n=i*c}n*=this._updateTimeScale(e);const o=this._updateTime(n),a=this._updateWeight(e);if(a>0){const c=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case il:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(o),l[h].accumulateAdditive(a);break;case pa:default:for(let h=0,u=c.length;h!==u;++h)c[h].evaluate(o),l[h].accumulate(r,a)}}}_updateWeight(e){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];n*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(e){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;i!==null&&(n*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n))}return this._effectiveTimeScale=n,n}_updateTime(e){const n=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const o=i===Bf;if(e===0)return s===-1?r:o&&(s&1)===1?n-r:r;if(i===Of){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=n||r<0){const a=Math.floor(r/n);r-=n*a,s+=Math.abs(a);const c=this.repetitions-s;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const l=e<0;this._setEndings(l,!l,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return n-r}return r}_setEndings(e,n,i){const r=this._interpolantSettings;i?(r.endingStart=yi,r.endingEnd=yi):(e?r.endingStart=this.zeroSlopeAtStart?yi:vi:r.endingStart=ms,n?r.endingEnd=this.zeroSlopeAtEnd?yi:vi:r.endingEnd=ms)}_scheduleFading(e,n,i){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=s,c[0]=n,a[1]=s+e,c[1]=i,this}}function jc(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}jc.prototype=Object.assign(Object.create(vn.prototype),{constructor:jc,_bindAction:function(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,s=t._propertyBindings,o=t._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];l===void 0&&(l={},c[a]=l);for(let h=0;h!==r;++h){const u=i[h],f=u.name;let d=l[f];if(d!==void 0)s[h]=d;else{if(d=s[h],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,a,f));continue}const m=e&&e._propertyBindings[h].binding.parsedPath;d=new Cl(ot.create(n,f,m),u.ValueTypeName,u.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,a,f),s[h]=d}o[h].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,r=this._actionsByClip[i];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){const i=this._actions,r=this._actionsByClip;let s=r[e];if(s===void 0)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const o=s.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=i.length,i.push(t),s.actionByRoot[n]=t},_removeInactiveAction:function(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,c=a[a.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),t._byClipCacheIndex=null;const h=o.actionByRoot,u=(t._localRoot||this._root).uuid;delete h[u],a.length===0&&delete s[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackAction:function(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_addInactiveBinding:function(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];s===void 0&&(s={},i[e]=s),s[n]=t,t._cacheIndex=r.length,r.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,o=s[i],a=e[e.length-1],c=t._cacheIndex;a._cacheIndex=c,e[c]=a,e.pop(),delete o[r],Object.keys(o).length===0&&delete s[i]},_lendBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new Os(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,n){const i=e||this._root,r=i.uuid;let s=typeof t=="string"?Rt.findByName(i,t):t;const o=s!==null?s.uuid:t,a=this._actionsByClip[o];let c=null;if(n===void 0&&(s!==null?n=s.blendMode:n=pa),a!==void 0){const h=a.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;c=a.knownActions[0],s===null&&(s=c._clip)}if(s===null)return null;const l=new q0(this,s,e,n);return this._bindAction(l,c),this._addInactiveAction(l,o,r),l},existingAction:function(t,e){const n=e||this._root,i=n.uuid,r=typeof t=="string"?Rt.findByName(n,t):t,s=r?r.uuid:t,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this},update:function(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),s=this._accuIndex^=1;for(let c=0;c!==n;++c)e[c]._update(i,t,r,s);const o=this._bindings,a=this._nActiveBindings;for(let c=0;c!==a;++c)o[c].apply(s);return this},setTime:function(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const s=r.knownActions;for(let o=0,a=s.length;o!==a;++o){const c=s[o];this._deactivateAction(c);const l=c._cacheIndex,h=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=l,e[l]=h,e.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}},uncacheRoot:function(t){const e=t.uuid,n=this._actionsByClip;for(const s in n){const o=n[s].actionByRoot,a=o[e];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[e];if(r!==void 0)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class Ta{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Ta(this.value.clone===void 0?this.value:this.value.clone())}}function qc(t,e,n){Pt.call(this,t,e),this.meshPerAttribute=n||1}qc.prototype=Object.assign(Object.create(Pt.prototype),{constructor:qc,isInstancedInterleavedBuffer:!0,copy:function(t){return Pt.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=Pt.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=Pt.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}});function Il(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(Il.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(Il.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}});function Ea(t,e,n,i){this.ray=new zr(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new al,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Gu(t,e){return t.distance-e.distance}function Xc(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),i===!0){const r=t.children;for(let s=0,o=r.length;s<o;s++)Xc(r[s],e,n,!0)}}Object.assign(Ea.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,n){const i=n||[];return Xc(t,this,i,e),i.sort(Gu),i},intersectObjects:function(t,e,n){const i=n||[];if(Array.isArray(t)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=t.length;r<s;r++)Xc(t[r],this,i,e);return i.sort(Gu),i}});class X0{constructor(e=1,n=0,i=0){return this.radius=e,this.phi=n,this.theta=i,this}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(be.clamp(n/this.radius,-1,1))),this}}class Y0{constructor(e,n,i){return this.radius=e!==void 0?e:1,this.theta=n!==void 0?n:0,this.y=i!==void 0?i:0,this}set(e,n,i){return this.radius=e,this.theta=n,this.y=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=n,this}}const zu=new Y;class Dd{constructor(e,n){Object.defineProperty(this,"isBox2",{value:!0}),this.min=e!==void 0?e:new Y(1/0,1/0),this.max=n!==void 0?n:new Y(-1/0,-1/0)}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=zu.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Y),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Y),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,n){return n===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),n=new Y),n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,n){return n===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),n=new Y),n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return zu.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Hu=new C,Lo=new C;class Od{constructor(e,n){this.start=e!==void 0?e:new C,this.end=n!==void 0?n:new C}set(e,n){return this.start.copy(e),this.end.copy(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new C),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new C),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,n){return n===void 0&&(console.warn("THREE.Line3: .at() target is now required"),n=new C),this.delta(n).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,n){Hu.subVectors(e,this.start),Lo.subVectors(this.end,this.start);const i=Lo.dot(Lo);let s=Lo.dot(Hu)/i;return n&&(s=be.clamp(s,0,1)),s}closestPointToPoint(e,n,i){const r=this.closestPointToPointParameter(e,n);return i===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new C),this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function Ns(t){me.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Ns.prototype=Object.create(me.prototype);Ns.prototype.constructor=Ns;Ns.prototype.isImmediateRenderObject=!0;const Vu=new C;class Z0 extends me{constructor(e,n){super();this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new xe,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,c=32;o<c;o++,a++){const l=o/c*Math.PI*2,h=a/c*Math.PI*2;r.push(Math.cos(l),Math.sin(l),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new ie(r,3));const s=new Je({fog:!1,toneMapped:!1});this.cone=new Mt(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,n=e*Math.tan(this.light.angle);this.cone.scale.set(n,n,e),Vu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Vu),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Wn=new C,Co=new fe,rc=new fe;class Fd extends Mt{constructor(e){const n=Bd(e),i=new xe,r=[],s=[],o=new oe(0,0,1),a=new oe(0,1,0);for(let l=0;l<n.length;l++){const h=n[l];h.parent&&h.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new ie(r,3)),i.setAttribute("color",new ie(s,3));const c=new Je({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,c);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=n,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const n=this.bones,i=this.geometry,r=i.getAttribute("position");rc.getInverse(this.root.matrixWorld);for(let s=0,o=0;s<n.length;s++){const a=n[s];a.parent&&a.parent.isBone&&(Co.multiplyMatrices(rc,a.matrixWorld),Wn.setFromMatrixPosition(Co),r.setXYZ(o,Wn.x,Wn.y,Wn.z),Co.multiplyMatrices(rc,a.parent.matrixWorld),Wn.setFromMatrixPosition(Co),r.setXYZ(o+1,Wn.x,Wn.y,Wn.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function Bd(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Bd(t.children[n]));return e}class J0 extends je{constructor(e,n,i){const r=new Ma(n,4,2),s=new kt({wireframe:!0,fog:!1,toneMapped:!1});super(r,s);this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const K0=new C,ku=new oe,Wu=new oe;class $0 extends me{constructor(e,n,i){super();this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const r=new ba(n);r.rotateY(Math.PI*.5),this.material=new kt({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new we(o,3)),this.add(new je(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const n=e.geometry.getAttribute("color");ku.copy(this.light.color),Wu.copy(this.light.groundColor);for(let i=0,r=n.count;i<r;i++){const s=i<r/2?ku:Wu;n.setXYZ(i,s.r,s.g,s.b)}n.needsUpdate=!0}e.lookAt(K0.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Nd extends Mt{constructor(e,n,i,r){e=e||10,n=n||10,i=new oe(i!==void 0?i:4473924),r=new oe(r!==void 0?r:8947848);const s=n/2,o=e/n,a=e/2,c=[],l=[];for(let f=0,d=0,m=-a;f<=n;f++,m+=o){c.push(-a,0,m,a,0,m),c.push(m,0,-a,m,0,a);const b=f===s?i:r;b.toArray(l,d),d+=3,b.toArray(l,d),d+=3,b.toArray(l,d),d+=3,b.toArray(l,d),d+=3}const h=new xe;h.setAttribute("position",new ie(c,3)),h.setAttribute("color",new ie(l,3));const u=new Je({vertexColors:!0,toneMapped:!1});super(h,u);this.type="GridHelper"}}class Q0 extends Mt{constructor(e,n,i,r,s,o){e=e||10,n=n||16,i=i||8,r=r||64,s=new oe(s!==void 0?s:4473924),o=new oe(o!==void 0?o:8947848);const a=[],c=[];for(let u=0;u<=n;u++){const f=u/n*(Math.PI*2),d=Math.sin(f)*e,m=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,m);const b=u&1?s:o;c.push(b.r,b.g,b.b),c.push(b.r,b.g,b.b)}for(let u=0;u<=i;u++){const f=u&1?s:o,d=e-e/i*u;for(let m=0;m<r;m++){let b=m/r*(Math.PI*2),w=Math.sin(b)*d,v=Math.cos(b)*d;a.push(w,0,v),c.push(f.r,f.g,f.b),b=(m+1)/r*(Math.PI*2),w=Math.sin(b)*d,v=Math.cos(b)*d,a.push(w,0,v),c.push(f.r,f.g,f.b)}}const l=new xe;l.setAttribute("position",new ie(a,3)),l.setAttribute("color",new ie(c,3));const h=new Je({vertexColors:!0,toneMapped:!1});super(l,h);this.type="PolarGridHelper"}}const ju=new C,Ro=new C,qu=new C;class ex extends me{constructor(e,n,i){super();this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,n===void 0&&(n=1);let r=new xe;r.setAttribute("position",new ie([-n,n,0,n,n,0,n,-n,0,-n,-n,0,-n,n,0],3));const s=new Je({fog:!1,toneMapped:!1});this.lightPlane=new Nt(r,s),this.add(this.lightPlane),r=new xe,r.setAttribute("position",new ie([0,0,0,0,0,1],3)),this.targetLine=new Nt(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){ju.setFromMatrixPosition(this.light.matrixWorld),Ro.setFromMatrixPosition(this.light.target.matrixWorld),qu.subVectors(Ro,ju),this.lightPlane.lookAt(Ro),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ro),this.targetLine.scale.z=qu.length()}}const Po=new C,$e=new fn;class tx extends Mt{constructor(e){const n=new xe,i=new Je({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={},a=new oe(16755200),c=new oe(16711680),l=new oe(43775),h=new oe(16777215),u=new oe(3355443);f("n1","n2",a),f("n2","n4",a),f("n4","n3",a),f("n3","n1",a),f("f1","f2",a),f("f2","f4",a),f("f4","f3",a),f("f3","f1",a),f("n1","f1",a),f("n2","f2",a),f("n3","f3",a),f("n4","f4",a),f("p","n1",c),f("p","n2",c),f("p","n3",c),f("p","n4",c),f("u1","u2",l),f("u2","u3",l),f("u3","u1",l),f("c","t",h),f("p","c",u),f("cn1","cn2",u),f("cn3","cn4",u),f("cf1","cf2",u),f("cf3","cf4",u);function f(m,b,w){d(m,w),d(b,w)}function d(m,b){r.push(0,0,0),s.push(b.r,b.g,b.b),o[m]===void 0&&(o[m]=[]),o[m].push(r.length/3-1)}n.setAttribute("position",new ie(r,3)),n.setAttribute("color",new ie(s,3));super(n,i);this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,n=this.pointMap,i=1,r=1;$e.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),nt("c",n,e,$e,0,0,-1),nt("t",n,e,$e,0,0,1),nt("n1",n,e,$e,-i,-r,-1),nt("n2",n,e,$e,i,-r,-1),nt("n3",n,e,$e,-i,r,-1),nt("n4",n,e,$e,i,r,-1),nt("f1",n,e,$e,-i,-r,1),nt("f2",n,e,$e,i,-r,1),nt("f3",n,e,$e,-i,r,1),nt("f4",n,e,$e,i,r,1),nt("u1",n,e,$e,i*.7,r*1.1,-1),nt("u2",n,e,$e,-i*.7,r*1.1,-1),nt("u3",n,e,$e,0,r*2,-1),nt("cf1",n,e,$e,-i,0,1),nt("cf2",n,e,$e,i,0,1),nt("cf3",n,e,$e,0,-r,1),nt("cf4",n,e,$e,0,r,1),nt("cn1",n,e,$e,-i,0,-1),nt("cn2",n,e,$e,i,0,-1),nt("cn3",n,e,$e,0,-r,-1),nt("cn4",n,e,$e,0,r,-1),e.getAttribute("position").needsUpdate=!0}}function nt(t,e,n,i,r,s,o){Po.set(r,s,o).unproject(i);const a=e[t];if(a!==void 0){const c=n.getAttribute("position");for(let l=0,h=a.length;l<h;l++)c.setXYZ(a[l],Po.x,Po.y,Po.z)}}const Io=new sn;class Ud extends Mt{constructor(e,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),s=new xe;s.setIndex(new we(i,1)),s.setAttribute("position",new we(r,3));super(s,new Je({color:n,toneMapped:!1}));this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Io.setFromObject(this.object),Io.isEmpty())return;const n=Io.min,i=Io.max,r=this.geometry.attributes.position,s=r.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=n.x,s[4]=i.y,s[5]=i.z,s[6]=n.x,s[7]=n.y,s[8]=i.z,s[9]=i.x,s[10]=n.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=n.z,s[15]=n.x,s[16]=i.y,s[17]=n.z,s[18]=n.x,s[19]=n.y,s[20]=n.z,s[21]=i.x,s[22]=n.y,s[23]=n.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return Mt.prototype.copy.call(this,e),this.object=e.object,this}}class nx extends Mt{constructor(e,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new xe;s.setIndex(new we(i,1)),s.setAttribute("position",new ie(r,3));super(s,new Je({color:n,toneMapped:!1}));this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const n=this.box;n.isEmpty()||(n.getCenter(this.position),n.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class ix extends Nt{constructor(e,n,i){const r=i!==void 0?i:16776960,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new xe;o.setAttribute("position",new ie(s,3)),o.computeBoundingSphere();super(o,new Je({color:r,toneMapped:!1}));this.type="PlaneHelper",this.plane=e,this.size=n===void 0?1:n;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],c=new xe;c.setAttribute("position",new ie(a,3)),c.computeBoundingSphere(),this.add(new je(c,new kt({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let n=-this.plane.constant;Math.abs(n)<1e-8&&(n=1e-8),this.scale.set(.5*this.size,.5*this.size,n),this.children[0].material.side=n<0?lt:Bi,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const Xu=new C;let Do,sc;class rx extends me{constructor(e,n,i,r,s,o){super();this.type="ArrowHelper",e===void 0&&(e=new C(0,0,1)),n===void 0&&(n=new C(0,0,0)),i===void 0&&(i=1),r===void 0&&(r=16776960),s===void 0&&(s=.2*i),o===void 0&&(o=.2*s),Do===void 0&&(Do=new xe,Do.setAttribute("position",new ie([0,0,0,0,1,0],3)),sc=new Xs(0,.5,1,5,1),sc.translate(0,-.5,0)),this.position.copy(n),this.line=new Nt(Do,new Je({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new je(sc,new kt({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Xu.set(e.z,0,-e.x).normalize();const n=Math.acos(e.y);this.quaternion.setFromAxisAngle(Xu,n)}}setLength(e,n,i){n===void 0&&(n=.2*e),i===void 0&&(i=.2*n),this.line.scale.set(1,Math.max(1e-4,e-n),1),this.line.updateMatrix(),this.cone.scale.set(i,n,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class Gd extends Mt{constructor(e=1){const n=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new xe;r.setAttribute("position",new ie(n,3)),r.setAttribute("color",new ie(i,3));const s=new Je({vertexColors:!0,toneMapped:!1});super(r,s);this.type="AxesHelper"}}const xr=4,Yn=8,ln=Math.pow(2,Yn),zd=[.125,.215,.35,.446,.526,.582],Hd=Yn-xr+1+zd.length,sr=20,hn={[bt]:0,[Ln]:1,[ga]:2,[rl]:3,[sl]:4,[ol]:5,[ma]:6},oc=new Di,{_lodPlanes:ts,_sizeLods:Yu,_sigmas:Oo}=ax();let ac=null;const di=(1+Math.sqrt(5))/2,or=1/di,Zu=[new C(1,1,1),new C(-1,1,1),new C(1,1,-1),new C(-1,1,-1),new C(0,di,or),new C(0,di,-or),new C(or,0,di),new C(-or,0,di),new C(di,or,0),new C(-di,or,0)];class sx{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=cx(sr),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,r=100){ac=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(e,i,r,s),n>0&&this._blur(s,0,0,n),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=$u(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=Ku(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<ts.length;e++)ts[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(ac),e.scissorTest=!1,Fo(e,0,0,e.width,e.height)}_fromTexture(e){ac=this._renderer.getRenderTarget();const n=this._allocateTargets(e);return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(e){const n={magFilter:ut,minFilter:ut,generateMipmaps:!1,type:Gr,format:Jh,encoding:ox(e)?e.encoding:ga,depthBuffer:!1},i=Ju(n);return i.depthBuffer=!e,this._pingPongRenderTarget=Ju(n),i}_compileMaterial(e){const n=new je(ts[0],e);this._renderer.compile(n,oc)}_sceneToCubeUV(e,n,i,r){const a=new Qe(90,1,n,i),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],h=this._renderer,u=h.outputEncoding,f=h.toneMapping,d=h.getClearColor(),m=h.getClearAlpha();h.toneMapping=xi,h.outputEncoding=bt;let b=e.background;if(b&&b.isColor){b.convertSRGBToLinear();const w=Math.max(b.r,b.g,b.b),v=Math.min(Math.max(Math.ceil(Math.log2(w)),-128),127);b=b.multiplyScalar(Math.pow(2,-v));const p=(v+128)/255;h.setClearColor(b,p),e.background=null}for(let w=0;w<6;w++){const v=w%3;v==0?(a.up.set(0,c[w],0),a.lookAt(l[w],0,0)):v==1?(a.up.set(0,0,c[w]),a.lookAt(0,l[w],0)):(a.up.set(0,c[w],0),a.lookAt(0,0,l[w])),Fo(r,v*ln,w>2?ln:0,ln,ln),h.setRenderTarget(r),h.render(e,a)}h.toneMapping=f,h.outputEncoding=u,h.setClearColor(d,m)}_textureToCubeUV(e,n){const i=this._renderer;e.isCubeTexture?this._cubemapShader==null&&(this._cubemapShader=$u()):this._equirectShader==null&&(this._equirectShader=Ku());const r=e.isCubeTexture?this._cubemapShader:this._equirectShader,s=new je(ts[0],r),o=r.uniforms;o.envMap.value=e,e.isCubeTexture||o.texelSize.value.set(1/e.image.width,1/e.image.height),o.inputEncoding.value=hn[e.encoding],o.outputEncoding.value=hn[n.texture.encoding],Fo(n,0,0,3*ln,2*ln),i.setRenderTarget(n),i.render(s,oc)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<Hd;r++){const s=Math.sqrt(Oo[r]*Oo[r]-Oo[r-1]*Oo[r-1]),o=Zu[(r-1)%Zu.length];this._blur(e,r-1,r,s,o)}n.autoClear=i}_blur(e,n,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,n,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,n,i,r,s,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new je(ts[r],l),f=l.uniforms,d=Yu[i]-1,m=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*sr-1),b=s/m,w=isFinite(s)?1+Math.floor(h*b):sr;w>sr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${w} samples when the maximum is set to ${sr}`);const v=[];let p=0;for(let S=0;S<sr;++S){const D=S/b,N=Math.exp(-D*D/2);v.push(N),S==0?p+=N:S<w&&(p+=2*N)}for(let S=0;S<v.length;S++)v[S]=v[S]/p;f.envMap.value=e.texture,f.samples.value=w,f.weights.value=v,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a),f.dTheta.value=m,f.mipInt.value=Yn-i,f.inputEncoding.value=hn[e.texture.encoding],f.outputEncoding.value=hn[e.texture.encoding];const E=Yu[r],A=3*Math.max(0,ln-2*E),R=(r===0?0:2*ln)+2*E*(r>Yn-xr?r-Yn+xr:0);Fo(n,A,R,3*E,2*E),c.setRenderTarget(n),c.render(u,oc)}}function ox(t){return t===void 0||t.type!==Gr?!1:t.encoding===bt||t.encoding===Ln||t.encoding===ma}function ax(){const t=[],e=[],n=[];let i=Yn;for(let r=0;r<Hd;r++){const s=Math.pow(2,i);e.push(s);let o=1/s;r>Yn-xr?o=zd[r-Yn+xr-1]:r==0&&(o=0),n.push(o);const a=1/(s-1),c=-a/2,l=1+a/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,f=6,d=3,m=2,b=1,w=new Float32Array(d*f*u),v=new Float32Array(m*f*u),p=new Float32Array(b*f*u);for(let A=0;A<u;A++){const R=A%3*2/3-1,S=A>2?0:-1,D=[R,S,0,R+2/3,S,0,R+2/3,S+1,0,R,S,0,R+2/3,S+1,0,R,S+1,0];w.set(D,d*f*A),v.set(h,m*f*A);const N=[A,A,A,A,A,A];p.set(N,b*f*A)}const E=new xe;E.setAttribute("position",new we(w,d)),E.setAttribute("uv",new we(v,m)),E.setAttribute("faceIndex",new we(p,b)),t.push(E),i>xr&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function Ju(t){const e=new Dt(3*ln,3*ln,t);return e.texture.mapping=Nr,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Fo(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function cx(t){const e=new Float32Array(t),n=new C(0,1,0);return new Dn({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:hn[bt]},outputEncoding:{value:hn[bt]}},vertexShader:Dl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Ol()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Rn,depthTest:!1,depthWrite:!1})}function Ku(){const t=new Y(1,1);return new Dn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:hn[bt]},outputEncoding:{value:hn[bt]}},vertexShader:Dl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Ol()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Rn,depthTest:!1,depthWrite:!1})}function $u(){return new Dn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:hn[bt]},outputEncoding:{value:hn[bt]}},vertexShader:Dl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Ol()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Rn,depthTest:!1,depthWrite:!1})}function Dl(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ol(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function lx(t,e,n,i,r,s,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new gs(t,e,n,r,s,o)}const ux=0,hx=1,fx=0,dx=1,px=2;function mx(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function gx(t){return t===void 0&&(t=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function vx(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Ar(t,e)}function yx(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Ms(t)}function xx(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Ar(t,e)}function _x(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Qt(t)}function bx(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Qt(t)}function wx(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Qt(t)}function Mx(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new C(t,e,n)}function Sx(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new we(t,e).setUsage(wi)}function Tx(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new vs(t,e)}function Ex(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new ys(t,e)}function Ax(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new xs(t,e)}function Lx(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new _s(t,e)}function Cx(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Jn(t,e)}function Rx(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new bs(t,e)}function Px(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Mi(t,e)}function Ix(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new ie(t,e)}function Dx(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new ws(t,e)}ye.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(ye.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t};Object.assign(Cn.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=new Ue;for(let n=0,i=t.length;n<i;n++){const r=t[n];e.vertices.push(new C(r.x,r.y,r.z||0))}return e}});Object.assign(Kt.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}});function Vd(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),xt.call(this,t),this.type="catmullrom",this.closed=!0}Vd.prototype=Object.create(xt.prototype);function kd(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),xt.call(this,t),this.type="catmullrom"}kd.prototype=Object.create(xt.prototype);function Fl(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),xt.call(this,t),this.type="catmullrom"}Fl.prototype=Object.create(xt.prototype);Object.assign(Fl.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function Ox(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Gd(t)}function Fx(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Ud(t,e)}function Bx(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Mt(new bl(t.geometry),new Je({color:e!==void 0?e:16777215}))}Nd.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};Fd.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function Nx(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Mt(new cl(t.geometry),new Je({color:e!==void 0?e:16777215}))}Object.assign(Ne.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),yr.extractUrlBase(t)}});Ne.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function Ux(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Ut(t)}function Gx(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new na(t)}Object.assign(ca.prototype,{setTexturePath:function(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}});Object.assign(Dd.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}});Object.assign(sn.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}});Object.assign(Bn.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});js.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)};Od.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)};Object.assign(be,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),be.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),be.ceilPowerOfTwo(t)}});Object.assign(yt.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(fe.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new C().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,s)}});un.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)};st.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)};Object.assign(zr.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}});Object.assign(vt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}});Object.assign(vt,{barycoordFromPoint:function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),vt.getBarycoord(t,e,n,i,r)},normal:function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),vt.getNormal(t,e,n,i)}});Object.assign(Xn.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ml(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new xl(this,t)}});Object.assign(Y.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(C.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Be.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Ue.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(t){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.assign(me.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.defineProperties(me.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(je.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(je.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Nf},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(Ss.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(Es.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});Ts.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(ye.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}});Qe.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)};Object.defineProperties(qe.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}});Object.defineProperties(we.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===wi},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(wi)}}});Object.assign(we.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?wi:ks),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(xe.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new we(arguments[1],arguments[2]))):t==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e)},addDrawCall:function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.defineProperties(xe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(Bs.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}});Object.defineProperties(Ea.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}});Object.defineProperties(Pt.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===wi},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}});Object.assign(Pt.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?wi:ks),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(qs.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.assign(_a.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties(Ta.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(Se.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new oe}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===Qc}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}});Object.defineProperties(Ot.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(On.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}});Object.defineProperties(wt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}});Object.assign(Vr.prototype,{clearTarget:function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(Vr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=t===!0?Ln:bt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(nd.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function zx(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Kn(t,n)}Object.defineProperties(Dt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}});Object.defineProperties(Ll.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new la().load(t,function(i){e.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});Rd.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};Sr.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};const Hx={merge:function(t,e,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");let i;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,n)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}};Zn.crossOrigin=void 0;Zn.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Ir;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s};Zn.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new ta;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s};Zn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Zn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function Vx(){console.error("THREE.CanvasRenderer has been removed")}function kx(){console.error("THREE.JSONLoader has been removed.")}const Wx={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function jx(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:hh}}));var qx=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Gh,AddEquation:mi,AddOperation:Fh,AdditiveAnimationBlendMode:il,AdditiveBlending:hc,AlphaFormat:Xh,AlwaysDepth:Lh,AlwaysStencilFunc:Vf,AmbientLight:Oi,AmbientLightProbe:Wc,AnimationClip:Rt,AnimationLoader:Fc,AnimationMixer:jc,AnimationObjectGroup:Id,AnimationUtils:Ye,ArcCurve:Dr,ArrayCamera:qo,ArrowHelper:rx,Audio:Ll,AudioAnalyser:Rd,AudioContext:Al,AudioListener:F0,AudioLoader:la,AxesHelper:Gd,AxisHelper:Ox,BackSide:lt,BasicDepthPacking:Gf,BasicShadowMap:dp,BinaryTextureLoader:Gx,Bone:As,BooleanKeyframeTrack:Ko,BoundingBoxHelper:Fx,Box2:Dd,Box3:sn,Box3Helper:nx,BoxBufferGeometry:Ws,BoxGeometry:Lc,BoxHelper:Ud,BufferAttribute:we,BufferGeometry:xe,BufferGeometryLoader:aa,ByteType:Hh,Cache:Ii,Camera:fn,CameraHelper:tx,CanvasRenderer:Vx,CanvasTexture:Ls,CatmullRomCurve3:xt,CineonToneMapping:Uh,CircleBufferGeometry:Ml,CircleGeometry:Td,ClampToEdgeWrapping:pt,Clock:Cd,ClosedSplineCurve3:Vd,Color:oe,ColorKeyframeTrack:$o,CompressedTexture:Lr,CompressedTextureLoader:Bc,ConeBufferGeometry:Sd,ConeGeometry:Md,CubeCamera:Sr,CubeGeometry:Lc,CubeReflectionMapping:zs,CubeRefractionMapping:Hs,CubeTexture:In,CubeTextureLoader:ta,CubeUVReflectionMapping:Nr,CubeUVRefractionMapping:Vs,CubicBezierCurve:en,CubicBezierCurve3:pn,CubicInterpolant:Zo,CullFaceBack:uc,CullFaceFront:dh,CullFaceFrontBack:fp,CullFaceNone:fh,Curve:ye,CurvePath:Cn,CustomBlending:mh,CustomToneMapping:zh,CylinderBufferGeometry:Xs,CylinderGeometry:wl,Cylindrical:Y0,DataTexture:Si,DataTexture2DArray:Tr,DataTexture3D:Er,DataTextureLoader:na,DecrementStencilOp:Sp,DecrementWrapStencilOp:Ep,DefaultLoadingManager:Ed,DepthFormat:_i,DepthStencilFormat:wr,DepthTexture:Cs,DirectionalLight:Fr,DirectionalLightHelper:ex,DiscreteInterpolant:Jo,DodecahedronBufferGeometry:hl,DodecahedronGeometry:ud,DoubleSide:Gs,DstAlphaFactor:wh,DstColorFactor:Sh,DynamicBufferAttribute:Sx,DynamicCopyUsage:zp,DynamicDrawUsage:wi,DynamicReadUsage:Np,EdgesGeometry:bl,EdgesHelper:Bx,EllipseCurve:Gt,EqualDepth:Rh,EqualStencilFunc:Rp,EquirectangularReflectionMapping:br,EquirectangularRefractionMapping:ko,Euler:Jt,EventDispatcher:vn,ExtrudeBufferGeometry:qs,ExtrudeGeometry:ml,Face3:gs,Face4:lx,FaceColors:dx,FileLoader:Ut,FlatShading:Qc,Float32Attribute:Ix,Float32BufferAttribute:ie,Float64Attribute:Dx,Float64BufferAttribute:ws,FloatType:An,Fog:xa,FogExp2:ya,Font:El,FontLoader:Vc,FrontSide:Bi,Frustum:js,GLBufferAttribute:Il,GLSL1:Vp,GLSL3:Ec,GammaEncoding:ma,Geometry:Ue,GeometryUtils:Hx,GreaterDepth:Ih,GreaterEqualDepth:Ph,GreaterEqualStencilFunc:Op,GreaterStencilFunc:Ip,GridHelper:Nd,Group:$t,HalfFloatType:ds,HemisphereLight:ia,HemisphereLightHelper:$0,HemisphereLightProbe:kc,IcosahedronBufferGeometry:ul,IcosahedronGeometry:ld,ImageBitmapLoader:Hc,ImageLoader:Pr,ImageUtils:Zn,ImmediateRenderObject:Ns,IncrementStencilOp:Mp,IncrementWrapStencilOp:Tp,InstancedBufferAttribute:oa,InstancedBufferGeometry:Bs,InstancedInterleavedBuffer:qc,InstancedMesh:Xo,Int16Attribute:Lx,Int16BufferAttribute:_s,Int32Attribute:Rx,Int32BufferAttribute:bs,Int8Attribute:Tx,Int8BufferAttribute:vs,IntType:kh,InterleavedBuffer:Pt,InterleavedBufferAttribute:ei,Interpolant:Ft,InterpolateDiscrete:ps,InterpolateLinear:rs,InterpolateSmooth:Go,InvertStencilOp:Ap,JSONLoader:kx,KeepStencilOp:zo,KeyframeTrack:mt,LOD:Ss,LatheBufferGeometry:yl,LatheGeometry:bd,Layers:al,LensFlare:jx,LessDepth:Ch,LessEqualDepth:Vo,LessEqualStencilFunc:Pp,LessStencilFunc:Cp,Light:qe,LightProbe:Vt,LightShadow:gn,Line:Nt,Line3:Od,LineBasicMaterial:Je,LineCurve:Tt,LineCurve3:tn,LineDashedMaterial:Ci,LineLoop:Yo,LinePieces:hx,LineSegments:Mt,LineStrip:ux,LinearEncoding:bt,LinearFilter:rt,LinearInterpolant:Os,LinearMipMapLinearFilter:yp,LinearMipMapNearestFilter:vp,LinearMipmapLinearFilter:Ur,LinearMipmapNearestFilter:nl,LinearToneMapping:Bh,Loader:Ne,LoaderUtils:yr,LoadingManager:Sa,LogLuvEncoding:Uf,LoopOnce:Of,LoopPingPong:Bf,LoopRepeat:Ff,LuminanceAlphaFormat:Zh,LuminanceFormat:Yh,MOUSE:up,Material:Se,MaterialLoader:sa,Math:be,MathUtils:be,Matrix3:yt,Matrix4:fe,MaxEquation:mc,Mesh:je,MeshBasicMaterial:kt,MeshDepthMaterial:$n,MeshDistanceMaterial:Qn,MeshFaceMaterial:mx,MeshLambertMaterial:Fn,MeshMatcapMaterial:Li,MeshNormalMaterial:Ai,MeshPhongMaterial:Ot,MeshPhysicalMaterial:On,MeshStandardMaterial:dn,MeshToonMaterial:Ei,MinEquation:pc,MirroredRepeatWrapping:hs,MixOperation:Oh,MultiMaterial:gx,MultiplyBlending:dc,MultiplyOperation:Br,NearestFilter:ut,NearestMipMapLinearFilter:gp,NearestMipMapNearestFilter:mp,NearestMipmapLinearFilter:jo,NearestMipmapNearestFilter:Wo,NeverDepth:Ah,NeverStencilFunc:Lp,NoBlending:Rn,NoColors:fx,NoToneMapping:xi,NormalAnimationBlendMode:pa,NormalBlending:gr,NotEqualDepth:Dh,NotEqualStencilFunc:Dp,NumberKeyframeTrack:Ri,Object3D:me,ObjectLoader:ca,ObjectSpaceNormalMap:Hf,OctahedronBufferGeometry:ba,OctahedronGeometry:cd,OneFactor:xh,OneMinusDstAlphaFactor:Mh,OneMinusDstColorFactor:Th,OneMinusSrcAlphaFactor:tl,OneMinusSrcColorFactor:bh,OrthographicCamera:Di,PCFShadowMap:$c,PCFSoftShadowMap:ph,PMREMGenerator:sx,ParametricBufferGeometry:Cr,ParametricGeometry:Rs,Particle:yx,ParticleBasicMaterial:bx,ParticleSystem:xx,ParticleSystemMaterial:wx,Path:Kt,PerspectiveCamera:Qe,Plane:un,PlaneBufferGeometry:va,PlaneGeometry:Yf,PlaneHelper:ix,PointCloud:vx,PointCloudMaterial:_x,PointLight:Or,PointLightHelper:J0,Points:Ar,PointsMaterial:Qt,PolarGridHelper:Q0,PolyhedronBufferGeometry:Ui,PolyhedronGeometry:od,PositionalAudio:N0,PropertyBinding:ot,PropertyMixer:Cl,QuadraticBezierCurve:nn,QuadraticBezierCurve3:mn,Quaternion:st,QuaternionKeyframeTrack:Rr,QuaternionLinearInterpolant:Qo,REVISION:hh,RGBADepthPacking:zf,RGBAFormat:It,RGBAIntegerFormat:nf,RGBA_ASTC_10x10_Format:gf,RGBA_ASTC_10x5_Format:df,RGBA_ASTC_10x6_Format:pf,RGBA_ASTC_10x8_Format:mf,RGBA_ASTC_12x10_Format:vf,RGBA_ASTC_12x12_Format:yf,RGBA_ASTC_4x4_Format:sf,RGBA_ASTC_5x4_Format:of,RGBA_ASTC_5x5_Format:af,RGBA_ASTC_6x5_Format:cf,RGBA_ASTC_6x6_Format:lf,RGBA_ASTC_8x5_Format:uf,RGBA_ASTC_8x6_Format:hf,RGBA_ASTC_8x8_Format:ff,RGBA_BPTC_Format:xf,RGBA_ETC2_EAC_Format:Tc,RGBA_PVRTC_2BPPV1_Format:Mc,RGBA_PVRTC_4BPPV1_Format:wc,RGBA_S3TC_DXT1_Format:vc,RGBA_S3TC_DXT3_Format:yc,RGBA_S3TC_DXT5_Format:xc,RGBDEncoding:ol,RGBEEncoding:ga,RGBEFormat:Jh,RGBFormat:jn,RGBIntegerFormat:tf,RGBM16Encoding:sl,RGBM7Encoding:rl,RGB_ETC1_Format:rf,RGB_ETC2_Format:Sc,RGB_PVRTC_2BPPV1_Format:bc,RGB_PVRTC_4BPPV1_Format:_c,RGB_S3TC_DXT1_Format:gc,RGFormat:Qh,RGIntegerFormat:ef,RawShaderMaterial:Dn,Ray:zr,Raycaster:Ea,RectAreaLight:ra,RedFormat:Kh,RedIntegerFormat:$h,ReinhardToneMapping:Nh,RepeatWrapping:bi,ReplaceStencilOp:wp,ReverseSubtractEquation:vh,RingBufferGeometry:vl,RingGeometry:_d,SRGB8_ALPHA8_ASTC_10x10_Format:Pf,SRGB8_ALPHA8_ASTC_10x5_Format:Lf,SRGB8_ALPHA8_ASTC_10x6_Format:Cf,SRGB8_ALPHA8_ASTC_10x8_Format:Rf,SRGB8_ALPHA8_ASTC_12x10_Format:If,SRGB8_ALPHA8_ASTC_12x12_Format:Df,SRGB8_ALPHA8_ASTC_4x4_Format:_f,SRGB8_ALPHA8_ASTC_5x4_Format:bf,SRGB8_ALPHA8_ASTC_5x5_Format:wf,SRGB8_ALPHA8_ASTC_6x5_Format:Mf,SRGB8_ALPHA8_ASTC_6x6_Format:Sf,SRGB8_ALPHA8_ASTC_8x5_Format:Tf,SRGB8_ALPHA8_ASTC_8x6_Format:Ef,SRGB8_ALPHA8_ASTC_8x8_Format:Af,Scene:_a,SceneUtils:Wx,ShaderChunk:De,ShaderLib:Zt,ShaderMaterial:wt,ShadowMaterial:Ti,Shape:Xn,ShapeBufferGeometry:_l,ShapeGeometry:xl,ShapePath:Tl,ShapeUtils:Pn,ShortType:Vh,Skeleton:Es,SkeletonHelper:Fd,SkinnedMesh:Ts,SmoothShading:pp,Sphere:Bn,SphereBufferGeometry:Ma,SphereGeometry:xd,Spherical:X0,SphericalHarmonics3:Ad,Spline:Fl,SplineCurve:rn,SplineCurve3:kd,SpotLight:Fs,SpotLightHelper:Z0,Sprite:Ms,SpriteMaterial:ti,SrcAlphaFactor:el,SrcAlphaSaturateFactor:Eh,SrcColorFactor:_h,StaticCopyUsage:Gp,StaticDrawUsage:ks,StaticReadUsage:Bp,StereoCamera:Ld,StreamCopyUsage:Hp,StreamDrawUsage:Fp,StreamReadUsage:Up,StringKeyframeTrack:ea,SubtractEquation:gh,SubtractiveBlending:fc,TOUCH:hp,TangentSpaceNormalMap:Ni,TetrahedronBufferGeometry:ll,TetrahedronGeometry:ad,TextBufferGeometry:gl,TextGeometry:yd,Texture:Ge,TextureLoader:Ir,TorusBufferGeometry:pl,TorusGeometry:dd,TorusKnotBufferGeometry:dl,TorusKnotGeometry:fd,Triangle:vt,TriangleFanDrawMode:_p,TriangleStripDrawMode:xp,TrianglesDrawMode:Nf,TubeBufferGeometry:fl,TubeGeometry:hd,UVMapping:da,Uint16Attribute:Cx,Uint16BufferAttribute:Jn,Uint32Attribute:Px,Uint32BufferAttribute:Mi,Uint8Attribute:Ex,Uint8BufferAttribute:ys,Uint8ClampedAttribute:Ax,Uint8ClampedBufferAttribute:xs,Uniform:Ta,UniformsLib:he,UniformsUtils:qf,UnsignedByteType:Gr,UnsignedInt248Type:vr,UnsignedIntType:is,UnsignedShort4444Type:Wh,UnsignedShort5551Type:jh,UnsignedShort565Type:qh,UnsignedShortType:fs,VSMShadowMap:hr,Vector2:Y,Vector3:C,Vector4:Be,VectorKeyframeTrack:Pi,Vertex:Mx,VertexColors:px,VideoTexture:Ic,WebGL1Renderer:Rc,WebGLCubeRenderTarget:Kn,WebGLMultisampleRenderTarget:Ac,WebGLRenderTarget:Dt,WebGLRenderTargetCube:zx,WebGLRenderer:Vr,WebGLUtils:id,WireframeGeometry:cl,WireframeHelper:Nx,WrapAroundEnding:ms,XHRLoader:Ux,ZeroCurvatureEnding:vi,ZeroFactor:yh,ZeroSlopeEnding:yi,ZeroStencilOp:bp,sRGBEncoding:Ln},Symbol.toStringTag,{value:"Module"})),Yc={exports:{}},Xx=rp(qx);(function(t,e){var n=Xx;n.OrbitControls=function(i,r){r===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),r===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=i,this.domElement=r,this.enabled=!0,this.target=new n.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:n.MOUSE.ROTATE,MIDDLE:n.MOUSE.DOLLY,RIGHT:n.MOUSE.PAN},this.touches={ONE:n.TOUCH.ROTATE,TWO:n.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return f.phi},this.getAzimuthalAngle=function(){return f.theta},this.saveState=function(){s.target0.copy(s.target),s.position0.copy(s.object.position),s.zoom0=s.object.zoom},this.reset=function(){s.target.copy(s.target0),s.object.position.copy(s.position0),s.object.zoom=s.zoom0,s.object.updateProjectionMatrix(),s.dispatchEvent(o),s.update(),h=l.NONE},this.update=function(){var B=new n.Vector3,ne=new n.Quaternion().setFromUnitVectors(i.up,new n.Vector3(0,1,0)),pe=ne.clone().inverse(),se=new n.Vector3,_e=new n.Quaternion;return function(){var et=s.object.position;return B.copy(et).sub(s.target),B.applyQuaternion(ne),f.setFromVector3(B),s.autoRotate&&h===l.NONE&&x(g()),s.enableDamping?(f.theta+=d.theta*s.dampingFactor,f.phi+=d.phi*s.dampingFactor):(f.theta+=d.theta,f.phi+=d.phi),f.theta=Math.max(s.minAzimuthAngle,Math.min(s.maxAzimuthAngle,f.theta)),f.phi=Math.max(s.minPolarAngle,Math.min(s.maxPolarAngle,f.phi)),f.makeSafe(),f.radius*=m,f.radius=Math.max(s.minDistance,Math.min(s.maxDistance,f.radius)),s.enableDamping===!0?s.target.addScaledVector(b,s.dampingFactor):s.target.add(b),B.setFromSpherical(f),B.applyQuaternion(pe),et.copy(s.target).add(B),s.object.lookAt(s.target),s.enableDamping===!0?(d.theta*=1-s.dampingFactor,d.phi*=1-s.dampingFactor,b.multiplyScalar(1-s.dampingFactor)):(d.set(0,0,0),b.set(0,0,0)),m=1,w||se.distanceToSquared(s.object.position)>u||8*(1-_e.dot(s.object.quaternion))>u?(s.dispatchEvent(o),se.copy(s.object.position),_e.copy(s.object.quaternion),w=!1,!0):!1}}(),this.dispose=function(){s.domElement.removeEventListener("contextmenu",re,!1),s.domElement.removeEventListener("mousedown",P,!1),s.domElement.removeEventListener("wheel",K,!1),s.domElement.removeEventListener("touchstart",ee,!1),s.domElement.removeEventListener("touchend",ve,!1),s.domElement.removeEventListener("touchmove",ae,!1),document.removeEventListener("mousemove",F,!1),document.removeEventListener("mouseup",$,!1),s.domElement.removeEventListener("keydown",G,!1)};var s=this,o={type:"change"},a={type:"start"},c={type:"end"},l={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},h=l.NONE,u=1e-6,f=new n.Spherical,d=new n.Spherical,m=1,b=new n.Vector3,w=!1,v=new n.Vector2,p=new n.Vector2,E=new n.Vector2,A=new n.Vector2,R=new n.Vector2,S=new n.Vector2,D=new n.Vector2,N=new n.Vector2,U=new n.Vector2;function g(){return 2*Math.PI/60/60*s.autoRotateSpeed}function y(){return Math.pow(.95,s.zoomSpeed)}function x(B){d.theta-=B}function M(B){d.phi-=B}var _=function(){var B=new n.Vector3;return function(pe,se){B.setFromMatrixColumn(se,0),B.multiplyScalar(-pe),b.add(B)}}(),T=function(){var B=new n.Vector3;return function(pe,se){s.screenSpacePanning===!0?B.setFromMatrixColumn(se,1):(B.setFromMatrixColumn(se,0),B.crossVectors(s.object.up,B)),B.multiplyScalar(pe),b.add(B)}}(),L=function(){var B=new n.Vector3;return function(pe,se){var _e=s.domElement;if(s.object.isPerspectiveCamera){var He=s.object.position;B.copy(He).sub(s.target);var et=B.length();et*=Math.tan(s.object.fov/2*Math.PI/180),_(2*pe*et/_e.clientHeight,s.object.matrix),T(2*se*et/_e.clientHeight,s.object.matrix)}else s.object.isOrthographicCamera?(_(pe*(s.object.right-s.object.left)/s.object.zoom/_e.clientWidth,s.object.matrix),T(se*(s.object.top-s.object.bottom)/s.object.zoom/_e.clientHeight,s.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),s.enablePan=!1)}}();function I(B){s.object.isPerspectiveCamera?m/=B:s.object.isOrthographicCamera?(s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom*B)),s.object.updateProjectionMatrix(),w=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function z(B){s.object.isPerspectiveCamera?m*=B:s.object.isOrthographicCamera?(s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom/B)),s.object.updateProjectionMatrix(),w=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function V(B){v.set(B.clientX,B.clientY)}function H(B){D.set(B.clientX,B.clientY)}function k(B){A.set(B.clientX,B.clientY)}function Z(B){p.set(B.clientX,B.clientY),E.subVectors(p,v).multiplyScalar(s.rotateSpeed);var ne=s.domElement;x(2*Math.PI*E.x/ne.clientHeight),M(2*Math.PI*E.y/ne.clientHeight),v.copy(p),s.update()}function ce(B){N.set(B.clientX,B.clientY),U.subVectors(N,D),U.y>0?I(y()):U.y<0&&z(y()),D.copy(N),s.update()}function Ee(B){R.set(B.clientX,B.clientY),S.subVectors(R,A).multiplyScalar(s.panSpeed),L(S.x,S.y),A.copy(R),s.update()}function j(B){B.deltaY<0?z(y()):B.deltaY>0&&I(y()),s.update()}function Pe(B){var ne=!1;switch(B.keyCode){case s.keys.UP:L(0,s.keyPanSpeed),ne=!0;break;case s.keys.BOTTOM:L(0,-s.keyPanSpeed),ne=!0;break;case s.keys.LEFT:L(s.keyPanSpeed,0),ne=!0;break;case s.keys.RIGHT:L(-s.keyPanSpeed,0),ne=!0;break}ne&&(B.preventDefault(),s.update())}function de(B){if(B.touches.length==1)v.set(B.touches[0].pageX,B.touches[0].pageY);else{var ne=.5*(B.touches[0].pageX+B.touches[1].pageX),pe=.5*(B.touches[0].pageY+B.touches[1].pageY);v.set(ne,pe)}}function Te(B){if(B.touches.length==1)A.set(B.touches[0].pageX,B.touches[0].pageY);else{var ne=.5*(B.touches[0].pageX+B.touches[1].pageX),pe=.5*(B.touches[0].pageY+B.touches[1].pageY);A.set(ne,pe)}}function Me(B){var ne=B.touches[0].pageX-B.touches[1].pageX,pe=B.touches[0].pageY-B.touches[1].pageY,se=Math.sqrt(ne*ne+pe*pe);D.set(0,se)}function Ie(B){s.enableZoom&&Me(B),s.enablePan&&Te(B)}function Ae(B){s.enableZoom&&Me(B),s.enableRotate&&de(B)}function J(B){if(B.touches.length==1)p.set(B.touches[0].pageX,B.touches[0].pageY);else{var ne=.5*(B.touches[0].pageX+B.touches[1].pageX),pe=.5*(B.touches[0].pageY+B.touches[1].pageY);p.set(ne,pe)}E.subVectors(p,v).multiplyScalar(s.rotateSpeed);var se=s.domElement;x(2*Math.PI*E.x/se.clientHeight),M(2*Math.PI*E.y/se.clientHeight),v.copy(p)}function Q(B){if(B.touches.length==1)R.set(B.touches[0].pageX,B.touches[0].pageY);else{var ne=.5*(B.touches[0].pageX+B.touches[1].pageX),pe=.5*(B.touches[0].pageY+B.touches[1].pageY);R.set(ne,pe)}S.subVectors(R,A).multiplyScalar(s.panSpeed),L(S.x,S.y),A.copy(R)}function te(B){var ne=B.touches[0].pageX-B.touches[1].pageX,pe=B.touches[0].pageY-B.touches[1].pageY,se=Math.sqrt(ne*ne+pe*pe);N.set(0,se),U.set(0,Math.pow(N.y/D.y,s.zoomSpeed)),I(U.y),D.copy(N)}function ge(B){s.enableZoom&&te(B),s.enablePan&&Q(B)}function le(B){s.enableZoom&&te(B),s.enableRotate&&J(B)}function P(B){if(s.enabled!==!1){switch(B.preventDefault(),s.domElement.focus?s.domElement.focus():window.focus(),B.button){case 0:switch(s.mouseButtons.LEFT){case n.MOUSE.ROTATE:if(B.ctrlKey||B.metaKey||B.shiftKey){if(s.enablePan===!1)return;k(B),h=l.PAN}else{if(s.enableRotate===!1)return;V(B),h=l.ROTATE}break;case n.MOUSE.PAN:if(B.ctrlKey||B.metaKey||B.shiftKey){if(s.enableRotate===!1)return;V(B),h=l.ROTATE}else{if(s.enablePan===!1)return;k(B),h=l.PAN}break;default:h=l.NONE}break;case 1:switch(s.mouseButtons.MIDDLE){case n.MOUSE.DOLLY:if(s.enableZoom===!1)return;H(B),h=l.DOLLY;break;default:h=l.NONE}break;case 2:switch(s.mouseButtons.RIGHT){case n.MOUSE.ROTATE:if(s.enableRotate===!1)return;V(B),h=l.ROTATE;break;case n.MOUSE.PAN:if(s.enablePan===!1)return;k(B),h=l.PAN;break;default:h=l.NONE}break}h!==l.NONE&&(document.addEventListener("mousemove",F,!1),document.addEventListener("mouseup",$,!1),s.dispatchEvent(a))}}function F(B){if(s.enabled!==!1)switch(B.preventDefault(),h){case l.ROTATE:if(s.enableRotate===!1)return;Z(B);break;case l.DOLLY:if(s.enableZoom===!1)return;ce(B);break;case l.PAN:if(s.enablePan===!1)return;Ee(B);break}}function $(B){s.enabled!==!1&&(document.removeEventListener("mousemove",F,!1),document.removeEventListener("mouseup",$,!1),s.dispatchEvent(c),h=l.NONE)}function K(B){s.enabled===!1||s.enableZoom===!1||h!==l.NONE&&h!==l.ROTATE||(B.preventDefault(),B.stopPropagation(),s.dispatchEvent(a),j(B),s.dispatchEvent(c))}function G(B){s.enabled===!1||s.enableKeys===!1||s.enablePan===!1||Pe(B)}function ee(B){if(s.enabled!==!1){switch(B.preventDefault(),B.touches.length){case 1:switch(s.touches.ONE){case n.TOUCH.ROTATE:if(s.enableRotate===!1)return;de(B),h=l.TOUCH_ROTATE;break;case n.TOUCH.PAN:if(s.enablePan===!1)return;Te(B),h=l.TOUCH_PAN;break;default:h=l.NONE}break;case 2:switch(s.touches.TWO){case n.TOUCH.DOLLY_PAN:if(s.enableZoom===!1&&s.enablePan===!1)return;Ie(B),h=l.TOUCH_DOLLY_PAN;break;case n.TOUCH.DOLLY_ROTATE:if(s.enableZoom===!1&&s.enableRotate===!1)return;Ae(B),h=l.TOUCH_DOLLY_ROTATE;break;default:h=l.NONE}break;default:h=l.NONE}h!==l.NONE&&s.dispatchEvent(a)}}function ae(B){if(s.enabled!==!1)switch(B.preventDefault(),B.stopPropagation(),h){case l.TOUCH_ROTATE:if(s.enableRotate===!1)return;J(B),s.update();break;case l.TOUCH_PAN:if(s.enablePan===!1)return;Q(B),s.update();break;case l.TOUCH_DOLLY_PAN:if(s.enableZoom===!1&&s.enablePan===!1)return;ge(B),s.update();break;case l.TOUCH_DOLLY_ROTATE:if(s.enableZoom===!1&&s.enableRotate===!1)return;le(B),s.update();break;default:h=l.NONE}}function ve(B){s.enabled!==!1&&(s.dispatchEvent(c),h=l.NONE)}function re(B){s.enabled!==!1&&B.preventDefault()}s.domElement.addEventListener("contextmenu",re,!1),s.domElement.addEventListener("mousedown",P,!1),s.domElement.addEventListener("wheel",K,!1),s.domElement.addEventListener("touchstart",ee,!1),s.domElement.addEventListener("touchend",ve,!1),s.domElement.addEventListener("touchmove",ae,!1),s.domElement.addEventListener("keydown",G,!1),s.domElement.tabIndex===-1&&(s.domElement.tabIndex=0),this.update()},n.OrbitControls.prototype=Object.create(n.EventDispatcher.prototype),n.OrbitControls.prototype.constructor=n.OrbitControls,n.MapControls=function(i,r){n.OrbitControls.call(this,i,r),this.mouseButtons.LEFT=n.MOUSE.PAN,this.mouseButtons.RIGHT=n.MOUSE.ROTATE,this.touches.ONE=n.TOUCH.PAN,this.touches.TWO=n.TOUCH.DOLLY_ROTATE},n.MapControls.prototype=Object.create(n.EventDispatcher.prototype),n.MapControls.prototype.constructor=n.MapControls,t.exports=e.default=n.OrbitControls})(Yc,Yc.exports);var Yx=Yc.exports;/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var Wd={},Ct=void 0,Zx=Wd;function Bl(t,e){var n=t.split("."),i=Zx;!(n[0]in i)&&i.execScript&&i.execScript("var "+n[0]);for(var r;n.length&&(r=n.shift());)!n.length&&e!==Ct?i[r]=e:i=i[r]?i[r]:i[r]={}}var Ze=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Uint32Array!="undefined"&&typeof DataView!="undefined";function gi(t){var e=t.length,n=0,i=Number.POSITIVE_INFINITY,r,s,o,a,c,l,h,u,f,d;for(u=0;u<e;++u)t[u]>n&&(n=t[u]),t[u]<i&&(i=t[u]);for(r=1<<n,s=new(Ze?Uint32Array:Array)(r),o=1,a=0,c=2;o<=n;){for(u=0;u<e;++u)if(t[u]===o){for(l=0,h=a,f=0;f<o;++f)l=l<<1|h&1,h>>=1;for(d=o<<16|u,f=l;f<r;f+=c)s[f]=d;++a}++o,a<<=1,c<<=1}return[s,n,i]}function ii(t,e){switch(this.g=[],this.h=32768,this.d=this.f=this.a=this.l=0,this.input=Ze?new Uint8Array(t):t,this.m=!1,this.i=ua,this.r=!1,(e||!(e={}))&&(e.index&&(this.a=e.index),e.bufferSize&&(this.h=e.bufferSize),e.bufferType&&(this.i=e.bufferType),e.resize&&(this.r=e.resize)),this.i){case Nl:this.b=32768,this.c=new(Ze?Uint8Array:Array)(32768+this.h+258);break;case ua:this.b=0,this.c=new(Ze?Uint8Array:Array)(this.h),this.e=this.z,this.n=this.v,this.j=this.w;break;default:throw Error("invalid inflate mode")}}var Nl=0,ua=1,Qu={t:Nl,s:ua};ii.prototype.k=function(){for(;!this.m;){var t=Ht(this,3);switch(t&1&&(this.m=!0),t>>>=1,t){case 0:var e=this.input,n=this.a,i=this.c,r=this.b,s=e.length,o=Ct,a=Ct,c=i.length,l=Ct;if(this.d=this.f=0,n+1>=s)throw Error("invalid uncompressed block header: LEN");if(o=e[n++]|e[n++]<<8,n+1>=s)throw Error("invalid uncompressed block header: NLEN");if(a=e[n++]|e[n++]<<8,o===~a)throw Error("invalid uncompressed block header: length verify");if(n+o>e.length)throw Error("input buffer is broken");switch(this.i){case Nl:for(;r+o>i.length;){if(l=c-r,o-=l,Ze)i.set(e.subarray(n,n+l),r),r+=l,n+=l;else for(;l--;)i[r++]=e[n++];this.b=r,i=this.e(),r=this.b}break;case ua:for(;r+o>i.length;)i=this.e({p:2});break;default:throw Error("invalid inflate mode")}if(Ze)i.set(e.subarray(n,n+o),r),r+=o,n+=o;else for(;o--;)i[r++]=e[n++];this.a=n,this.b=r,this.c=i;break;case 1:this.j(Jx,Kx);break;case 2:for(var h=Ht(this,5)+257,u=Ht(this,5)+1,f=Ht(this,4)+4,d=new(Ze?Uint8Array:Array)(cc.length),m=Ct,b=Ct,w=Ct,v=Ct,p=Ct,E=Ct,A=Ct,S=Ct,R=Ct,S=0;S<f;++S)d[cc[S]]=Ht(this,3);if(!Ze)for(S=f,f=d.length;S<f;++S)d[cc[S]]=0;for(m=gi(d),v=new(Ze?Uint8Array:Array)(h+u),S=0,R=h+u;S<R;)switch(p=Us(this,m),p){case 16:for(A=3+Ht(this,2);A--;)v[S++]=E;break;case 17:for(A=3+Ht(this,3);A--;)v[S++]=0;E=0;break;case 18:for(A=11+Ht(this,7);A--;)v[S++]=0;E=0;break;default:E=v[S++]=p}b=gi(Ze?v.subarray(0,h):v.slice(0,h)),w=gi(Ze?v.subarray(h):v.slice(h)),this.j(b,w);break;default:throw Error("unknown BTYPE: "+t)}}return this.n()};var eh=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],cc=Ze?new Uint16Array(eh):eh,th=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],jd=Ze?new Uint16Array(th):th,nh=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],ha=Ze?new Uint8Array(nh):nh,ih=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],qd=Ze?new Uint16Array(ih):ih,rh=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],fa=Ze?new Uint8Array(rh):rh,Zc=new(Ze?Uint8Array:Array)(288),pi,sh;pi=0;for(sh=Zc.length;pi<sh;++pi)Zc[pi]=143>=pi?8:255>=pi?9:279>=pi?7:8;var Jx=gi(Zc),Jc=new(Ze?Uint8Array:Array)(30),Ho,oh;Ho=0;for(oh=Jc.length;Ho<oh;++Ho)Jc[Ho]=5;var Kx=gi(Jc);function Ht(t,e){for(var n=t.f,i=t.d,r=t.input,s=t.a,o=r.length,a;i<e;){if(s>=o)throw Error("input buffer is broken");n|=r[s++]<<i,i+=8}return a=n&(1<<e)-1,t.f=n>>>e,t.d=i-e,t.a=s,a}function Us(t,e){for(var n=t.f,i=t.d,r=t.input,s=t.a,o=r.length,a=e[0],c=e[1],l,h;i<c&&!(s>=o);)n|=r[s++]<<i,i+=8;if(l=a[n&(1<<c)-1],h=l>>>16,h>i)throw Error("invalid code length: "+h);return t.f=n>>h,t.d=i-h,t.a=s,l&65535}ii.prototype.j=function(t,e){var n=this.c,i=this.b;this.o=t;for(var r=n.length-258,s,o,a,c;(s=Us(this,t))!==256;)if(256>s)i>=r&&(this.b=i,n=this.e(),i=this.b),n[i++]=s;else for(o=s-257,c=jd[o],0<ha[o]&&(c+=Ht(this,ha[o])),s=Us(this,e),a=qd[s],0<fa[s]&&(a+=Ht(this,fa[s])),i>=r&&(this.b=i,n=this.e(),i=this.b);c--;)n[i]=n[i++-a];for(;8<=this.d;)this.d-=8,this.a--;this.b=i};ii.prototype.w=function(t,e){var n=this.c,i=this.b;this.o=t;for(var r=n.length,s,o,a,c;(s=Us(this,t))!==256;)if(256>s)i>=r&&(n=this.e(),r=n.length),n[i++]=s;else for(o=s-257,c=jd[o],0<ha[o]&&(c+=Ht(this,ha[o])),s=Us(this,e),a=qd[s],0<fa[s]&&(a+=Ht(this,fa[s])),i+c>r&&(n=this.e(),r=n.length);c--;)n[i]=n[i++-a];for(;8<=this.d;)this.d-=8,this.a--;this.b=i};ii.prototype.e=function(){var t=new(Ze?Uint8Array:Array)(this.b-32768),e=this.b-32768,n,i,r=this.c;if(Ze)t.set(r.subarray(32768,t.length));else for(n=0,i=t.length;n<i;++n)t[n]=r[n+32768];if(this.g.push(t),this.l+=t.length,Ze)r.set(r.subarray(e,e+32768));else for(n=0;32768>n;++n)r[n]=r[e+n];return this.b=32768,r};ii.prototype.z=function(t){var e,n=this.input.length/this.a+1|0,i,r,s,o=this.input,a=this.c;return t&&(typeof t.p=="number"&&(n=t.p),typeof t.u=="number"&&(n+=t.u)),2>n?(i=(o.length-this.a)/this.o[2],s=258*(i/2)|0,r=s<a.length?a.length+s:a.length<<1):r=a.length*n,Ze?(e=new Uint8Array(r),e.set(a)):e=a,this.c=e};ii.prototype.n=function(){var t=0,e=this.c,n=this.g,i,r=new(Ze?Uint8Array:Array)(this.l+(this.b-32768)),s,o,a,c;if(n.length===0)return Ze?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);for(s=0,o=n.length;s<o;++s)for(i=n[s],a=0,c=i.length;a<c;++a)r[t++]=i[a];for(s=32768,o=this.b;s<o;++s)r[t++]=e[s];return this.g=[],this.buffer=r};ii.prototype.v=function(){var t,e=this.b;return Ze?this.r?(t=new Uint8Array(e),t.set(this.c.subarray(0,e))):t=this.c.subarray(0,e):(this.c.length>e&&(this.c.length=e),t=this.c),this.buffer=t};function Ul(t,e){var n,i;switch(this.input=t,this.a=0,(e||!(e={}))&&(e.index&&(this.a=e.index),e.verify&&(this.A=e.verify)),n=t[this.a++],i=t[this.a++],n&15){case ah:this.method=ah;break;default:throw Error("unsupported compression method")}if(((n<<8)+i)%31!==0)throw Error("invalid fcheck flag:"+((n<<8)+i)%31);if(i&32)throw Error("fdict flag is not supported");this.q=new ii(t,{index:this.a,bufferSize:e.bufferSize,bufferType:e.bufferType,resize:e.resize})}Ul.prototype.k=function(){var t=this.input,e,n;if(e=this.q.k(),this.a=this.q.a,this.A){n=(t[this.a++]<<24|t[this.a++]<<16|t[this.a++]<<8|t[this.a++])>>>0;var i=e;if(typeof i=="string"){var r=i.split(""),s,o;for(s=0,o=r.length;s<o;s++)r[s]=(r[s].charCodeAt(0)&255)>>>0;i=r}for(var a=1,c=0,l=i.length,h,u=0;0<l;){h=1024<l?1024:l,l-=h;do a+=i[u++],c+=a;while(--h);a%=65521,c%=65521}if(n!==(c<<16|a)>>>0)throw Error("invalid adler-32 checksum")}return e};var ah=8;Bl("Zlib.Inflate",Ul);Bl("Zlib.Inflate.prototype.decompress",Ul.prototype.k);var Kc={ADAPTIVE:Qu.s,BLOCK:Qu.t},ls,us,_r,ch;if(Object.keys)ls=Object.keys(Kc);else for(us in ls=[],_r=0,Kc)ls[_r++]=us;_r=0;for(ch=ls.length;_r<ch;++_r)us=ls[_r],Bl("Zlib.Inflate.BufferType."+us,Kc[us]);var lh=Wd.Zlib.Inflate,Xd={findSpan:function(t,e,n){var i=n.length-t-1;if(e>=n[i])return i-1;if(e<=n[t])return t;for(var r=t,s=i,o=Math.floor((r+s)/2);e<n[o]||e>=n[o+1];)e<n[o]?s=o:r=o,o=Math.floor((r+s)/2);return o},calcBasisFunctions:function(t,e,n,i){var r=[],s=[],o=[];r[0]=1;for(var a=1;a<=n;++a){s[a]=e-i[t+1-a],o[a]=i[t+a]-e;for(var c=0,l=0;l<a;++l){var h=o[l+1],u=s[a-l],f=r[l]/(h+u);r[l]=c+h*f,c=u*f}r[a]=c}return r},calcBSplinePoint:function(t,e,n,i){for(var r=this.findSpan(t,i,e),s=this.calcBasisFunctions(r,i,t,e),o=new Be(0,0,0,0),a=0;a<=t;++a){var c=n[r-t+a],l=s[a],h=c.w*l;o.x+=c.x*h,o.y+=c.y*h,o.z+=c.z*h,o.w+=c.w*l}return o},calcBasisFunctionDerivatives:function(t,e,n,i,r){for(var s=[],o=0;o<=n;++o)s[o]=0;for(var a=[],o=0;o<=i;++o)a[o]=s.slice(0);for(var c=[],o=0;o<=n;++o)c[o]=s.slice(0);c[0][0]=1;for(var l=s.slice(0),h=s.slice(0),u=1;u<=n;++u){l[u]=e-r[t+1-u],h[u]=r[t+u]-e;for(var f=0,U=0;U<u;++U){var d=h[U+1],m=l[u-U];c[u][U]=d+m;var b=c[U][u-1]/c[u][U];c[U][u]=f+d*b,f=m*b}c[u][u]=f}for(var u=0;u<=n;++u)a[0][u]=c[u][n];for(var U=0;U<=n;++U){for(var w=0,v=1,p=[],o=0;o<=n;++o)p[o]=s.slice(0);p[0][0]=1;for(var E=1;E<=i;++E){var A=0,R=U-E,S=n-E;U>=E&&(p[v][0]=p[w][0]/c[S+1][R],A=p[v][0]*c[R][S]);for(var D=R>=-1?1:-R,N=U-1<=S?E-1:n-U,u=D;u<=N;++u)p[v][u]=(p[w][u]-p[w][u-1])/c[S+1][R+u],A+=p[v][u]*c[R+u][S];U<=S&&(p[v][E]=-p[w][E-1]/c[S+1][U],A+=p[v][E]*c[U][S]),a[E][U]=A;var u=w;w=v,v=u}}for(var U=n,E=1;E<=i;++E){for(var u=0;u<=n;++u)a[E][u]*=U;U*=n-E}return a},calcBSplineDerivatives:function(t,e,n,i,r){for(var s=r<t?r:t,o=[],a=this.findSpan(t,i,e),c=this.calcBasisFunctionDerivatives(a,i,t,s,e),l=[],h=0;h<n.length;++h){var u=n[h].clone(),f=u.w;u.x*=f,u.y*=f,u.z*=f,l[h]=u}for(var d=0;d<=s;++d){for(var u=l[a-t].clone().multiplyScalar(c[d][0]),m=1;m<=t;++m)u.add(l[a-t+m].clone().multiplyScalar(c[d][m]));o[d]=u}for(var d=s+1;d<=r+1;++d)o[d]=new Be(0,0,0);return o},calcKoverI:function(t,e){for(var n=1,i=2;i<=t;++i)n*=i;for(var r=1,i=2;i<=e;++i)r*=i;for(var i=2;i<=t-e;++i)r*=i;return n/r},calcRationalCurveDerivatives:function(t){for(var e=t.length,n=[],i=[],r=0;r<e;++r){var s=t[r];n[r]=new C(s.x,s.y,s.z),i[r]=s.w}for(var o=[],a=0;a<e;++a){for(var c=n[a].clone(),r=1;r<=a;++r)c.sub(o[a-r].clone().multiplyScalar(this.calcKoverI(a,r)*i[r]));o[a]=c.divideScalar(i[0])}return o},calcNURBSDerivatives:function(t,e,n,i,r){var s=this.calcBSplineDerivatives(t,e,n,i,r);return this.calcRationalCurveDerivatives(s)},calcSurfacePoint:function(t,e,n,i,r,s,o,a){for(var c=this.findSpan(t,s,n),l=this.findSpan(e,o,i),h=this.calcBasisFunctions(c,s,t,n),u=this.calcBasisFunctions(l,o,e,i),f=[],d=0;d<=e;++d){f[d]=new Be(0,0,0,0);for(var m=0;m<=t;++m){var b=r[c-t+m][l-e+d].clone(),w=b.w;b.x*=w,b.y*=w,b.z*=w,f[d].add(b.multiplyScalar(h[m]))}}for(var v=new Be(0,0,0,0),d=0;d<=e;++d)v.add(f[d].multiplyScalar(u[d]));v.divideScalar(v.w),a.set(v.x,v.y,v.z)}},Fi=function(t,e,n,i,r){ye.call(this),this.degree=t,this.knots=e,this.controlPoints=[],this.startKnot=i||0,this.endKnot=r||this.knots.length-1;for(var s=0;s<n.length;++s){var o=n[s];this.controlPoints[s]=new Be(o.x,o.y,o.z,o.w)}};Fi.prototype=Object.create(ye.prototype);Fi.prototype.constructor=Fi;Fi.prototype.getPoint=function(t,e){var n=e||new C,i=this.knots[this.startKnot]+t*(this.knots[this.endKnot]-this.knots[this.startKnot]),r=Xd.calcBSplinePoint(this.degree,this.knots,this.controlPoints,i);return r.w!=1&&r.divideScalar(r.w),n.set(r.x,r.y,r.z)};Fi.prototype.getTangent=function(t,e){var n=e||new C,i=this.knots[0]+t*(this.knots[this.knots.length-1]-this.knots[0]),r=Xd.calcNURBSDerivatives(this.degree,this.knots,this.controlPoints,i,1);return n.copy(r[1]).normalize(),n};var $x=function(){var t,e,n;function i(g){Ne.call(this,g)}i.prototype=Object.assign(Object.create(Ne.prototype),{constructor:i,load:function(g,y,x,M){var _=this,T=_.path===""?yr.extractUrlBase(g):_.path,L=new Ut(this.manager);L.setPath(_.path),L.setResponseType("arraybuffer"),L.setRequestHeader(_.requestHeader),L.load(g,function(I){try{y(_.parse(I,T))}catch(z){M?M(z):console.error(z),_.manager.itemError(g)}},x,M)},parse:function(g,y){if(u(g))t=new c().parse(g);else{var x=S(g);if(!f(x))throw new Error("THREE.FBXLoader: Unknown format.");if(d(x)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+d(x));t=new a().parse(x)}var M=new Ir(this.manager).setPath(this.resourcePath||y).setCrossOrigin(this.crossOrigin);return new r(M,this.manager).parse(t)}});function r(g,y){this.textureLoader=g,this.manager=y}r.prototype={constructor:r,parse:function(){e=this.parseConnections();var g=this.parseImages(),y=this.parseTextures(g),x=this.parseMaterials(y),M=this.parseDeformers(),_=new s().parse(M);return this.parseScene(M,_,x),n},parseConnections:function(){var g=new Map;if("Connections"in t){var y=t.Connections.connections;y.forEach(function(x){var M=x[0],_=x[1],T=x[2];g.has(M)||g.set(M,{parents:[],children:[]});var L={ID:_,relationship:T};g.get(M).parents.push(L),g.has(_)||g.set(_,{parents:[],children:[]});var I={ID:M,relationship:T};g.get(_).children.push(I)})}return g},parseImages:function(){var g={},y={};if("Video"in t.Objects){var x=t.Objects.Video;for(var M in x){var _=x[M],T=parseInt(M);if(g[T]=_.RelativeFilename||_.Filename,"Content"in _){var L=_.Content instanceof ArrayBuffer&&_.Content.byteLength>0,I=typeof _.Content=="string"&&_.Content!=="";if(L||I){var z=this.parseImage(x[M]);y[_.RelativeFilename||_.Filename]=z}}}}for(var T in g){var V=g[T];y[V]!==void 0?g[T]=y[V]:g[T]=g[T].split("\\").pop()}return g},parseImage:function(g){var y=g.Content,x=g.RelativeFilename||g.Filename,M=x.slice(x.lastIndexOf(".")+1).toLowerCase(),_;switch(M){case"bmp":_="image/bmp";break;case"jpg":case"jpeg":_="image/jpeg";break;case"png":_="image/png";break;case"tif":_="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",x),_="image/tga";break;default:console.warn('FBXLoader: Image type "'+M+'" is not supported.');return}if(typeof y=="string")return"data:"+_+";base64,"+y;var T=new Uint8Array(y);return window.URL.createObjectURL(new Blob([T],{type:_}))},parseTextures:function(g){var y=new Map;if("Texture"in t.Objects){var x=t.Objects.Texture;for(var M in x){var _=this.parseTexture(x[M],g);y.set(parseInt(M),_)}}return y},parseTexture:function(g,y){var x=this.loadTexture(g,y);x.ID=g.id,x.name=g.attrName;var M=g.WrapModeU,_=g.WrapModeV,T=M!==void 0?M.value:0,L=_!==void 0?_.value:0;if(x.wrapS=T===0?bi:pt,x.wrapT=L===0?bi:pt,"Scaling"in g){var I=g.Scaling.value;x.repeat.x=I[0],x.repeat.y=I[1]}return x},loadTexture:function(g,y){var x,M=this.textureLoader.path,_=e.get(g.id).children;_!==void 0&&_.length>0&&y[_[0].ID]!==void 0&&(x=y[_[0].ID],(x.indexOf("blob:")===0||x.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));var T,L=g.FileName.slice(-3).toLowerCase();if(L==="tga"){var I=this.manager.getHandler(".tga");I===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",g.RelativeFilename),T=new Ge):T=I.load(x)}else L==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",g.RelativeFilename),T=new Ge):T=this.textureLoader.load(x);return this.textureLoader.setPath(M),T},parseMaterials:function(g){var y=new Map;if("Material"in t.Objects){var x=t.Objects.Material;for(var M in x){var _=this.parseMaterial(x[M],g);_!==null&&y.set(parseInt(M),_)}}return y},parseMaterial:function(g,y){var x=g.id,M=g.attrName,_=g.ShadingModel;if(typeof _=="object"&&(_=_.value),!e.has(x))return null;var T=this.parseParameters(g,y,x),L;switch(_.toLowerCase()){case"phong":L=new Ot;break;case"lambert":L=new Fn;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',_),L=new Ot;break}return L.setValues(T),L.name=M,L},parseParameters:function(g,y,x){var M={};g.BumpFactor&&(M.bumpScale=g.BumpFactor.value),g.Diffuse?M.color=new oe().fromArray(g.Diffuse.value):g.DiffuseColor&&g.DiffuseColor.type==="Color"&&(M.color=new oe().fromArray(g.DiffuseColor.value)),g.DisplacementFactor&&(M.displacementScale=g.DisplacementFactor.value),g.Emissive?M.emissive=new oe().fromArray(g.Emissive.value):g.EmissiveColor&&g.EmissiveColor.type==="Color"&&(M.emissive=new oe().fromArray(g.EmissiveColor.value)),g.EmissiveFactor&&(M.emissiveIntensity=parseFloat(g.EmissiveFactor.value)),g.Opacity&&(M.opacity=parseFloat(g.Opacity.value)),M.opacity<1&&(M.transparent=!0),g.ReflectionFactor&&(M.reflectivity=g.ReflectionFactor.value),g.Shininess&&(M.shininess=g.Shininess.value),g.Specular?M.specular=new oe().fromArray(g.Specular.value):g.SpecularColor&&g.SpecularColor.type==="Color"&&(M.specular=new oe().fromArray(g.SpecularColor.value));var _=this;return e.get(x).children.forEach(function(T){var L=T.relationship;switch(L){case"Bump":M.bumpMap=_.getTexture(y,T.ID);break;case"Maya|TEX_ao_map":M.aoMap=_.getTexture(y,T.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":M.map=_.getTexture(y,T.ID),M.map.encoding=Ln;break;case"DisplacementColor":M.displacementMap=_.getTexture(y,T.ID);break;case"EmissiveColor":M.emissiveMap=_.getTexture(y,T.ID),M.emissiveMap.encoding=Ln;break;case"NormalMap":case"Maya|TEX_normal_map":M.normalMap=_.getTexture(y,T.ID);break;case"ReflectionColor":M.envMap=_.getTexture(y,T.ID),M.envMap.mapping=br,M.envMap.encoding=Ln;break;case"SpecularColor":M.specularMap=_.getTexture(y,T.ID),M.specularMap.encoding=Ln;break;case"TransparentColor":case"TransparencyFactor":M.alphaMap=_.getTexture(y,T.ID),M.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",L);break}}),M},getTexture:function(g,y){return"LayeredTexture"in t.Objects&&y in t.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),y=e.get(y).children[0].ID),g.get(y)},parseDeformers:function(){var g={},y={};if("Deformer"in t.Objects){var x=t.Objects.Deformer;for(var M in x){var _=x[M],T=e.get(parseInt(M));if(_.attrType==="Skin"){var L=this.parseSkeleton(T,x);L.ID=M,T.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),L.geometryID=T.parents[0].ID,g[M]=L}else if(_.attrType==="BlendShape"){var I={id:M};I.rawTargets=this.parseMorphTargets(T,x),I.id=M,T.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),y[M]=I}}}return{skeletons:g,morphTargets:y}},parseSkeleton:function(g,y){var x=[];return g.children.forEach(function(M){var _=y[M.ID];if(_.attrType==="Cluster"){var T={ID:M.ID,indices:[],weights:[],transformLink:new fe().fromArray(_.TransformLink.a)};"Indexes"in _&&(T.indices=_.Indexes.a,T.weights=_.Weights.a),x.push(T)}}),{rawBones:x,bones:[]}},parseMorphTargets:function(g,y){for(var x=[],M=0;M<g.children.length;M++){var _=g.children[M],T=y[_.ID],L={name:T.attrName,initialWeight:T.DeformPercent,id:T.id,fullWeights:T.FullWeights.a};if(T.attrType!=="BlendShapeChannel")return;L.geoID=e.get(parseInt(_.ID)).children.filter(function(I){return I.relationship===void 0})[0].ID,x.push(L)}return x},parseScene:function(g,y,x){n=new $t;var M=this.parseModels(g.skeletons,y,x),_=t.Objects.Model,T=this;M.forEach(function(I){var z=_[I.ID];T.setLookAtProperties(I,z);var V=e.get(I.ID).parents;V.forEach(function(H){var k=M.get(H.ID);k!==void 0&&k.add(I)}),I.parent===null&&n.add(I)}),this.bindSkeleton(g.skeletons,y,M),this.createAmbientLight(),this.setupMorphMaterials(),n.traverse(function(I){if(I.userData.transformData){I.parent&&(I.userData.transformData.parentMatrixWorld=I.parent.matrix);var z=E(I.userData.transformData);I.applyMatrix4(z)}});var L=new o().parse();n.children.length===1&&n.children[0].isGroup&&(n.children[0].animations=L,n=n.children[0]),n.animations=L},parseModels:function(g,y,x){var M=new Map,_=t.Objects.Model;for(var T in _){var L=parseInt(T),I=_[T],z=e.get(L),V=this.buildSkeleton(z,g,L,I.attrName);if(!V){switch(I.attrType){case"Camera":V=this.createCamera(z);break;case"Light":V=this.createLight(z);break;case"Mesh":V=this.createMesh(z,y,x);break;case"NurbsCurve":V=this.createCurve(z,y);break;case"LimbNode":case"Root":V=new As;break;case"Null":default:V=new $t;break}V.name=I.attrName?ot.sanitizeNodeName(I.attrName):"",V.ID=L}this.getTransformData(V,I),M.set(L,V)}return M},buildSkeleton:function(g,y,x,M){var _=null;return g.parents.forEach(function(T){for(var L in y){var I=y[L];I.rawBones.forEach(function(z,V){if(z.ID===T.ID){var H=_;_=new As,_.matrixWorld.copy(z.transformLink),_.name=M?ot.sanitizeNodeName(M):"",_.ID=x,I.bones[V]=_,H!==null&&_.add(H)}})}}),_},createCamera:function(g){var y,x;if(g.children.forEach(function(k){var Z=t.Objects.NodeAttribute[k.ID];Z!==void 0&&(x=Z)}),x===void 0)y=new me;else{var M=0;x.CameraProjectionType!==void 0&&x.CameraProjectionType.value===1&&(M=1);var _=1;x.NearPlane!==void 0&&(_=x.NearPlane.value/1e3);var T=1e3;x.FarPlane!==void 0&&(T=x.FarPlane.value/1e3);var L=window.innerWidth,I=window.innerHeight;x.AspectWidth!==void 0&&x.AspectHeight!==void 0&&(L=x.AspectWidth.value,I=x.AspectHeight.value);var z=L/I,V=45;x.FieldOfView!==void 0&&(V=x.FieldOfView.value);var H=x.FocalLength?x.FocalLength.value:null;switch(M){case 0:y=new Qe(V,z,_,T),H!==null&&y.setFocalLength(H);break;case 1:y=new Di(-L/2,L/2,I/2,-I/2,_,T);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+M+"."),y=new me;break}}return y},createLight:function(g){var y,x;if(g.children.forEach(function(H){var k=t.Objects.NodeAttribute[H.ID];k!==void 0&&(x=k)}),x===void 0)y=new me;else{var M;x.LightType===void 0?M=0:M=x.LightType.value;var _=16777215;x.Color!==void 0&&(_=new oe().fromArray(x.Color.value));var T=x.Intensity===void 0?1:x.Intensity.value/100;x.CastLightOnObject!==void 0&&x.CastLightOnObject.value===0&&(T=0);var L=0;x.FarAttenuationEnd!==void 0&&(x.EnableFarAttenuation!==void 0&&x.EnableFarAttenuation.value===0?L=0:L=x.FarAttenuationEnd.value);var I=1;switch(M){case 0:y=new Or(_,T,L,I);break;case 1:y=new Fr(_,T);break;case 2:var z=Math.PI/3;x.InnerAngle!==void 0&&(z=be.degToRad(x.InnerAngle.value));var V=0;x.OuterAngle!==void 0&&(V=be.degToRad(x.OuterAngle.value),V=Math.max(V,1)),y=new Fs(_,T,L,z,V,I);break;default:console.warn("THREE.FBXLoader: Unknown light type "+x.LightType.value+", defaulting to a PointLight."),y=new Or(_,T);break}x.CastShadows!==void 0&&x.CastShadows.value===1&&(y.castShadow=!0)}return y},createMesh:function(g,y,x){var M,_=null,T=null,L=[];return g.children.forEach(function(I){y.has(I.ID)&&(_=y.get(I.ID)),x.has(I.ID)&&L.push(x.get(I.ID))}),L.length>1?T=L:L.length>0?T=L[0]:(T=new Ot({color:13421772}),L.push(T)),"color"in _.attributes&&L.forEach(function(I){I.vertexColors=!0}),_.FBX_Deformer?(L.forEach(function(I){I.skinning=!0}),M=new Ts(_,T),M.normalizeSkinWeights()):M=new je(_,T),M},createCurve:function(g,y){var x=g.children.reduce(function(_,T){return y.has(T.ID)&&(_=y.get(T.ID)),_},null),M=new Je({color:3342591,linewidth:1});return new Nt(x,M)},getTransformData:function(g,y){var x={};"InheritType"in y&&(x.inheritType=parseInt(y.InheritType.value)),"RotationOrder"in y?x.eulerOrder=A(y.RotationOrder.value):x.eulerOrder="ZYX","Lcl_Translation"in y&&(x.translation=y.Lcl_Translation.value),"PreRotation"in y&&(x.preRotation=y.PreRotation.value),"Lcl_Rotation"in y&&(x.rotation=y.Lcl_Rotation.value),"PostRotation"in y&&(x.postRotation=y.PostRotation.value),"Lcl_Scaling"in y&&(x.scale=y.Lcl_Scaling.value),"ScalingOffset"in y&&(x.scalingOffset=y.ScalingOffset.value),"ScalingPivot"in y&&(x.scalingPivot=y.ScalingPivot.value),"RotationOffset"in y&&(x.rotationOffset=y.RotationOffset.value),"RotationPivot"in y&&(x.rotationPivot=y.RotationPivot.value),g.userData.transformData=x},setLookAtProperties:function(g,y){if("LookAtProperty"in y){var x=e.get(g.ID).children;x.forEach(function(M){if(M.relationship==="LookAtProperty"){var _=t.Objects.Model[M.ID];if("Lcl_Translation"in _){var T=_.Lcl_Translation.value;g.target!==void 0?(g.target.position.fromArray(T),n.add(g.target)):g.lookAt(new C().fromArray(T))}}})}},bindSkeleton:function(g,y,x){var M=this.parsePoseNodes();for(var _ in g){var T=g[_],L=e.get(parseInt(T.ID)).parents;L.forEach(function(I){if(y.has(I.ID)){var z=I.ID,V=e.get(z);V.parents.forEach(function(H){if(x.has(H.ID)){var k=x.get(H.ID);k.bind(new Es(T.bones),M[H.ID])}})}})}},parsePoseNodes:function(){var g={};if("Pose"in t.Objects){var y=t.Objects.Pose;for(var x in y)if(y[x].attrType==="BindPose"){var M=y[x].PoseNode;Array.isArray(M)?M.forEach(function(_){g[_.Node]=new fe().fromArray(_.Matrix.a)}):g[M.Node]=new fe().fromArray(M.Matrix.a)}}return g},createAmbientLight:function(){if("GlobalSettings"in t&&"AmbientColor"in t.GlobalSettings){var g=t.GlobalSettings.AmbientColor.value,y=g[0],x=g[1],M=g[2];if(y!==0||x!==0||M!==0){var _=new oe(y,x,M);n.add(new Oi(_,1))}}},setupMorphMaterials:function(){var g=this;n.traverse(function(y){y.isMesh&&y.geometry.morphAttributes.position&&y.geometry.morphAttributes.position.length&&(Array.isArray(y.material)?y.material.forEach(function(x,M){g.setupMorphMaterial(y,x,M)}):g.setupMorphMaterial(y,y.material))})},setupMorphMaterial:function(g,y,x){var M=g.uuid,_=y.uuid,T=!1;if(n.traverse(function(I){I.isMesh&&(Array.isArray(I.material)?I.material.forEach(function(z){z.uuid===_&&I.uuid!==M&&(T=!0)}):I.material.uuid===_&&I.uuid!==M&&(T=!0))}),T===!0){var L=y.clone();L.morphTargets=!0,x===void 0?g.material=L:g.material[x]=L}else y.morphTargets=!0}};function s(){}s.prototype={constructor:s,parse:function(g){var y=new Map;if("Geometry"in t.Objects){var x=t.Objects.Geometry;for(var M in x){var _=e.get(parseInt(M)),T=this.parseGeometry(_,x[M],g);y.set(parseInt(M),T)}}return y},parseGeometry:function(g,y,x){switch(y.attrType){case"Mesh":return this.parseMeshGeometry(g,y,x);case"NurbsCurve":return this.parseNurbsGeometry(y)}},parseMeshGeometry:function(g,y,x){var M=x.skeletons,_=[],T=g.parents.map(function(H){return t.Objects.Model[H.ID]});if(T.length!==0){var L=g.children.reduce(function(H,k){return M[k.ID]!==void 0&&(H=M[k.ID]),H},null);g.children.forEach(function(H){x.morphTargets[H.ID]!==void 0&&_.push(x.morphTargets[H.ID])});var I=T[0],z={};"RotationOrder"in I&&(z.eulerOrder=A(I.RotationOrder.value)),"InheritType"in I&&(z.inheritType=parseInt(I.InheritType.value)),"GeometricTranslation"in I&&(z.translation=I.GeometricTranslation.value),"GeometricRotation"in I&&(z.rotation=I.GeometricRotation.value),"GeometricScaling"in I&&(z.scale=I.GeometricScaling.value);var V=E(z);return this.genGeometry(y,L,_,V)}},genGeometry:function(g,y,x,M){var _=new xe;g.attrName&&(_.name=g.attrName);var T=this.parseGeoNode(g,y),L=this.genBuffers(T),I=new ie(L.vertex,3);if(I.applyMatrix4(M),_.setAttribute("position",I),L.colors.length>0&&_.setAttribute("color",new ie(L.colors,3)),y&&(_.setAttribute("skinIndex",new Jn(L.weightsIndices,4)),_.setAttribute("skinWeight",new ie(L.vertexWeights,4)),_.FBX_Deformer=y),L.normal.length>0){var z=new yt().getNormalMatrix(M),V=new ie(L.normal,3);V.applyNormalMatrix(z),_.setAttribute("normal",V)}if(L.uvs.forEach(function(Ee,j){var Pe="uv"+(j+1).toString();j===0&&(Pe="uv"),_.setAttribute(Pe,new ie(L.uvs[j],2))}),T.material&&T.material.mappingType!=="AllSame"){var H=L.materialIndex[0],k=0;if(L.materialIndex.forEach(function(Ee,j){Ee!==H&&(_.addGroup(k,j-k,H),H=Ee,k=j)}),_.groups.length>0){var Z=_.groups[_.groups.length-1],ce=Z.start+Z.count;ce!==L.materialIndex.length&&_.addGroup(ce,L.materialIndex.length-ce,H)}_.groups.length===0&&_.addGroup(0,L.materialIndex.length,L.materialIndex[0])}return this.addMorphTargets(_,g,x,M),_},parseGeoNode:function(g,y){var x={};if(x.vertexPositions=g.Vertices!==void 0?g.Vertices.a:[],x.vertexIndices=g.PolygonVertexIndex!==void 0?g.PolygonVertexIndex.a:[],g.LayerElementColor&&(x.color=this.parseVertexColors(g.LayerElementColor[0])),g.LayerElementMaterial&&(x.material=this.parseMaterialIndices(g.LayerElementMaterial[0])),g.LayerElementNormal&&(x.normal=this.parseNormals(g.LayerElementNormal[0])),g.LayerElementUV){x.uv=[];for(var M=0;g.LayerElementUV[M];)g.LayerElementUV[M].UV&&x.uv.push(this.parseUVs(g.LayerElementUV[M])),M++}return x.weightTable={},y!==null&&(x.skeleton=y,y.rawBones.forEach(function(_,T){_.indices.forEach(function(L,I){x.weightTable[L]===void 0&&(x.weightTable[L]=[]),x.weightTable[L].push({id:T,weight:_.weights[I]})})})),x},genBuffers:function(g){var y={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]},x=0,M=0,_=!1,T=[],L=[],I=[],z=[],V=[],H=[],k=this;return g.vertexIndices.forEach(function(Z,ce){var Ee=!1;Z<0&&(Z=Z^-1,Ee=!0);var j=[],Pe=[];if(T.push(Z*3,Z*3+1,Z*3+2),g.color){var de=w(ce,x,Z,g.color);I.push(de[0],de[1],de[2])}if(g.skeleton){if(g.weightTable[Z]!==void 0&&g.weightTable[Z].forEach(function(J){Pe.push(J.weight),j.push(J.id)}),Pe.length>4){_||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),_=!0);var Te=[0,0,0,0],Me=[0,0,0,0];Pe.forEach(function(J,Q){var te=J,ge=j[Q];Me.forEach(function(le,P,F){if(te>le){F[P]=te,te=le;var $=Te[P];Te[P]=ge,ge=$}})}),j=Te,Pe=Me}for(;Pe.length<4;)Pe.push(0),j.push(0);for(var Ie=0;Ie<4;++Ie)V.push(Pe[Ie]),H.push(j[Ie])}if(g.normal){var de=w(ce,x,Z,g.normal);L.push(de[0],de[1],de[2])}if(g.material&&g.material.mappingType!=="AllSame")var Ae=w(ce,x,Z,g.material)[0];g.uv&&g.uv.forEach(function(J,Q){var te=w(ce,x,Z,J);z[Q]===void 0&&(z[Q]=[]),z[Q].push(te[0]),z[Q].push(te[1])}),M++,Ee&&(k.genFace(y,g,T,Ae,L,I,z,V,H,M),x++,M=0,T=[],L=[],I=[],z=[],V=[],H=[])}),y},genFace:function(g,y,x,M,_,T,L,I,z,V){for(var H=2;H<V;H++)g.vertex.push(y.vertexPositions[x[0]]),g.vertex.push(y.vertexPositions[x[1]]),g.vertex.push(y.vertexPositions[x[2]]),g.vertex.push(y.vertexPositions[x[(H-1)*3]]),g.vertex.push(y.vertexPositions[x[(H-1)*3+1]]),g.vertex.push(y.vertexPositions[x[(H-1)*3+2]]),g.vertex.push(y.vertexPositions[x[H*3]]),g.vertex.push(y.vertexPositions[x[H*3+1]]),g.vertex.push(y.vertexPositions[x[H*3+2]]),y.skeleton&&(g.vertexWeights.push(I[0]),g.vertexWeights.push(I[1]),g.vertexWeights.push(I[2]),g.vertexWeights.push(I[3]),g.vertexWeights.push(I[(H-1)*4]),g.vertexWeights.push(I[(H-1)*4+1]),g.vertexWeights.push(I[(H-1)*4+2]),g.vertexWeights.push(I[(H-1)*4+3]),g.vertexWeights.push(I[H*4]),g.vertexWeights.push(I[H*4+1]),g.vertexWeights.push(I[H*4+2]),g.vertexWeights.push(I[H*4+3]),g.weightsIndices.push(z[0]),g.weightsIndices.push(z[1]),g.weightsIndices.push(z[2]),g.weightsIndices.push(z[3]),g.weightsIndices.push(z[(H-1)*4]),g.weightsIndices.push(z[(H-1)*4+1]),g.weightsIndices.push(z[(H-1)*4+2]),g.weightsIndices.push(z[(H-1)*4+3]),g.weightsIndices.push(z[H*4]),g.weightsIndices.push(z[H*4+1]),g.weightsIndices.push(z[H*4+2]),g.weightsIndices.push(z[H*4+3])),y.color&&(g.colors.push(T[0]),g.colors.push(T[1]),g.colors.push(T[2]),g.colors.push(T[(H-1)*3]),g.colors.push(T[(H-1)*3+1]),g.colors.push(T[(H-1)*3+2]),g.colors.push(T[H*3]),g.colors.push(T[H*3+1]),g.colors.push(T[H*3+2])),y.material&&y.material.mappingType!=="AllSame"&&(g.materialIndex.push(M),g.materialIndex.push(M),g.materialIndex.push(M)),y.normal&&(g.normal.push(_[0]),g.normal.push(_[1]),g.normal.push(_[2]),g.normal.push(_[(H-1)*3]),g.normal.push(_[(H-1)*3+1]),g.normal.push(_[(H-1)*3+2]),g.normal.push(_[H*3]),g.normal.push(_[H*3+1]),g.normal.push(_[H*3+2])),y.uv&&y.uv.forEach(function(k,Z){g.uvs[Z]===void 0&&(g.uvs[Z]=[]),g.uvs[Z].push(L[Z][0]),g.uvs[Z].push(L[Z][1]),g.uvs[Z].push(L[Z][(H-1)*2]),g.uvs[Z].push(L[Z][(H-1)*2+1]),g.uvs[Z].push(L[Z][H*2]),g.uvs[Z].push(L[Z][H*2+1])})},addMorphTargets:function(g,y,x,M){if(x.length!==0){g.morphTargetsRelative=!0,g.morphAttributes.position=[];var _=this;x.forEach(function(T){T.rawTargets.forEach(function(L){var I=t.Objects.Geometry[L.geoID];I!==void 0&&_.genMorphGeometry(g,y,I,M,L.name)})})}},genMorphGeometry:function(g,y,x,M,_){for(var T=y.PolygonVertexIndex!==void 0?y.PolygonVertexIndex.a:[],L=x.Vertices!==void 0?x.Vertices.a:[],I=x.Indexes!==void 0?x.Indexes.a:[],z=g.attributes.position.count*3,V=new Float32Array(z),H=0;H<I.length;H++){var k=I[H]*3;V[k]=L[H*3],V[k+1]=L[H*3+1],V[k+2]=L[H*3+2]}var Z={vertexIndices:T,vertexPositions:V},ce=this.genBuffers(Z),Ee=new ie(ce.vertex,3);Ee.name=_||x.attrName,Ee.applyMatrix4(M),g.morphAttributes.position.push(Ee)},parseNormals:function(g){var y=g.MappingInformationType,x=g.ReferenceInformationType,M=g.Normals.a,_=[];return x==="IndexToDirect"&&("NormalIndex"in g?_=g.NormalIndex.a:"NormalsIndex"in g&&(_=g.NormalsIndex.a)),{dataSize:3,buffer:M,indices:_,mappingType:y,referenceType:x}},parseUVs:function(g){var y=g.MappingInformationType,x=g.ReferenceInformationType,M=g.UV.a,_=[];return x==="IndexToDirect"&&(_=g.UVIndex.a),{dataSize:2,buffer:M,indices:_,mappingType:y,referenceType:x}},parseVertexColors:function(g){var y=g.MappingInformationType,x=g.ReferenceInformationType,M=g.Colors.a,_=[];return x==="IndexToDirect"&&(_=g.ColorIndex.a),{dataSize:4,buffer:M,indices:_,mappingType:y,referenceType:x}},parseMaterialIndices:function(g){var y=g.MappingInformationType,x=g.ReferenceInformationType;if(y==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:x};for(var M=g.Materials.a,_=[],T=0;T<M.length;++T)_.push(T);return{dataSize:1,buffer:M,indices:_,mappingType:y,referenceType:x}},parseNurbsGeometry:function(g){if(Fi===void 0)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new xe;var y=parseInt(g.Order);if(isNaN(y))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",g.Order,g.id),new xe;for(var x=y-1,M=g.KnotVector.a,_=[],T=g.Points.a,L=0,I=T.length;L<I;L+=4)_.push(new Be().fromArray(T,L));var z,V;if(g.Form==="Closed")_.push(_[0]);else if(g.Form==="Periodic"){z=x,V=M.length-1-z;for(var L=0;L<x;++L)_.push(_[L])}var H=new Fi(x,M,_,z,V),k=H.getPoints(_.length*7),Z=new Float32Array(k.length*3);k.forEach(function(Ee,j){Ee.toArray(Z,j*3)});var ce=new xe;return ce.setAttribute("position",new we(Z,3)),ce}};function o(){}o.prototype={constructor:o,parse:function(){var g=[],y=this.parseClips();if(y!==void 0)for(var x in y){var M=y[x],_=this.addClip(M);g.push(_)}return g},parseClips:function(){if(t.Objects.AnimationCurve!==void 0){var g=this.parseAnimationCurveNodes();this.parseAnimationCurves(g);var y=this.parseAnimationLayers(g),x=this.parseAnimStacks(y);return x}},parseAnimationCurveNodes:function(){var g=t.Objects.AnimationCurveNode,y=new Map;for(var x in g){var M=g[x];if(M.attrName.match(/S|R|T|DeformPercent/)!==null){var _={id:M.id,attr:M.attrName,curves:{}};y.set(_.id,_)}}return y},parseAnimationCurves:function(g){var y=t.Objects.AnimationCurve;for(var x in y){var M={id:y[x].id,times:y[x].KeyTime.a.map(m),values:y[x].KeyValueFloat.a},_=e.get(M.id);if(_!==void 0){var T=_.parents[0].ID,L=_.parents[0].relationship;L.match(/X/)?g.get(T).curves.x=M:L.match(/Y/)?g.get(T).curves.y=M:L.match(/Z/)?g.get(T).curves.z=M:L.match(/d|DeformPercent/)&&g.has(T)&&(g.get(T).curves.morph=M)}}},parseAnimationLayers:function(g){var y=t.Objects.AnimationLayer,x=new Map;for(var M in y){var _=[],T=e.get(parseInt(M));if(T!==void 0){var L=T.children;L.forEach(function(I,z){if(g.has(I.ID)){var V=g.get(I.ID);if(V.curves.x!==void 0||V.curves.y!==void 0||V.curves.z!==void 0){if(_[z]===void 0){var H=e.get(I.ID).parents.filter(function(Pe){return Pe.relationship!==void 0})[0].ID;if(H!==void 0){var k=t.Objects.Model[H.toString()];if(k===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",I);return}var Z={modelName:k.attrName?ot.sanitizeNodeName(k.attrName):"",ID:k.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};n.traverse(function(Pe){Pe.ID===k.id&&(Z.transform=Pe.matrix,Pe.userData.transformData&&(Z.eulerOrder=Pe.userData.transformData.eulerOrder))}),Z.transform||(Z.transform=new fe),"PreRotation"in k&&(Z.preRotation=k.PreRotation.value),"PostRotation"in k&&(Z.postRotation=k.PostRotation.value),_[z]=Z}}_[z]&&(_[z][V.attr]=V)}else if(V.curves.morph!==void 0){if(_[z]===void 0){var ce=e.get(I.ID).parents.filter(function(Me){return Me.relationship!==void 0})[0].ID,Ee=e.get(ce).parents[0].ID,j=e.get(Ee).parents[0].ID,H=e.get(j).parents[0].ID,k=t.Objects.Model[H],Z={modelName:k.attrName?ot.sanitizeNodeName(k.attrName):"",morphName:t.Objects.Deformer[ce].attrName};_[z]=Z}_[z][V.attr]=V}}}),x.set(parseInt(M),_)}}return x},parseAnimStacks:function(g){var y=t.Objects.AnimationStack,x={};for(var M in y){var _=e.get(parseInt(M)).children;_.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");var T=g.get(_[0].ID);x[M]={name:y[M].attrName,layer:T}}return x},addClip:function(g){var y=[],x=this;return g.layer.forEach(function(M){y=y.concat(x.generateTracks(M))}),new Rt(g.name,-1,y)},generateTracks:function(g){var y=[],x=new C,M=new st,_=new C;if(g.transform&&g.transform.decompose(x,M,_),x=x.toArray(),M=new Jt().setFromQuaternion(M,g.eulerOrder).toArray(),_=_.toArray(),g.T!==void 0&&Object.keys(g.T.curves).length>0){var T=this.generateVectorTrack(g.modelName,g.T.curves,x,"position");T!==void 0&&y.push(T)}if(g.R!==void 0&&Object.keys(g.R.curves).length>0){var L=this.generateRotationTrack(g.modelName,g.R.curves,M,g.preRotation,g.postRotation,g.eulerOrder);L!==void 0&&y.push(L)}if(g.S!==void 0&&Object.keys(g.S.curves).length>0){var I=this.generateVectorTrack(g.modelName,g.S.curves,_,"scale");I!==void 0&&y.push(I)}if(g.DeformPercent!==void 0){var z=this.generateMorphTrack(g);z!==void 0&&y.push(z)}return y},generateVectorTrack:function(g,y,x,M){var _=this.getTimesForAllAxes(y),T=this.getKeyframeTrackValues(_,y,x);return new Pi(g+"."+M,_,T)},generateRotationTrack:function(g,y,x,M,_,T){y.x!==void 0&&(this.interpolateRotations(y.x),y.x.values=y.x.values.map(be.degToRad)),y.y!==void 0&&(this.interpolateRotations(y.y),y.y.values=y.y.values.map(be.degToRad)),y.z!==void 0&&(this.interpolateRotations(y.z),y.z.values=y.z.values.map(be.degToRad));var L=this.getTimesForAllAxes(y),I=this.getKeyframeTrackValues(L,y,x);M!==void 0&&(M=M.map(be.degToRad),M.push(T),M=new Jt().fromArray(M),M=new st().setFromEuler(M)),_!==void 0&&(_=_.map(be.degToRad),_.push(T),_=new Jt().fromArray(_),_=new st().setFromEuler(_).inverse());for(var z=new st,V=new Jt,H=[],k=0;k<I.length;k+=3)V.set(I[k],I[k+1],I[k+2],T),z.setFromEuler(V),M!==void 0&&z.premultiply(M),_!==void 0&&z.multiply(_),z.toArray(H,k/3*4);return new Rr(g+".quaternion",L,H)},generateMorphTrack:function(g){var y=g.DeformPercent.curves.morph,x=y.values.map(function(_){return _/100}),M=n.getObjectByName(g.modelName).morphTargetDictionary[g.morphName];return new Ri(g.modelName+".morphTargetInfluences["+M+"]",y.times,x)},getTimesForAllAxes:function(g){var y=[];return g.x!==void 0&&(y=y.concat(g.x.times)),g.y!==void 0&&(y=y.concat(g.y.times)),g.z!==void 0&&(y=y.concat(g.z.times)),y=y.sort(function(x,M){return x-M}).filter(function(x,M,_){return _.indexOf(x)==M}),y},getKeyframeTrackValues:function(g,y,x){var M=x,_=[],T=-1,L=-1,I=-1;return g.forEach(function(z){if(y.x&&(T=y.x.times.indexOf(z)),y.y&&(L=y.y.times.indexOf(z)),y.z&&(I=y.z.times.indexOf(z)),T!==-1){var V=y.x.values[T];_.push(V),M[0]=V}else _.push(M[0]);if(L!==-1){var H=y.y.values[L];_.push(H),M[1]=H}else _.push(M[1]);if(I!==-1){var k=y.z.values[I];_.push(k),M[2]=k}else _.push(M[2])}),_},interpolateRotations:function(g){for(var y=1;y<g.values.length;y++){var x=g.values[y-1],M=g.values[y]-x,_=Math.abs(M);if(_>=180){for(var T=_/180,L=M/T,I=x+L,z=g.times[y-1],V=g.times[y]-z,H=V/T,k=z+H,Z=[],ce=[];k<g.times[y];)Z.push(k),k+=H,ce.push(I),I+=L;g.times=U(g.times,y,Z),g.values=U(g.values,y,ce)}}}};function a(){}a.prototype={constructor:a,getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(g){this.nodeStack.push(g),this.currentIndent+=1},popStack:function(){this.nodeStack.pop(),this.currentIndent-=1},setCurrentProp:function(g,y){this.currentProp=g,this.currentPropName=y},parse:function(g){this.currentIndent=0,this.allNodes=new h,this.nodeStack=[],this.currentProp=[],this.currentPropName="";var y=this,x=g.split(/[\r\n]+/);return x.forEach(function(M,_){var T=M.match(/^[\s\t]*;/),L=M.match(/^[\s\t]*$/);if(!(T||L)){var I=M.match("^\\t{"+y.currentIndent+"}(\\w+):(.*){",""),z=M.match("^\\t{"+y.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),V=M.match("^\\t{"+(y.currentIndent-1)+"}}");I?y.parseNodeBegin(M,I):z?y.parseNodeProperty(M,z,x[++_]):V?y.popStack():M.match(/^[^\s\t}]/)&&y.parseNodePropertyContinued(M)}}),this.allNodes},parseNodeBegin:function(g,y){var x=y[1].trim().replace(/^"/,"").replace(/"$/,""),M=y[2].split(",").map(function(I){return I.trim().replace(/^"/,"").replace(/"$/,"")}),_={name:x},T=this.parseNodeAttr(M),L=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(x,_):x in L?(x==="PoseNode"?L.PoseNode.push(_):L[x].id!==void 0&&(L[x]={},L[x][L[x].id]=L[x]),T.id!==""&&(L[x][T.id]=_)):typeof T.id=="number"?(L[x]={},L[x][T.id]=_):x!=="Properties70"&&(x==="PoseNode"?L[x]=[_]:L[x]=_),typeof T.id=="number"&&(_.id=T.id),T.name!==""&&(_.attrName=T.name),T.type!==""&&(_.attrType=T.type),this.pushStack(_)},parseNodeAttr:function(g){var y=g[0];g[0]!==""&&(y=parseInt(g[0]),isNaN(y)&&(y=g[0]));var x="",M="";return g.length>1&&(x=g[1].replace(/^(\w+)::/,""),M=g[2]),{id:y,name:x,type:M}},parseNodeProperty:function(g,y,x){var M=y[1].replace(/^"/,"").replace(/"$/,"").trim(),_=y[2].replace(/^"/,"").replace(/"$/,"").trim();M==="Content"&&_===","&&(_=x.replace(/"/g,"").replace(/,$/,"").trim());var T=this.getCurrentNode(),L=T.name;if(L==="Properties70"){this.parseNodeSpecialProperty(g,M,_);return}if(M==="C"){var I=_.split(",").slice(1),z=parseInt(I[0]),V=parseInt(I[1]),H=_.split(",").slice(3);H=H.map(function(k){return k.trim().replace(/^"/,"")}),M="connections",_=[z,V],D(_,H),T[M]===void 0&&(T[M]=[])}M==="Node"&&(T.id=_),M in T&&Array.isArray(T[M])?T[M].push(_):M!=="a"?T[M]=_:T.a=_,this.setCurrentProp(T,M),M==="a"&&_.slice(-1)!==","&&(T.a=R(_))},parseNodePropertyContinued:function(g){var y=this.getCurrentNode();y.a+=g,g.slice(-1)!==","&&(y.a=R(y.a))},parseNodeSpecialProperty:function(g,y,x){var M=x.split('",').map(function(V){return V.trim().replace(/^\"/,"").replace(/\s/,"_")}),_=M[0],T=M[1],L=M[2],I=M[3],z=M[4];switch(T){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":z=parseFloat(z);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":z=R(z);break}this.getPrevNode()[_]={type:T,type2:L,flag:I,value:z},this.setCurrentProp(this.getPrevNode(),_)}};function c(){}c.prototype={constructor:c,parse:function(g){var y=new l(g);y.skip(23);var x=y.getUint32();if(x<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+x);for(var M=new h;!this.endOfContent(y);){var _=this.parseNode(y,x);_!==null&&M.add(_.name,_)}return M},endOfContent:function(g){return g.size()%16===0?(g.getOffset()+160+16&-16)>=g.size():g.getOffset()+160+16>=g.size()},parseNode:function(g,y){var x={},M=y>=7500?g.getUint64():g.getUint32(),_=y>=7500?g.getUint64():g.getUint32();y>=7500?g.getUint64():g.getUint32();var T=g.getUint8(),L=g.getString(T);if(M===0)return null;for(var I=[],z=0;z<_;z++)I.push(this.parseProperty(g));var V=I.length>0?I[0]:"",H=I.length>1?I[1]:"",k=I.length>2?I[2]:"";for(x.singleProperty=_===1&&g.getOffset()===M;M>g.getOffset();){var Z=this.parseNode(g,y);Z!==null&&this.parseSubNode(L,x,Z)}return x.propertyList=I,typeof V=="number"&&(x.id=V),H!==""&&(x.attrName=H),k!==""&&(x.attrType=k),L!==""&&(x.name=L),x},parseSubNode:function(g,y,x){if(x.singleProperty===!0){var M=x.propertyList[0];Array.isArray(M)?(y[x.name]=x,x.a=M):y[x.name]=M}else if(g==="Connections"&&x.name==="C"){var _=[];x.propertyList.forEach(function(k,Z){Z!==0&&_.push(k)}),y.connections===void 0&&(y.connections=[]),y.connections.push(_)}else if(x.name==="Properties70"){var T=Object.keys(x);T.forEach(function(k){y[k]=x[k]})}else if(g==="Properties70"&&x.name==="P"){var L=x.propertyList[0],I=x.propertyList[1],z=x.propertyList[2],V=x.propertyList[3],H;L.indexOf("Lcl ")===0&&(L=L.replace("Lcl ","Lcl_")),I.indexOf("Lcl ")===0&&(I=I.replace("Lcl ","Lcl_")),I==="Color"||I==="ColorRGB"||I==="Vector"||I==="Vector3D"||I.indexOf("Lcl_")===0?H=[x.propertyList[4],x.propertyList[5],x.propertyList[6]]:H=x.propertyList[4],y[L]={type:I,type2:z,flag:V,value:H}}else y[x.name]===void 0?typeof x.id=="number"?(y[x.name]={},y[x.name][x.id]=x):y[x.name]=x:x.name==="PoseNode"?(Array.isArray(y[x.name])||(y[x.name]=[y[x.name]]),y[x.name].push(x)):y[x.name][x.id]===void 0&&(y[x.name][x.id]=x)},parseProperty:function(g){var y=g.getString(1);switch(y){case"C":return g.getBoolean();case"D":return g.getFloat64();case"F":return g.getFloat32();case"I":return g.getInt32();case"L":return g.getInt64();case"R":var x=g.getUint32();return g.getArrayBuffer(x);case"S":var x=g.getUint32();return g.getString(x);case"Y":return g.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var M=g.getUint32(),_=g.getUint32(),T=g.getUint32();if(_===0)switch(y){case"b":case"c":return g.getBooleanArray(M);case"d":return g.getFloat64Array(M);case"f":return g.getFloat32Array(M);case"i":return g.getInt32Array(M);case"l":return g.getInt64Array(M)}typeof lh=="undefined"&&console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");var L=new lh(new Uint8Array(g.getArrayBuffer(T))),I=new l(L.decompress().buffer);switch(y){case"b":case"c":return I.getBooleanArray(M);case"d":return I.getFloat64Array(M);case"f":return I.getFloat32Array(M);case"i":return I.getInt32Array(M);case"l":return I.getInt64Array(M)}default:throw new Error("THREE.FBXLoader: Unknown property type "+y)}}};function l(g,y){this.dv=new DataView(g),this.offset=0,this.littleEndian=y!==void 0?y:!0}l.prototype={constructor:l,getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(g){this.offset+=g},getBoolean:function(){return(this.getUint8()&1)===1},getBooleanArray:function(g){for(var y=[],x=0;x<g;x++)y.push(this.getBoolean());return y},getUint8:function(){var g=this.dv.getUint8(this.offset);return this.offset+=1,g},getInt16:function(){var g=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,g},getInt32:function(){var g=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,g},getInt32Array:function(g){for(var y=[],x=0;x<g;x++)y.push(this.getInt32());return y},getUint32:function(){var g=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,g},getInt64:function(){var g,y;return this.littleEndian?(g=this.getUint32(),y=this.getUint32()):(y=this.getUint32(),g=this.getUint32()),y&2147483648?(y=~y&4294967295,g=~g&4294967295,g===4294967295&&(y=y+1&4294967295),g=g+1&4294967295,-(y*4294967296+g)):y*4294967296+g},getInt64Array:function(g){for(var y=[],x=0;x<g;x++)y.push(this.getInt64());return y},getUint64:function(){var g,y;return this.littleEndian?(g=this.getUint32(),y=this.getUint32()):(y=this.getUint32(),g=this.getUint32()),y*4294967296+g},getFloat32:function(){var g=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,g},getFloat32Array:function(g){for(var y=[],x=0;x<g;x++)y.push(this.getFloat32());return y},getFloat64:function(){var g=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,g},getFloat64Array:function(g){for(var y=[],x=0;x<g;x++)y.push(this.getFloat64());return y},getArrayBuffer:function(g){var y=this.dv.buffer.slice(this.offset,this.offset+g);return this.offset+=g,y},getString:function(g){for(var y=[],x=0;x<g;x++)y[x]=this.getUint8();var M=y.indexOf(0);return M>=0&&(y=y.slice(0,M)),yr.decodeText(new Uint8Array(y))}};function h(){}h.prototype={constructor:h,add:function(g,y){this[g]=y}};function u(g){var y="Kaydara FBX Binary  \0";return g.byteLength>=y.length&&y===S(g,0,y.length)}function f(g){var y=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],x=0;function M(L){var I=g[L-1];return g=g.slice(x+L),x++,I}for(var _=0;_<y.length;++_){var T=M(1);if(T===y[_])return!1}return!0}function d(g){var y=/FBXVersion: (\d+)/,x=g.match(y);if(x){var M=parseInt(x[1]);return M}throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function m(g){return g/46186158e3}var b=[];function w(g,y,x,M){var _;switch(M.mappingType){case"ByPolygonVertex":_=g;break;case"ByPolygon":_=y;break;case"ByVertice":_=x;break;case"AllSame":_=M.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+M.mappingType)}M.referenceType==="IndexToDirect"&&(_=M.indices[_]);var T=_*M.dataSize,L=T+M.dataSize;return N(b,M.buffer,T,L)}var v=new Jt,p=new C;function E(g){var y=new fe,x=new fe,M=new fe,_=new fe,T=new fe,L=new fe,I=new fe,z=new fe,V=new fe,H=new fe,k=new fe,Z=g.inheritType?g.inheritType:0;if(g.translation&&y.setPosition(p.fromArray(g.translation)),g.preRotation){var ce=g.preRotation.map(be.degToRad);ce.push(g.eulerOrder),x.makeRotationFromEuler(v.fromArray(ce))}if(g.rotation){var ce=g.rotation.map(be.degToRad);ce.push(g.eulerOrder),M.makeRotationFromEuler(v.fromArray(ce))}if(g.postRotation){var ce=g.postRotation.map(be.degToRad);ce.push(g.eulerOrder),_.makeRotationFromEuler(v.fromArray(ce))}g.scale&&T.scale(p.fromArray(g.scale)),g.scalingOffset&&I.setPosition(p.fromArray(g.scalingOffset)),g.scalingPivot&&L.setPosition(p.fromArray(g.scalingPivot)),g.rotationOffset&&z.setPosition(p.fromArray(g.rotationOffset)),g.rotationPivot&&V.setPosition(p.fromArray(g.rotationPivot)),g.parentMatrixWorld&&(H=g.parentMatrixWorld);var Ee=x.multiply(M).multiply(_),j=new fe;H.extractRotation(j);var Pe=new fe;Pe.copyPosition(H);var de=new fe;de.getInverse(j).multiply(H);var Te=new fe;if(Z===0)Te.copy(j).multiply(Ee).multiply(de).multiply(T);else if(Z===1)Te.copy(j).multiply(de).multiply(Ee).multiply(T);else{var Me=new fe().getInverse(T),Ie=new fe().multiply(de).multiply(Me);Te.copy(j).multiply(Ee).multiply(Ie).multiply(T)}var Ae=new fe().getInverse(V),J=new fe().getInverse(L),Q=new fe;Q.copy(y).multiply(z).multiply(V).multiply(x).multiply(M).multiply(_).multiply(Ae).multiply(I).multiply(L).multiply(T).multiply(J);var te=new fe().copyPosition(Q),ge=new fe().copy(H).multiply(te);return k.copyPosition(ge),Q=new fe().multiply(k).multiply(Te),Q}function A(g){g=g||0;var y=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return g===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),y[0]):y[g]}function R(g){var y=g.split(",").map(function(x){return parseFloat(x)});return y}function S(g,y,x){return y===void 0&&(y=0),x===void 0&&(x=g.byteLength),yr.decodeText(new Uint8Array(g,y,x))}function D(g,y){for(var x=0,M=g.length,_=y.length;x<_;x++,M++)g[M]=y[x]}function N(g,y,x,M){for(var _=x,T=0;_<M;_++,T++)g[T]=y[_];return g}function U(g,y,x){return g.slice(0,y).concat(x).concat(g.slice(y))}return i}(),Yd={exports:{}};(function(t,e){var n=n||function(){var i=[];return{getAll:function(){return i},removeAll:function(){i=[]},add:function(r){i.push(r)},remove:function(r){var s=i.indexOf(r);s!==-1&&i.splice(s,1)},update:function(r,s){if(i.length===0)return!1;var o=0;for(r=r!==void 0?r:n.now();o<i.length;)i[o].update(r)||s?o++:i.splice(o,1);return!0}}}();typeof window=="undefined"&&typeof process!="undefined"?n.now=function(){var i=process.hrtime();return i[0]*1e3+i[1]/1e6}:typeof window!="undefined"&&window.performance!==void 0&&window.performance.now!==void 0?n.now=window.performance.now.bind(window.performance):Date.now!==void 0?n.now=Date.now:n.now=function(){return new Date().getTime()},n.Tween=function(i){var r=i,s={},o={},a={},c=1e3,l=0,h,u=!1,f=!1,d=0,m=null,b=n.Easing.Linear.None,w=n.Interpolation.Linear,v=[],p=null,E=!1,A=null,R=null,S=null;this.to=function(D,N){return o=D,N!==void 0&&(c=N),this},this.start=function(D){n.add(this),f=!0,E=!1,m=D!==void 0?D:n.now(),m+=d;for(var N in o){if(o[N]instanceof Array){if(o[N].length===0)continue;o[N]=[r[N]].concat(o[N])}r[N]!==void 0&&(s[N]=r[N],s[N]instanceof Array||(s[N]*=1),a[N]=s[N]||0)}return this},this.stop=function(){return f?(n.remove(this),f=!1,S!==null&&S.call(r,r),this.stopChainedTweens(),this):this},this.end=function(){return this.update(m+c),this},this.stopChainedTweens=function(){for(var D=0,N=v.length;D<N;D++)v[D].stop()},this.delay=function(D){return d=D,this},this.repeat=function(D){return l=D,this},this.repeatDelay=function(D){return h=D,this},this.yoyo=function(D){return u=D,this},this.easing=function(D){return b=D,this},this.interpolation=function(D){return w=D,this},this.chain=function(){return v=arguments,this},this.onStart=function(D){return p=D,this},this.onUpdate=function(D){return A=D,this},this.onComplete=function(D){return R=D,this},this.onStop=function(D){return S=D,this},this.update=function(D){var N,U,g;if(D<m)return!0;E===!1&&(p!==null&&p.call(r,r),E=!0),U=(D-m)/c,U=U>1?1:U,g=b(U);for(N in o)if(s[N]!==void 0){var y=s[N]||0,x=o[N];x instanceof Array?r[N]=w(x,g):(typeof x=="string"&&(x.charAt(0)==="+"||x.charAt(0)==="-"?x=y+parseFloat(x):x=parseFloat(x)),typeof x=="number"&&(r[N]=y+(x-y)*g))}if(A!==null&&A.call(r,g),U===1)if(l>0){isFinite(l)&&l--;for(N in a){if(typeof o[N]=="string"&&(a[N]=a[N]+parseFloat(o[N])),u){var M=a[N];a[N]=o[N],o[N]=M}s[N]=a[N]}return h!==void 0?m=D+h:m=D+d,!0}else{R!==null&&R.call(r,r);for(var _=0,T=v.length;_<T;_++)v[_].start(m+c);return!1}return!0}},n.Easing={Linear:{None:function(i){return i}},Quadratic:{In:function(i){return i*i},Out:function(i){return i*(2-i)},InOut:function(i){return(i*=2)<1?.5*i*i:-.5*(--i*(i-2)-1)}},Cubic:{In:function(i){return i*i*i},Out:function(i){return--i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i:.5*((i-=2)*i*i+2)}},Quartic:{In:function(i){return i*i*i*i},Out:function(i){return 1- --i*i*i*i},InOut:function(i){return(i*=2)<1?.5*i*i*i*i:-.5*((i-=2)*i*i*i-2)}},Quintic:{In:function(i){return i*i*i*i*i},Out:function(i){return--i*i*i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i*i*i:.5*((i-=2)*i*i*i*i+2)}},Sinusoidal:{In:function(i){return 1-Math.cos(i*Math.PI/2)},Out:function(i){return Math.sin(i*Math.PI/2)},InOut:function(i){return .5*(1-Math.cos(Math.PI*i))}},Exponential:{In:function(i){return i===0?0:Math.pow(1024,i-1)},Out:function(i){return i===1?1:1-Math.pow(2,-10*i)},InOut:function(i){return i===0?0:i===1?1:(i*=2)<1?.5*Math.pow(1024,i-1):.5*(-Math.pow(2,-10*(i-1))+2)}},Circular:{In:function(i){return 1-Math.sqrt(1-i*i)},Out:function(i){return Math.sqrt(1- --i*i)},InOut:function(i){return(i*=2)<1?-.5*(Math.sqrt(1-i*i)-1):.5*(Math.sqrt(1-(i-=2)*i)+1)}},Elastic:{In:function(i){return i===0?0:i===1?1:-Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI)},Out:function(i){return i===0?0:i===1?1:Math.pow(2,-10*i)*Math.sin((i-.1)*5*Math.PI)+1},InOut:function(i){return i===0?0:i===1?1:(i*=2,i<1?-.5*Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI):.5*Math.pow(2,-10*(i-1))*Math.sin((i-1.1)*5*Math.PI)+1)}},Back:{In:function(i){var r=1.70158;return i*i*((r+1)*i-r)},Out:function(i){var r=1.70158;return--i*i*((r+1)*i+r)+1},InOut:function(i){var r=2.5949095;return(i*=2)<1?.5*(i*i*((r+1)*i-r)):.5*((i-=2)*i*((r+1)*i+r)+2)}},Bounce:{In:function(i){return 1-n.Easing.Bounce.Out(1-i)},Out:function(i){return i<1/2.75?7.5625*i*i:i<2/2.75?7.5625*(i-=1.5/2.75)*i+.75:i<2.5/2.75?7.5625*(i-=2.25/2.75)*i+.9375:7.5625*(i-=2.625/2.75)*i+.984375},InOut:function(i){return i<.5?n.Easing.Bounce.In(i*2)*.5:n.Easing.Bounce.Out(i*2-1)*.5+.5}}},n.Interpolation={Linear:function(i,r){var s=i.length-1,o=s*r,a=Math.floor(o),c=n.Interpolation.Utils.Linear;return r<0?c(i[0],i[1],o):r>1?c(i[s],i[s-1],s-o):c(i[a],i[a+1>s?s:a+1],o-a)},Bezier:function(i,r){for(var s=0,o=i.length-1,a=Math.pow,c=n.Interpolation.Utils.Bernstein,l=0;l<=o;l++)s+=a(1-r,o-l)*a(r,l)*i[l]*c(o,l);return s},CatmullRom:function(i,r){var s=i.length-1,o=s*r,a=Math.floor(o),c=n.Interpolation.Utils.CatmullRom;return i[0]===i[s]?(r<0&&(a=Math.floor(o=s*(1+r))),c(i[(a-1+s)%s],i[a],i[(a+1)%s],i[(a+2)%s],o-a)):r<0?i[0]-(c(i[0],i[0],i[1],i[1],-o)-i[0]):r>1?i[s]-(c(i[s],i[s],i[s-1],i[s-1],o-s)-i[s]):c(i[a?a-1:0],i[a],i[s<a+1?s:a+1],i[s<a+2?s:a+2],o-a)},Utils:{Linear:function(i,r,s){return(r-i)*s+i},Bernstein:function(i,r){var s=n.Interpolation.Utils.Factorial;return s(i)/s(r)/s(i-r)},Factorial:function(){var i=[1];return function(r){var s=1;if(i[r])return i[r];for(var o=r;o>1;o--)s*=o;return i[r]=s,s}}(),CatmullRom:function(i,r,s,o,a){var c=(s-i)*.5,l=(o-r)*.5,h=a*a,u=a*h;return(2*r-2*s+c+l)*u+(-3*r+3*s-2*c-l)*h+c*a+r}}},function(i){t.exports=n}()})(Yd);var uh=Yd.exports;let Qx=`
  <path class="path" d="
    M 30 15
    L 28 17
    M 25.61 25.61
    A 15 15, 0, 0, 1, 15 30
    A 15 15, 0, 1, 1, 27.99 7.5
    L 15 15
  " style="stroke-width: 4px; fill: rgba(0, 0, 0, 0)"/>
`;const Bo={name:"",light:1,show:!1,Describe:"",flag:!1,Meshes:[]};let ar=null,Xe=null,ct=null,cr=null,Tn=null,lc=null,No=null,Uo=null,En=null,lr=null,ur=null,zt=null;const e_={name:"model",components:{navbar:ep},data(){return{svg:Qx,headers:{},order:null,id:null,flag:null,objChildren:{label:"",MeshName:"",Size:"",Tags:[]},loading:!0,percentage:0,modelDetail:null,showOne:!1,divShow:!1,showSwitch:null,information:Object.assign({},Bo),texture:"",modelObj:"",texturePro:{},url:ip,iconFlag:!0,itemActive:0,styleObject:{height:0}}},created(){this.id=this.$route.query.id,this.initOrder()},unmounted(){window.removeEventListener("resize",this.onWindowResize,!1)},watch:{modelDetail(){this.$nextTick(()=>{this.init(),this.loadModel(),this.animate()})},"information.light"(t){lr!=null&&(lr.intensity=t)}},methods:{getToken(){const t=Ca();t&&t!=="Bearer null"&&t!=="Beare undefined"&&(this.headers.authorization=Ca())},initOrder(){tp(this.id).then(t=>{t.code===2e4?(console.log(t.data),this.order=t.data,this.getModel()):(this.$message({message:this.$t("initOrderFail"),type:"error",duration:1500}),this.$router.back(-1))}).catch(t=>{this.$message({message:t,type:"error",duration:1500}),this.$router.back(-1)})},getModel(){let t=JSON.parse(this.order.modelData);this.modelDetail=t,this.order.modelTag?this.information=JSON.parse(this.order.modelTag):this.information=Object.assign({},Bo),this.information!=null&&this.information!==void 0?this.information.flag?this.flag=!1:(this.flag=!0,this.information=Object.assign({},Bo)):(this.information=Object.assign({},Bo),this.flag=!0)},init(){this.initScene(),this.initCamera(),this.initRenderer(),this.initLight(),this.initControls(),this.initModel(),this.initTexturePro()},animate(){requestAnimationFrame(this.animate),En.update(),ur.position.copy(ct.position),uh.update(),Tn.render(ar,ct)},LoadTexturePro(t,e){if(t.disable)return;t.emissive=="0x"&&(t.emissive="0xffffff");function n(s){var o=0;try{s=="0x"?o=new Number("0x0"):o=new Number(s)}catch(a){console.log(a)}return o}var i={color:t.color,specular:n(t.specular),shininess:n(t.shininess),emissive:n(t.emissive),emissiveIntensity:t.emissiveIntensity,bumpScale:t.bumpScale,normalScale:t.normalScale,displacementScale:t.displacementScale,displacementBias:t.displacementBias,transparent:t.transparent,opacity:t.opacity,castShadow:t.castShadow,receiveShadow:t.receiveShadow,combine:t.combine,reflectivity:t.reflectivity,clearCoat:t.clearCoat,clearCoatRoughness:t.clearCoatRoughness,refractionRatio:t.refractionRatio,roughness:t.roughness,metalness:t.metalness,envMapIntensity:t.envMapIntensity,side:t.side,aoMapIntensity:t.aoMapIntensity,wireframe:t.wireframe,wireframeLinewidth:t.wireframeLinewidth,wireframeLinecap:t.wireframeLinecap,wireframeLinejoin:t.wireframeLinejoin},r;switch(t.type){case"MeshPhongMaterial":r=new Ot(i);break;case"MeshPhysicalMaterial":r=new On(i);break;case"MeshLambertMaterial":r=new Fn(i);break;default:r=new Ot(i);break}e.material=r,e.material.skinning=!0,e.castShadow=t.castShadow,e.receiveShadow=t.receiveShadow},loadModel(){No.remove(Xe),this.percentage=0,this.initCamera(),this.initControls();var t=this;function e(){if(t.flag==!0){t.information.label=Xe.name,t.information.Meshes=[];for(var a=0;a<Xe.children.length;a++){var c={label:"",MeshName:"",Size:"",Tags:[],Color:""};c.label=Xe.children[a].name;let l=Xe.children[a].material.length?Xe.children[a].material[0]:Xe.children[a].material;c.Color="rgba("+l.color.r*255+","+l.color.g*255+","+l.color.b*255+","+l.opacity+")",t.information.Meshes.push(c)}}Xe.traverse(function(l){if(t.texture!=null&&t.texture!=""&&(t.texturePro.map=t.texture),console.log(l),l.isMesh){var h=t.getMeshByName(l.name);if(console.log(h),h.Color&&h.Color!=null&&h.Color!=""){var u=t.getRgba(h.Color);u.length!=0?(t.texturePro.color=new oe(u[0]/255,u[1]/255,u[2]/255),t.texturePro.opacity=u[3]):(t.texturePro.color=l.material.color,t.texturePro.opacity=l.material.opacity)}else t.texturePro.color=l.material.color,t.texturePro.opacity=l.material.opacity;var f=l.geometry;l.geometry.isBufferGeometry&&(f=new Ue,f.fromBufferGeometry(l.geometry)),f.mergeVertices(),f.computeFlatVertexNormals(),f.computeVertexNormals()}t.LoadTexturePro(t.texturePro,l)}),No.add(Xe)}var n=new Sa(e);if(n.onProgress=function(a,c,l){console.log(a,c,l)},this.modelDetail.mapName.length!=0){var i=new Ir(n);let a=`${zi.globalURL}${zi.getFile("common")}${t.modelDetail.mapName[0]}`,c=new XMLHttpRequest;c.open("get",a,!0),c.setRequestHeader("authorization",Ca()),c.responseType="blob",c.onload=function(){t.texture=i.load(this.response)},c.send()}function r(a){if(a.lengthComputable){const c=a.loaded/a.total*100;t.percentage=Math.round(c,2),t.percentage}}function s(a){console.log(a),console.log("a error happen")}var o=new $x(n);console.log(`${zi.globalURL}${zi.getFiles("model")}${t.modelDetail.modelName}`),o.load(`${zi.globalURL}${zi.getFiles("model")}${t.modelDetail.modelName}`,function(a){console.log(a),Xe=a,t.loading=!1,t.setMesh()},r,s)},initScene(){ar=new _a,cr=new Y},initCamera(){var t=document.getElementsByClassName("canvas")[0];t.style.width="100%",t.style.height="100%",ct=new Qe(45,t.clientWidth/t.clientHeight,.1,1e8),ct.position.z=2e3,ct.lookAt(new C(0,0,0))},initRenderer(){const t=document.getElementsByClassName("canvas")[0];Tn=new Vr({canvas:t,antialias:!0,autoClear:!0,logarithmicDepthBuffer:!0});const e=t.getContext("webgl2");e.enable(e.CULL_FACE),e.cullFace(e.BACK),Tn.physicallyCorrectLights=!0,Tn.shadowMapEnabled=!0,Tn.shadowMap.type=2,Tn.setPixelRatio(window.devicePixelRatio),Tn.setSize(t.clientWidth,t.clientHeight),window.addEventListener("resize",this.onWindowResize,!1)},initLight(){this.flag?lr=new Oi(11513775,1):lr=new Oi(11513775,this.information.light),lr.name="AmbientLight ",ar.add(lr),ur=new Fr(16777215,2),ur.name="_bindCamera",ur.position.set(0,1e4,0),ur.lookAt(new C(0,0,0)),ar.add(ur)},initControls(){En=new Yx(ct,Tn.domElement),En.enableDamping=!0,En.dampingFactor=.25,En.enableZoom=!0,En.autoRotate=!1,En.enablePan=!0},initModel(){No=new $t,ar.add(No)},initTexturePro(){this.texturePro.disable=!1,this.texturePro.polygonOffset=!0,this.texturePro.polygonOffsetFactor=.75,this.texturePro.polygonOffsetUnits=4,this.texturePro.new="new",this.texturePro.old="old",this.texturePro.type="MeshPhongMaterial",this.texturePro.map={},this.texturePro.depthTest=!1,this.texturePro.depthWrite=!1,this.texturePro.aoMap={},this.texturePro.aoMapIntensity=1,this.texturePro.specular="0x111111",this.texturePro.specularMap={},this.texturePro.shininess=30,this.texturePro.emissive="0xffffff",this.texturePro.emissiveMap={},this.texturePro.emissiveIntensity=0,this.texturePro.bumpMap={},this.texturePro.bumpScale=1,this.texturePro.normalMap={},this.texturePro.normalScale=new Y(1,1),this.texturePro.displacementMap={},this.texturePro.displacementScale=1,this.texturePro.displacementBias=0,this.texturePro.alphaMap={},this.texturePro.transparent=!0,this.texturePro.opacity=1,this.texturePro.lightMap={},this.texturePro.lightMapIntensity=1,this.texturePro.castShadow=!1,this.texturePro.receiveShadow=!1,this.texturePro.envMap={},this.texturePro.envMapShowType=1,this.texturePro.envMapOn=!1,this.texturePro.envMapOn2=!1,this.texturePro.combine=Br,this.texturePro.envMapTypeSet=0,this.texturePro.reflectivity=1,this.texturePro.refractionRatio=.98,this.texturePro.side=Bi,this.texturePro.wireframe=!1,this.texturePro.wireframeLinewidth=1,this.texturePro.wireframeLinecap="round1",this.texturePro.wireframeLinejoin="round2",this.texturePro.mapping=br,this.texturePro.magFilter=rt,this.texturePro.minFilter=rt},onDocumentMouseClick(t){const e=document.getElementsByClassName("canvas")[0];cr.x=(t.clientX-e.getBoundingClientRect().left)/e.offsetWidth*2-1,cr.y=-((t.clientY-e.getBoundingClientRect().top)/e.offsetHeight)*2+1;var n=new C(cr.x,cr.y,.5).unproject(ct);lc=new Ea(ct.position,n.sub(ct.position).normalize()),lc.setFromCamera(cr,ct);const i=lc.intersectObjects(ar.children,!0);i.length>0?(this.showSwitch=!1,zt=i[0].object,this.showOne=!0,this.objChildren=this.getMeshByName(zt.name)):this.divShow?this.showOne=!0:this.showOne=!1},onWindowResize(){ct.aspect=window.innerWidth/window.innerHeight,ct.updateProjectionMatrix(),Tn.setSize(window.innerWidth,window.innerHeight)},routerBack(){this.$router.back(-1)},getMeshByName(t){console.log(this.information.Meshes);for(var e=0;e<this.information.Meshes.length;e++)if(this.itemActive=e,t==this.information.Meshes[e].label)return this.information.Meshes[e]},getRgba(t){return t.match(/(\d(\.\d+)?)+/g)},setMesh(){const t=new sn().setFromObject(Xe);Uo=t.getCenter(),Xe.position.x=0-Uo.x,Xe.position.y=0-Uo.y,Xe.position.z=0-Uo.z;var e=ct,n=e.min?e.min:4,i=e.max?e.max:4,r=t.getSize(),s=r.y;s<r.x&&(s=r.x),s<r.z&&(s=r.z);var o=ct.position.x,a=ct.position.y,c=s/(2*Math.tan(ct.fov*Math.PI/360))*2,l=new C(o,a,c);En.minDistance=l.z/n,ct.min=n,En.maxDistance=l.z*i,ct.max=i,e.position.x=l.x,e.position.y=l.y;var h=Math.max(Math.max(r.y,r.x),r.z);h<l.z?e.position.z=l.z:e.position.z=h},changeAnnoattion(t){new uh.Tween(ct.position).to({x:t.x,y:t.y,z:t.z},1e3).onUpdate(function(){}).onComplete(function(){}).start()},showModelInformation(t){t.stopPropagation(),this.divShow=!0,this.showSwitch=!0},editDiv(t,e,n){if(t.stopPropagation(),t.preventDefault(),this.itemActive=n,this.showSwitch=!1,this.divShow=!0,this.objChildren=e,Xe!=null)for(var i=0;i<Xe.children.length;i++)Xe.children[i].name==e.label&&(zt=Xe.children[i],zt.geometry.computeBoundingBox())},changeColor(t){var e=this.getRgba(t.Color);zt=Xe.getObjectByName(t.label),zt.material.color.r=e[0]/255,zt.material.color.g=e[1]/255,zt.material.color.b=e[2]/255,zt.material.opacity=e[3];for(var n=0;n<Xe.children.length;n++)Xe.children[n].material.opacity<1?(Xe.children[n].material.transparent=!0,Xe.children[n].material.depthWrite=!1):(Xe.children[n].material.transparent=!1,Xe.children[n].material.depthWrite=!0);var i=new C;i.addVectors(zt.geometry.boundingBox.min,zt.geometry.boundingBox.max),i.multiplyScalar(.5),i.applyMatrix4(zt.matrixWorld),this.changeAnnoattion(i)},changeShow(t){t.preventDefault(),this.showSwitch=null,this.divShow=!1,this.showOne=!1},EventOpen(){this.iconFlag=!this.iconFlag},onCanvasTagMouseClick(t){t.stopPropagation(),t.preventDefault(),this.showOne=!0,this.divShow=!0}}},t_=t=>(ap("data-v-78fbf1be"),t=t(),cp(),t),n_={class:"right-container"},i_=["element-loading-spinner"],r_={class:"aside_box_warpper"},s_={id:"collapse_list"},o_=["onClick"],a_={class:"canvas_main"},c_=t_(()=>Lt("canvas",{class:"canvas"},null,-1));function l_(t,e,n,i,r,s){const o=on("navbar"),a=on("el-color-picker"),c=on("el-scrollbar"),l=on("el-aside"),h=on("el-form-item"),u=on("el-input"),f=on("el-select"),d=on("el-button"),m=on("el-form"),b=on("el-switch"),w=sp("loading");return Hi(),Ys(Zl,null,[ze(o,null,{right:at(()=>[Lt("div",n_,[Lt("button",{class:"back",onClick:e[0]||(e[0]=(...v)=>s.routerBack&&s.routerBack(...v))},Vi(t.$t("back")),1)])]),_:1}),jl((Hi(),Ys("div",{class:"canvas_box","element-loading-text":"Loading...","element-loading-spinner":r.svg,"element-loading-svg-view-box":"-10, -10, 50, 50","element-loading-background":"rgba(122, 122, 122, 0.8)"},[Lt("div",{class:"canvas_left_aside",style:Xl(r.iconFlag===!0?"margin-left: -0px;":"margin-left: -220px;")},[ze(l,{class:"aside_box"},{default:at(()=>[Lt("div",r_,[ze(c,{id:"scrollbar_box_div","wrap-class":"scrollbar-wrapper"},{default:at(()=>[Lt("div",{style:Xl({height:(r.information.Meshes.length+1)*40+"px"})},[Lt("ul",s_,[Lt("li",{onClick:e[1]||(e[1]=v=>s.showModelInformation())},[Lt("span",null,Vi(t.$t("models")),1)]),(Hi(!0),Ys(Zl,null,lp(r.information.Meshes,(v,p)=>(Hi(),Ys("li",{key:p,class:ql(r.itemActive===p?"active":""),onClick:E=>s.editDiv(E,v,p)},[ze(a,{modelValue:v.Color,"onUpdate:modelValue":E=>v.Color=E,"show-alpha":"",onChange:E=>s.changeColor(v)},null,8,["modelValue","onUpdate:modelValue","onChange"]),Lt("span",null,Vi(v.label),1)],10,o_))),128))])],4)]),_:1})])]),_:1}),Lt("i",{class:ql(r.iconFlag?"el-icon-caret-left icon_open":"el-icon-caret-right icon_close"),onClick:e[2]||(e[2]=v=>s.EventOpen())},null,2)],4),Lt("div",a_,[jl(Lt("div",{class:"canvas_tag",onClick:e[16]||(e[16]=Ra(v=>s.onCanvasTagMouseClick(v),["stop"]))},[r.showSwitch?(Hi(),Yl(m,{key:1,size:"small"},{default:at(()=>[ze(h,{prop:"light",label:t.$t("light"),width:"180"},{default:at(()=>[ze(u,{modelValue:r.information.light,"onUpdate:modelValue":e[11]||(e[11]=v=>r.information.light=v),type:"number",placeholder:t.$t("lightPlace")},null,8,["modelValue","placeholder"])]),_:1},8,["label"]),ze(h,{prop:"show",label:t.$t("descFlag"),width:"180"},{default:at(()=>[ze(b,{modelValue:r.information.show,"onUpdate:modelValue":e[12]||(e[12]=v=>r.information.show=v)},null,8,["modelValue"])]),_:1},8,["label"]),ze(h,{prop:"name",label:t.$t("names"),width:"180"},{default:at(()=>[ze(u,{modelValue:r.information.name,"onUpdate:modelValue":e[13]||(e[13]=v=>r.information.name=v),placeholder:t.$t("namesPlace")},null,8,["modelValue","placeholder"])]),_:1},8,["label"]),ze(h,{prop:"Describe",label:t.$t("describe"),width:"180"},{default:at(()=>[ze(u,{modelValue:r.information.Describe,"onUpdate:modelValue":e[14]||(e[14]=v=>r.information.Describe=v),type:"textarea",placeholder:t.$t("describePlace")},null,8,["modelValue","placeholder"])]),_:1},8,["label"]),ze(h,null,{default:at(()=>[ze(d,{style:{float:"right","margin-top":"10px"},type:"primary",size:"small",onClick:e[15]||(e[15]=Ra(v=>s.changeShow(v),["stop"]))},{default:at(()=>[Pa(Vi(t.$t("confirm"))+"} ",1)]),_:1})]),_:1})]),_:1})):(Hi(),Yl(m,{key:0,modelValue:r.objChildren,"onUpdate:modelValue":e[10]||(e[10]=v=>r.objChildren=v),size:"small"},{default:at(()=>[ze(h,{class:"diag-item",prop:"label",label:t.$t("label"),width:"180"},{default:at(()=>[Pa(Vi(r.objChildren.label),1)]),_:1},8,["label"]),ze(h,{class:"diag-item",prop:"name",label:t.$t("names"),width:"180"},{default:at(()=>[ze(u,{modelValue:r.objChildren.MeshName,"onUpdate:modelValue":e[3]||(e[3]=v=>r.objChildren.MeshName=v),placeholder:t.$t("namesPlace")},null,8,["modelValue","placeholder"])]),_:1},8,["label"]),ze(h,{class:"diag-item",prop:"Describe",label:t.$t("describe"),width:"180"},{default:at(()=>[ze(u,{modelValue:r.objChildren.Describe,"onUpdate:modelValue":e[4]||(e[4]=v=>r.objChildren.Describe=v),type:"textarea",placeholder:t.$t("describePlace")},null,8,["modelValue","placeholder"])]),_:1},8,["label"]),ze(h,{class:"diag-item",prop:"size",label:t.$t("size"),width:"180"},{default:at(()=>[ze(u,{modelValue:r.objChildren.Size,"onUpdate:modelValue":e[5]||(e[5]=v=>r.objChildren.Size=v),placeholder:t.$t("sizePlace")},null,8,["modelValue","placeholder"])]),_:1},8,["label"]),ze(h,{class:"diag-item",label:t.$t("label")},{default:at(()=>[ze(f,{modelValue:r.objChildren.Tags,"onUpdate:modelValue":e[6]||(e[6]=v=>r.objChildren.Tags=v),clearable:"",multiple:"",filterable:"","allow-create":"","default-first-option":"",placeholder:t.$t("labelPlace")},null,8,["modelValue","placeholder"])]),_:1},8,["label"]),ze(h,{class:"diag-item",label:t.$t("colorAlpha")},{default:at(()=>[ze(a,{modelValue:r.objChildren.Color,"onUpdate:modelValue":e[7]||(e[7]=v=>r.objChildren.Color=v),"show-alpha":"",onChange:e[8]||(e[8]=v=>s.changeColor(r.objChildren))},null,8,["modelValue"])]),_:1},8,["label"]),ze(h,null,{default:at(()=>[ze(d,{style:{float:"right","margin-top":"10px"},type:"primary",size:"small",onClick:e[9]||(e[9]=Ra(v=>s.changeShow(v),["stop"]))},{default:at(()=>[Pa(Vi(t.$t("confirm")),1)]),_:1})]),_:1})]),_:1},8,["modelValue"]))],512),[[op,r.showOne]]),c_])],8,i_)),[[w,r.loading]])],64)}var p_=np(e_,[["render",l_],["__scopeId","data-v-78fbf1be"]]);export{p_ as default};
